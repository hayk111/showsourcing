# this is an auto generated file. This will be overwritten
query GetStreamToken($teamId: String) {
  getStreamToken(teamId: $teamId) {
    token
    feedName
    feedId
  }
}
query GetStreamNotificationToken($teamId: String) {
  getStreamNotificationToken(teamId: $teamId) {
    token
    feedName
    feedId
  }
}
query SyncAProduct($teamId: String) {
  syncAProduct(teamId: $teamId) {
    id
    teamId
    statusId
    status {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    supplierId
    supplier {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    categoryId
    category {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    eventId
    event {
      id
      teamId
      global
      name
      description
      website
      startDate
      endDate
      countryCode
      venueId
      venue {
        id
        teamId
        global
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierCount
      industries {
        nextToken
        startedAt
      }
      primaryColor
      secondaryColor
      globalEventId
      globalEvent {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    favorite
    assigneeId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    score
    attachmentsId
    attachments {
      items {
        id
        teamId
        fileName
        url
        size
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    projects {
      items {
        id
        teamId
        projectId
        productId
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    fields {
      id
      fieldDescriptorId
      value
    }
    incoTerm
    harbour
    masterCbm
    quantityPer20ft
    quantityPer40ft
    quantityPer40ftHC
    itemDimension {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    innerCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    masterCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    priceMatrix {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    leadTime
    sample
    samplePrice {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    price {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    name
    description
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query SearchProductsByTeams(
  $teamIds: [String!]!
  $filter: SearchFilterInput
  $sort: SearchSortInput
  $take: Int
  $skip: Int
) {
  searchProductsByTeams(
    teamIds: $teamIds
    filter: $filter
    sort: $sort
    take: $take
    skip: $skip
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      categoryId
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      eventId
      event {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      score
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      projects {
        nextToken
        startedAt
      }
      fields {
        id
        fieldDescriptorId
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      leadTime
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      name
      description
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    count
    skip
    take
  }
}
query SyncTeams(
  $filter: ModelTeamFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeams(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncInvitations(
  $filter: ModelInvitationFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncInvitations(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      email
      firstName
      lastName
      status
      secret
      createdAt
      createdByUserId
      deletedByUserId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetInvitation($id: ID!) {
  getInvitation(id: $id) {
    id
    teamId
    email
    firstName
    lastName
    status
    secret
    createdAt
    createdByUserId
    deletedByUserId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListInvitations(
  $id: ID
  $filter: ModelInvitationFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listInvitations(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      email
      firstName
      lastName
      status
      secret
      createdAt
      createdByUserId
      deletedByUserId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTeamUsers(
  $filter: ModelTeamUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeamUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      teamId
      userId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      user {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      role
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTeamUser(
  $teamId: ID
  $userId: ModelIDKeyConditionInput
  $filter: ModelTeamUserFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTeamUser(
    teamId: $teamId
    userId: $userId
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      teamId
      userId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      user {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      role
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncCompanies(
  $filter: ModelCompanyFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCompanies(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCompany($id: ID!) {
  getCompany(id: $id) {
    id
    name
    ownerUserId
    owner {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    createdOn
    lastUpdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedOn
    _version
    _deleted
    _lastChangedAt
  }
}
query ListCompanys(
  $id: ID
  $filter: ModelCompanyFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listCompanys(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncRoles(
  $filter: ModelRoleFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncRoles(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      name
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    email
    firstName
    lastName
    phoneNumber
    preferredLanguage
    avatar
    creationDate
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncAttachments(
  $filter: ModelAttachmentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncAttachments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      fileName
      url
      size
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetAttachment($id: ID!) {
  getAttachment(id: $id) {
    id
    teamId
    fileName
    url
    size
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListAttachments(
  $filter: ModelAttachmentFilterInput
  $limit: Int
  $nextToken: String
) {
  listAttachments(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      fileName
      url
      size
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncCategories(
  $filter: ModelCategoryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCategories(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCategory($id: ID!) {
  getCategory(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListCategorys(
  $id: ID
  $filter: ModelCategoryFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listCategorys(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncComments(
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      message
      nodeId
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncContacts(
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncContacts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetContact($id: ID!) {
  getContact(id: $id) {
    id
    teamId
    name
    phoneNumber
    email
    jobTitle
    supplierId
    supplier {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListContacts(
  $id: ID
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listContacts(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncEvents(
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncEvents(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      global
      name
      description
      website
      startDate
      endDate
      countryCode
      venueId
      venue {
        id
        teamId
        global
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierCount
      industries {
        nextToken
        startedAt
      }
      primaryColor
      secondaryColor
      globalEventId
      globalEvent {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetEvent($id: ID!) {
  getEvent(id: $id) {
    id
    teamId
    global
    name
    description
    website
    startDate
    endDate
    countryCode
    venueId
    venue {
      id
      teamId
      global
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    logoImageId
    logoImage {
      id
      teamId
      fileName
      orientation
      type
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    supplierCount
    industries {
      items {
        id
        name
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    primaryColor
    secondaryColor
    globalEventId
    globalEvent {
      id
      teamId
      global
      name
      description
      website
      startDate
      endDate
      countryCode
      venueId
      venue {
        id
        teamId
        global
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierCount
      industries {
        nextToken
        startedAt
      }
      primaryColor
      secondaryColor
      globalEventId
      globalEvent {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListEvents(
  $id: ID
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listEvents(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      global
      name
      description
      website
      startDate
      endDate
      countryCode
      venueId
      venue {
        id
        teamId
        global
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierCount
      industries {
        nextToken
        startedAt
      }
      primaryColor
      secondaryColor
      globalEventId
      globalEvent {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncExports(
  $filter: ModelExportFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncExports(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      format
      target
      options
      query
      status
      documentUrl
      errors
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetExport($id: ID!) {
  getExport(id: $id) {
    id
    teamId
    format
    target
    options
    query
    status
    documentUrl
    errors
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListExports(
  $id: ID
  $filter: ModelExportFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listExports(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      format
      target
      options
      query
      status
      documentUrl
      errors
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncImages(
  $filter: ModelImageFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncImages(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      fileName
      orientation
      type
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetImage($id: ID!) {
  getImage(id: $id) {
    id
    teamId
    fileName
    orientation
    type
    size {
      s {
        id
        size
        url
      }
      m {
        id
        size
        url
      }
      l {
        id
        size
        url
      }
      xl {
        id
        size
        url
      }
      original {
        id
        size
        url
      }
    }
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListImages(
  $id: ID
  $filter: ModelImageFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listImages(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      fileName
      orientation
      type
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncIndustries(
  $filter: ModelIndustryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncIndustries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetIndustry($id: ID!) {
  getIndustry(id: $id) {
    id
    name
    _version
    _deleted
    _lastChangedAt
  }
}
query ListIndustrys(
  $id: ID
  $filter: ModelIndustryFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listIndustrys(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncProducts(
  $filter: ModelProductFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProducts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      categoryId
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      eventId
      event {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      score
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      projects {
        nextToken
        startedAt
      }
      fields {
        id
        fieldDescriptorId
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      leadTime
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      name
      description
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProduct($id: ID!) {
  getProduct(id: $id) {
    id
    teamId
    statusId
    status {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    supplierId
    supplier {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    categoryId
    category {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    eventId
    event {
      id
      teamId
      global
      name
      description
      website
      startDate
      endDate
      countryCode
      venueId
      venue {
        id
        teamId
        global
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierCount
      industries {
        nextToken
        startedAt
      }
      primaryColor
      secondaryColor
      globalEventId
      globalEvent {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    favorite
    assigneeId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    score
    attachmentsId
    attachments {
      items {
        id
        teamId
        fileName
        url
        size
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    projects {
      items {
        id
        teamId
        projectId
        productId
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    fields {
      id
      fieldDescriptorId
      value
    }
    incoTerm
    harbour
    masterCbm
    quantityPer20ft
    quantityPer40ft
    quantityPer40ftHC
    itemDimension {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    innerCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    masterCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    priceMatrix {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    leadTime
    sample
    samplePrice {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    price {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    name
    description
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query SyncProjects(
  $filter: ModelProjectFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProjects(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      dueDate
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      archived
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProject($id: ID!) {
  getProject(id: $id) {
    id
    teamId
    name
    logoImage {
      id
      teamId
      fileName
      orientation
      type
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    description
    products {
      items {
        id
        teamId
        projectId
        productId
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    assigneeId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    dueDate
    status {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    archived
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListProjects(
  $id: ID
  $filter: ModelProjectFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listProjects(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      dueDate
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      archived
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncProjectProducts(
  $filter: ModelProjectProductFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProjectProducts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      projectId
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      project {
        id
        teamId
        name
        description
        assigneeId
        dueDate
        archived
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSamples(
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSamples(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSample($id: ID!) {
  getSample(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    statusId
    status {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    description
    linkedProductId
    linkedProduct {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      categoryId
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      eventId
      event {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      score
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      projects {
        nextToken
        startedAt
      }
      fields {
        id
        fieldDescriptorId
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      leadTime
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      name
      description
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    linkedSupplierId
    linkedSupplier {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    price {
      currency
      value
      baseCurrencyValue
      label
      minimumOrderQuantity
    }
    paid
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSamples(
  $id: ID
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listSamples(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncWorkflowStatuses(
  $filter: ModelWorkflowStatusFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncWorkflowStatuses(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetWorkflowStatus($id: ID!) {
  getWorkflowStatus(id: $id) {
    id
    teamId
    name
    inWorkflow
    category
    step
    final
    type
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListWorkflowStatuss(
  $filter: ModelWorkflowStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  listWorkflowStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSupplierTypes(
  $filter: ModelSupplierTypeFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSupplierTypes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSupplierType($id: ID!) {
  getSupplierType(id: $id) {
    id
    teamId
    name
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSupplierTypes(
  $id: ID
  $filter: ModelSupplierTypeFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listSupplierTypes(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSuppliers(
  $filter: ModelSupplierFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSuppliers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSupplier($id: ID!) {
  getSupplier(id: $id) {
    id
    teamId
    statusId
    status {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    name
    fullName
    tradingName
    description
    logoImageId
    logoImage {
      id
      teamId
      fileName
      orientation
      type
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    website
    phoneNumber
    country
    city
    address
    officeEmail
    officePhone
    incoTerm
    harbour
    generalMOQ
    generalLeadTime
    attachmentsId
    attachments {
      items {
        id
        teamId
        fileName
        url
        size
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    favorite
    globalSupplierId
    globalSupplier {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    extendedFields {
      id
      fieldDescriptorId
      value
    }
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSuppliers(
  $id: ID
  $filter: ModelSupplierFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listSuppliers(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTags(
  $filter: ModelTagFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTags(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetTag($id: ID!) {
  getTag(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTags(
  $id: ID
  $filter: ModelTagFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTags(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTasks(
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTasks(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetTask($id: ID!) {
  getTask(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    description
    dueDate
    completed
    completionDate
    assigneeUserId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    productId
    product {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      categoryId
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      eventId
      event {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      score
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      projects {
        nextToken
        startedAt
      }
      fields {
        id
        fieldDescriptorId
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      leadTime
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      name
      description
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    supplierId
    supplier {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    reference
    referenceKey
    inProgress
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTasks(
  $id: ID
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listTasks(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncVenues(
  $filter: ModelVenueFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncVenues(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      global
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetVenue($id: ID!) {
  getVenue(id: $id) {
    id
    teamId
    global
    city
    name
    latitude
    country
    longitude
    addressFull
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListVenues(
  $id: ID
  $filter: ModelVenueFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listVenues(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      global
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncVotes(
  $filter: ModelVoteFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncVotes(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      rating
      message
      nodeId
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetVote($id: ID!) {
  getVote(id: $id) {
    id
    teamId
    rating
    message
    nodeId
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListVotes(
  $id: ID
  $filter: ModelVoteFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listVotes(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      rating
      message
      nodeId
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncConstants(
  $filter: ModelConstantFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncConstants(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      type
      code
      label
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetConstant($id: ID!) {
  getConstant(id: $id) {
    id
    type
    code
    label
    _version
    _deleted
    _lastChangedAt
  }
}
query ListConstants(
  $filter: ModelConstantFilterInput
  $limit: Int
  $nextToken: String
) {
  listConstants(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      type
      code
      label
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDescriptors(
  $filter: ModelDescriptorFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDescriptors(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      sections {
        name
      }
      type
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDescriptor($id: ID!) {
  getDescriptor(id: $id) {
    id
    teamId
    sections {
      name
      fields {
        id
        fieldId
        defaultValue
        fixedValue
        required
        metadata
      }
    }
    type
    name
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDescriptors(
  $id: ID
  $filter: ModelDescriptorFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listDescriptors(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      sections {
        name
      }
      type
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFieldDefinitions(
  $filter: ModelFieldDefinitionFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFieldDefinitions(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      label
      type
      name
      default
      metaData
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFieldDefinition($id: ID!) {
  getFieldDefinition(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    label
    type
    name
    default
    metaData
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFieldDefinitions(
  $filter: ModelFieldDefinitionFilterInput
  $limit: Int
  $nextToken: String
) {
  listFieldDefinitions(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      label
      type
      name
      default
      metaData
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListInvitationByTeam(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelInvitationFilterInput
  $limit: Int
  $nextToken: String
) {
  listInvitationByTeam(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      email
      firstName
      lastName
      status
      secret
      createdAt
      createdByUserId
      deletedByUserId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTeamUserByUser(
  $userId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelTeamUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listTeamUserByUser(
    userId: $userId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      teamId
      userId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      user {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      role
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListCompanyByOwner(
  $ownerUserId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelCompanyFilterInput
  $limit: Int
  $nextToken: String
) {
  listCompanyByOwner(
    ownerUserId: $ownerUserId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListRoles(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelRoleFilterInput
  $limit: Int
  $nextToken: String
) {
  listRoles(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListCategory(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelCategoryFilterInput
  $limit: Int
  $nextToken: String
) {
  listCategory(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListCommentByNode(
  $nodeId: String
  $sortDirection: ModelSortDirection
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
) {
  listCommentByNode(
    nodeId: $nodeId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      message
      nodeId
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListContact(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
) {
  listContact(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListContactBySupplier(
  $supplierId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
) {
  listContactBySupplier(
    supplierId: $supplierId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListEvent(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
) {
  listEvent(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      global
      name
      description
      website
      startDate
      endDate
      countryCode
      venueId
      venue {
        id
        teamId
        global
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierCount
      industries {
        nextToken
        startedAt
      }
      primaryColor
      secondaryColor
      globalEventId
      globalEvent {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListExport(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelExportFilterInput
  $limit: Int
  $nextToken: String
) {
  listExport(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      format
      target
      options
      query
      status
      documentUrl
      errors
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListProducts(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelProductFilterInput
  $limit: Int
  $nextToken: String
) {
  listProducts(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      categoryId
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      eventId
      event {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      score
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      projects {
        nextToken
        startedAt
      }
      fields {
        id
        fieldDescriptorId
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      leadTime
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      name
      description
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListProductByStatus(
  $statusId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelProductFilterInput
  $limit: Int
  $nextToken: String
) {
  listProductByStatus(
    statusId: $statusId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      categoryId
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      eventId
      event {
        id
        teamId
        global
        name
        description
        website
        startDate
        endDate
        countryCode
        venueId
        logoImageId
        supplierCount
        primaryColor
        secondaryColor
        globalEventId
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      score
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      projects {
        nextToken
        startedAt
      }
      fields {
        id
        fieldDescriptorId
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      leadTime
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      name
      description
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListProject(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelProjectFilterInput
  $limit: Int
  $nextToken: String
) {
  listProject(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      dueDate
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      archived
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListSampleByLinkedSupplier(
  $linkedSupplierId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
) {
  listSampleByLinkedSupplier(
    linkedSupplierId: $linkedSupplierId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListSampleByLinkedProduct(
  $linkedProductId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
) {
  listSampleByLinkedProduct(
    linkedProductId: $linkedProductId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListSampleByStatus(
  $statusId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
) {
  listSampleByStatus(
    statusId: $statusId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListWorkflowStatus(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelWorkflowStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  listWorkflowStatus(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      inWorkflow
      category
      step
      final
      type
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListSupplierType(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSupplierTypeFilterInput
  $limit: Int
  $nextToken: String
) {
  listSupplierType(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListSupplier(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSupplierFilterInput
  $limit: Int
  $nextToken: String
) {
  listSupplier(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListSuppliersByStatus(
  $statusId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSupplierFilterInput
  $limit: Int
  $nextToken: String
) {
  listSuppliersByStatus(
    statusId: $statusId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      logoImageId
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      attachmentsId
      attachments {
        nextToken
        startedAt
      }
      favorite
      globalSupplierId
      globalSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      extendedFields {
        id
        fieldDescriptorId
        value
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTag(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelTagFilterInput
  $limit: Int
  $nextToken: String
) {
  listTag(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTask(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
) {
  listTask(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTaskByProduct(
  $productId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
) {
  listTaskByProduct(
    productId: $productId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTaskBySupplier(
  $productId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
) {
  listTaskBySupplier(
    productId: $productId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListVenue(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelVenueFilterInput
  $limit: Int
  $nextToken: String
) {
  listVenue(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      global
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListVoteByNode(
  $nodeId: String
  $sortDirection: ModelSortDirection
  $filter: ModelVoteFilterInput
  $limit: Int
  $nextToken: String
) {
  listVoteByNode(
    nodeId: $nodeId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      rating
      message
      nodeId
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListDescriptor(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelDescriptorFilterInput
  $limit: Int
  $nextToken: String
) {
  listDescriptor(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      sections {
        name
      }
      type
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListDescriptorByType(
  $teamId: ID
  $type: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelDescriptorFilterInput
  $limit: Int
  $nextToken: String
) {
  listDescriptorByType(
    teamId: $teamId
    type: $type
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      sections {
        name
      }
      type
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SearchContacts(
  $filter: SearchableContactFilterInput
  $sort: SearchableContactSortInput
  $limit: Int
  $nextToken: String
) {
  searchContacts(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchExports(
  $filter: SearchableExportFilterInput
  $sort: SearchableExportSortInput
  $limit: Int
  $nextToken: String
) {
  searchExports(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      format
      target
      options
      query
      status
      documentUrl
      errors
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchProjects(
  $filter: SearchableProjectFilterInput
  $sort: SearchableProjectSortInput
  $limit: Int
  $nextToken: String
) {
  searchProjects(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        type
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      dueDate
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      archived
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchSamples(
  $filter: SearchableSampleFilterInput
  $sort: SearchableSampleSortInput
  $limit: Int
  $nextToken: String
) {
  searchSamples(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      statusId
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        type
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        minimumOrderQuantity
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchTasks(
  $filter: SearchableTaskFilterInput
  $sort: SearchableTaskSortInput
  $limit: Int
  $nextToken: String
) {
  searchTasks(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      productId
      product {
        id
        teamId
        statusId
        supplierId
        categoryId
        eventId
        favorite
        assigneeId
        score
        attachmentsId
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        leadTime
        sample
        name
        description
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplierId
      supplier {
        id
        teamId
        statusId
        name
        fullName
        tradingName
        description
        logoImageId
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        attachmentsId
        favorite
        globalSupplierId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
