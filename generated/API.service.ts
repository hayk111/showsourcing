/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.
import { Injectable } from "@angular/core";
import API, { graphqlOperation } from "@aws-amplify/api";
import { GraphQLResult } from "@aws-amplify/api/lib/types";
import * as Observable from "zen-observable";

export type CreateTeamInput = {
  name: string;
  companyId: string;
};

export enum Lang {
  EN = "EN",
  FR = "FR",
  CN = "CN"
}

export type CreateInvitationInput = {
  teamId: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  invitationCreatedById?: string | null;
  invitationDeletedById?: string | null;
  invitationLastUpdatedById?: string | null;
};

export type ModelInvitationConditionInput = {
  teamId?: ModelIDInput | null;
  email?: ModelStringInput | null;
  firstName?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  status?: ModelInvitationStatusInput | null;
  secret?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelInvitationConditionInput | null> | null;
  or?: Array<ModelInvitationConditionInput | null> | null;
  not?: ModelInvitationConditionInput | null;
};

export type ModelIDInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
  size?: ModelSizeInput | null;
};

export enum ModelAttributeTypes {
  binary = "binary",
  binarySet = "binarySet",
  bool = "bool",
  list = "list",
  map = "map",
  number = "number",
  numberSet = "numberSet",
  string = "string",
  stringSet = "stringSet",
  _null = "_null"
}

export type ModelSizeInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
};

export type ModelStringInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
  size?: ModelSizeInput | null;
};

export type ModelInvitationStatusInput = {
  eq?: InvitationStatus | null;
  ne?: InvitationStatus | null;
};

export enum InvitationStatus {
  SENT = "SENT",
  ACCEPTED = "ACCEPTED",
  REFUSED = "REFUSED"
}

export type ModelBooleanInput = {
  ne?: boolean | null;
  eq?: boolean | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type UpdateInvitationInput = {
  id: string;
  teamId?: string | null;
  email?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  status?: InvitationStatus | null;
  secret?: string | null;
  createdAt?: string | null;
  deletedAt?: string | null;
  lastUpdatedAt?: string | null;
  deleted?: boolean | null;
  invitationCreatedById?: string | null;
  invitationDeletedById?: string | null;
  invitationLastUpdatedById?: string | null;
};

export type DeleteInvitationInput = {
  id: string;
};

export type CreateTeamUserInput = {
  teamId: string;
  userId: string;
  role: TeamRole;
};

export enum TeamRole {
  TEAMOWNER = "TEAMOWNER",
  TEAMMEMBER = "TEAMMEMBER",
  TEAMVIEWER = "TEAMVIEWER"
}

export type ModelTeamUserConditionInput = {
  role?: ModelTeamRoleInput | null;
  and?: Array<ModelTeamUserConditionInput | null> | null;
  or?: Array<ModelTeamUserConditionInput | null> | null;
  not?: ModelTeamUserConditionInput | null;
};

export type ModelTeamRoleInput = {
  eq?: TeamRole | null;
  ne?: TeamRole | null;
};

export type UpdateTeamUserInput = {
  teamId: string;
  userId: string;
  role?: TeamRole | null;
};

export type DeleteTeamUserInput = {
  teamId: string;
  userId: string;
};

export type CreateCompanyInput = {
  name: string;
  companyCreatedById?: string | null;
  companyDeletedById?: string | null;
  companyLastUpdatedById?: string | null;
};

export type ModelCompanyConditionInput = {
  name?: ModelStringInput | null;
  ownerUserId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCompanyConditionInput | null> | null;
  or?: Array<ModelCompanyConditionInput | null> | null;
  not?: ModelCompanyConditionInput | null;
};

export type UpdateCompanyInput = {
  id: string;
  name?: string | null;
  ownerUserId?: string | null;
  createdAt?: string | null;
  deletedAt?: string | null;
  lastUpdatedAt?: string | null;
  deleted?: boolean | null;
  companyCreatedById?: string | null;
  companyDeletedById?: string | null;
  companyLastUpdatedById?: string | null;
};

export type DeleteCompanyInput = {
  id: string;
};

export type CreateRoleInput = {
  id: string;
  teamId: string;
  name: string;
  permissions?: PermisionMapInput | null;
};

export type PermisionMapInput = {
  comment: PermissionInput;
  contact: PermissionInput;
  event: PermissionInput;
  export: PermissionInput;
  image: PermissionInput;
  industry: PermissionInput;
  product: PermissionInput;
  project: PermissionInput;
  sample: PermissionInput;
  supplier: PermissionInput;
  tag: PermissionInput;
  task: PermissionInput;
  vote: PermissionInput;
  team: PermissionInput;
};

export type PermissionInput = {
  canCreate: boolean;
  canUpdate: boolean;
  canDelete: boolean;
  canList: boolean;
  canRead: boolean;
};

export type ModelRoleConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  and?: Array<ModelRoleConditionInput | null> | null;
  or?: Array<ModelRoleConditionInput | null> | null;
  not?: ModelRoleConditionInput | null;
};

export type UpdateRoleInput = {
  id: string;
  teamId?: string | null;
  name?: string | null;
  permissions?: PermisionMapInput | null;
};

export type DeleteRoleInput = {
  id: string;
};

export type CreateAttachmentInput = {
  id?: string | null;
  teamId: string;
  fileName: string;
  createdAt?: string | null;
  attachmentCreatedById?: string | null;
  attachmentDeletedById?: string | null;
  attachmentLastUpdatedById?: string | null;
};

export type ModelAttachmentConditionInput = {
  fileName?: ModelStringInput | null;
  url?: ModelStringInput | null;
  size?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelAttachmentConditionInput | null> | null;
  or?: Array<ModelAttachmentConditionInput | null> | null;
  not?: ModelAttachmentConditionInput | null;
};

export type ModelIntInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type CreateCategoryInput = {
  id: string;
  teamId: string;
  name: string;
  createdAt?: string | null;
  categoryCreatedById?: string | null;
  categoryDeletedById?: string | null;
  categoryLastUpdatedById?: string | null;
};

export type ModelCategoryConditionInput = {
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCategoryConditionInput | null> | null;
  or?: Array<ModelCategoryConditionInput | null> | null;
  not?: ModelCategoryConditionInput | null;
};

export type UpdateCategoryInput = {
  id: string;
  teamId: string;
  name: string;
  lastUpdatedAt?: string | null;
  _version: number;
  categoryCreatedById?: string | null;
  categoryDeletedById?: string | null;
  categoryLastUpdatedById?: string | null;
};

export type DeleteCategoryInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateCommentInput = {
  id: string;
  teamId: string;
  message: string;
  nodeId: string;
  createdAt?: string | null;
  commentCreatedById?: string | null;
  commentDeletedById?: string | null;
  commentLastUpdatedById?: string | null;
};

export type ModelCommentConditionInput = {
  message?: ModelStringInput | null;
  nodeId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCommentConditionInput | null> | null;
  or?: Array<ModelCommentConditionInput | null> | null;
  not?: ModelCommentConditionInput | null;
};

export type UpdateCommentInput = {
  id: string;
  teamId: string;
  message: string;
  nodeId: string;
  lastUpdatedAt?: string | null;
  _version: number;
  commentCreatedById?: string | null;
  commentDeletedById?: string | null;
  commentLastUpdatedById?: string | null;
};

export type DeleteCommentInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateContactInput = {
  id: string;
  teamId: string;
  name?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  jobTitle?: string | null;
  supplierId?: string | null;
  createdAt?: string | null;
  contactCreatedById?: string | null;
  contactDeletedById?: string | null;
  contactLastUpdatedById?: string | null;
};

export type ModelContactConditionInput = {
  name?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  email?: ModelStringInput | null;
  jobTitle?: ModelStringInput | null;
  supplierId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelContactConditionInput | null> | null;
  or?: Array<ModelContactConditionInput | null> | null;
  not?: ModelContactConditionInput | null;
};

export enum WorkflowType {
  PRODUCT = "PRODUCT",
  SUPPLIER = "SUPPLIER",
  TASK = "TASK",
  SAMPLE = "SAMPLE"
}

export enum ImageType {
  JPG = "JPG",
  PNG = "PNG",
  GIF = "GIF"
}

export type UpdateContactInput = {
  id: string;
  teamId: string;
  name?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  jobTitle?: string | null;
  supplierId?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  contactCreatedById?: string | null;
  contactDeletedById?: string | null;
  contactLastUpdatedById?: string | null;
};

export type DeleteContactInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateEventInput = {
  id: string;
  teamId: string;
  globalEventId: string;
  global: boolean;
  name: string;
  description?: string | null;
  website?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  countryCode?: string | null;
  venueId: string;
  logoImageId: string;
  industriesId: Array<string | null>;
  supplierCount?: number | null;
  primaryColor?: string | null;
  secondaryColor?: string | null;
  createdAt?: string | null;
  eventCreatedById?: string | null;
  eventDeletedById?: string | null;
  eventLastUpdatedById?: string | null;
};

export type ModelEventConditionInput = {
  global?: ModelBooleanInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  website?: ModelStringInput | null;
  startDate?: ModelStringInput | null;
  endDate?: ModelStringInput | null;
  countryCode?: ModelStringInput | null;
  venueId?: ModelIDInput | null;
  logoImageId?: ModelIDInput | null;
  supplierCount?: ModelIntInput | null;
  industriesId?: ModelIDInput | null;
  primaryColor?: ModelStringInput | null;
  secondaryColor?: ModelStringInput | null;
  globalEventId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelEventConditionInput | null> | null;
  or?: Array<ModelEventConditionInput | null> | null;
  not?: ModelEventConditionInput | null;
};

export type UpdateEventInput = {
  id: string;
  teamId: string;
  globalEventId?: string | null;
  global: boolean;
  name?: string | null;
  description?: string | null;
  website?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  countryCode?: string | null;
  venueId?: string | null;
  logoImageId?: string | null;
  industriesId?: Array<string | null> | null;
  supplierCount?: number | null;
  primaryColor?: string | null;
  secondaryColor?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  eventCreatedById?: string | null;
  eventDeletedById?: string | null;
  eventLastUpdatedById?: string | null;
};

export type DeleteEventInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateExportInput = {
  id: string;
  teamId: string;
  format: ExportFormat;
  target?: ExportTarget | null;
  options?: string | null;
  query?: string | null;
  createdAt?: string | null;
  exportCreatedById?: string | null;
  exportDeletedById?: string | null;
  exportLastUpdatedById?: string | null;
};

export enum ExportFormat {
  XLS = "XLS",
  PDF = "PDF",
  IMAGE = "IMAGE"
}

export enum ExportTarget {
  SUPPLIER = "SUPPLIER",
  PRODUCT = "PRODUCT",
  CONTACT = "CONTACT",
  SAMPLE = "SAMPLE"
}

export type ModelExportConditionInput = {
  format?: ModelExportFormatInput | null;
  target?: ModelExportTargetInput | null;
  options?: ModelStringInput | null;
  query?: ModelStringInput | null;
  status?: ModelExportStatusInput | null;
  documentUrl?: ModelStringInput | null;
  errors?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelExportConditionInput | null> | null;
  or?: Array<ModelExportConditionInput | null> | null;
  not?: ModelExportConditionInput | null;
};

export type ModelExportFormatInput = {
  eq?: ExportFormat | null;
  ne?: ExportFormat | null;
};

export type ModelExportTargetInput = {
  eq?: ExportTarget | null;
  ne?: ExportTarget | null;
};

export type ModelExportStatusInput = {
  eq?: ExportStatus | null;
  ne?: ExportStatus | null;
};

export enum ExportStatus {
  PENDING = "PENDING",
  PROCESSING = "PROCESSING",
  READY = "READY",
  ERROR = "ERROR"
}

export type UpdateExportInput = {
  id: string;
  teamId?: string | null;
  format?: ExportFormat | null;
  target?: ExportTarget | null;
  options?: string | null;
  query?: string | null;
  status?: ExportStatus | null;
  documentUrl?: string | null;
  errors?: Array<string | null> | null;
  createdAt?: string | null;
  deletedAt?: string | null;
  lastUpdatedAt?: string | null;
  deleted?: boolean | null;
  exportCreatedById?: string | null;
  exportDeletedById?: string | null;
  exportLastUpdatedById?: string | null;
};

export type DeleteExportInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateImageInput = {
  id: string;
  teamId: string;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt?: string | null;
  imageCreatedById?: string | null;
  imageDeletedById?: string | null;
  imageLastUpdatedById?: string | null;
};

export type ModelImageConditionInput = {
  fileName?: ModelStringInput | null;
  orientation?: ModelIntInput | null;
  type?: ModelImageTypeInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelImageConditionInput | null> | null;
  or?: Array<ModelImageConditionInput | null> | null;
  not?: ModelImageConditionInput | null;
};

export type ModelImageTypeInput = {
  eq?: ImageType | null;
  ne?: ImageType | null;
};

export type UpdateImageInput = {
  id: string;
  teamId: string;
  fileName?: string | null;
  orientation?: number | null;
  lastUpdatedAt?: string | null;
  _version: number;
  imageCreatedById?: string | null;
  imageDeletedById?: string | null;
  imageLastUpdatedById?: string | null;
};

export type DeleteImageInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateProductInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name: string;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  supplierId?: string | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  attachmentsIds?: Array<string | null> | null;
  assigneeId?: string | null;
  createdAt?: string | null;
  productStatusId?: string | null;
  productSupplierId?: string | null;
  productCategoryId?: string | null;
  productEventId?: string | null;
  productAssigneeId?: string | null;
  productCreatedById?: string | null;
  productDeletedById?: string | null;
  productLastUpdatedById?: string | null;
};

export type PropertyInput = {
  name: string;
  value: string;
};

export type ModelProductConditionInput = {
  statusId?: ModelIDInput | null;
  supplierId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProductConditionInput | null> | null;
  or?: Array<ModelProductConditionInput | null> | null;
  not?: ModelProductConditionInput | null;
};

export type UpdateProductInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name?: string | null;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  supplierId?: string | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  attachmentsIds?: Array<string | null> | null;
  assigneeId?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  productStatusId?: string | null;
  productSupplierId?: string | null;
  productCategoryId?: string | null;
  productEventId?: string | null;
  productAssigneeId?: string | null;
  productCreatedById?: string | null;
  productDeletedById?: string | null;
  productLastUpdatedById?: string | null;
};

export type DeleteProductInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateProjectInput = {
  id: string;
  teamId: string;
  name?: string | null;
  logoImageId?: string | null;
  description?: string | null;
  products?: Array<string | null> | null;
  assigneeId?: string | null;
  dueDate?: string | null;
  status?: string | null;
  archived?: boolean | null;
  createdAt?: string | null;
  projectCreatedById?: string | null;
  projectDeletedById?: string | null;
  projectLastUpdatedById?: string | null;
};

export type ModelProjectConditionInput = {
  name?: ModelStringInput | null;
  logoImageId?: ModelIDInput | null;
  description?: ModelStringInput | null;
  assigneeId?: ModelIDInput | null;
  dueDate?: ModelStringInput | null;
  archived?: ModelBooleanInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProjectConditionInput | null> | null;
  or?: Array<ModelProjectConditionInput | null> | null;
  not?: ModelProjectConditionInput | null;
};

export type UpdateProjectInput = {
  id: string;
  teamId: string;
  name?: string | null;
  logoImageId?: string | null;
  description?: string | null;
  products?: Array<string | null> | null;
  assigneeId?: string | null;
  dueDate?: string | null;
  status?: string | null;
  archived?: boolean | null;
  lastUpdatedAt?: string | null;
  _version: number;
  projectCreatedById?: string | null;
  projectDeletedById?: string | null;
  projectLastUpdatedById?: string | null;
};

export type DeleteProjectInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateProjectProductInput = {
  id?: string | null;
  teamId: string;
  projectId: string;
  productId: string;
};

export type ModelProjectProductConditionInput = {
  teamId?: ModelIDInput | null;
  projectId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  and?: Array<ModelProjectProductConditionInput | null> | null;
  or?: Array<ModelProjectProductConditionInput | null> | null;
  not?: ModelProjectProductConditionInput | null;
};

export type UpdateProjectProductInput = {
  id: string;
  teamId?: string | null;
  projectId?: string | null;
  productId?: string | null;
};

export type DeleteProjectProductInput = {
  id?: string | null;
};

export type CreateSampleInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name: string;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  supplierId?: string | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  attachmentsIds?: Array<string | null> | null;
  assigneeId?: string | null;
  createdAt?: string | null;
  sampleStatusId?: string | null;
  sampleSupplierId?: string | null;
  sampleCategoryId?: string | null;
  sampleProductId?: string | null;
  sampleEventId?: string | null;
  sampleAssigneeId?: string | null;
  sampleCreatedById?: string | null;
  sampleDeletedById?: string | null;
  sampleLastUpdatedById?: string | null;
};

export type ModelSampleConditionInput = {
  statusId?: ModelIDInput | null;
  supplierId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  linkedProductId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSampleConditionInput | null> | null;
  or?: Array<ModelSampleConditionInput | null> | null;
  not?: ModelSampleConditionInput | null;
};

export type UpdateSampleInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name?: string | null;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  supplierId?: string | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  attachmentsIds?: Array<string | null> | null;
  assigneeId?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  sampleStatusId?: string | null;
  sampleSupplierId?: string | null;
  sampleCategoryId?: string | null;
  sampleProductId?: string | null;
  sampleEventId?: string | null;
  sampleAssigneeId?: string | null;
  sampleCreatedById?: string | null;
  sampleDeletedById?: string | null;
  sampleLastUpdatedById?: string | null;
};

export type DeleteSampleInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateWorkflowStatusInput = {
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt?: string | null;
  workflowStatusCreatedById?: string | null;
  workflowStatusDeletedById?: string | null;
  workflowStatusLastUpdatedById?: string | null;
};

export type ModelWorkflowStatusConditionInput = {
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  type?: ModelWorkflowTypeInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelWorkflowStatusConditionInput | null> | null;
  or?: Array<ModelWorkflowStatusConditionInput | null> | null;
  not?: ModelWorkflowStatusConditionInput | null;
};

export type ModelWorkflowTypeInput = {
  eq?: WorkflowType | null;
  ne?: WorkflowType | null;
};

export type UpdateWorkflowStatusInput = {
  id: string;
  teamId: string;
  name?: string | null;
  inWorkflow?: boolean | null;
  category?: string | null;
  step?: number | null;
  final?: boolean | null;
  type?: WorkflowType | null;
  lastUpdatedAt?: string | null;
  _version: number;
  workflowStatusCreatedById?: string | null;
  workflowStatusDeletedById?: string | null;
  workflowStatusLastUpdatedById?: string | null;
};

export type DeleteWorkflowStatusInput = {
  id?: string | null;
};

export type CreateSupplierTypeInput = {
  id: string;
  teamId: string;
  name: string;
  createdAt?: string | null;
  supplierTypeCreatedById?: string | null;
  supplierTypeDeletedById?: string | null;
  supplierTypeLastUpdatedById?: string | null;
};

export type ModelSupplierTypeConditionInput = {
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierTypeConditionInput | null> | null;
  or?: Array<ModelSupplierTypeConditionInput | null> | null;
  not?: ModelSupplierTypeConditionInput | null;
};

export type UpdateSupplierTypeInput = {
  id: string;
  teamId: string;
  name: string;
  lastUpdatedAt?: string | null;
  _version: number;
  supplierTypeCreatedById?: string | null;
  supplierTypeDeletedById?: string | null;
  supplierTypeLastUpdatedById?: string | null;
};

export type DeleteSupplierTypeInput = {
  id: string;
};

export type CreateSupplierInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name: string;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  logoImageId?: string | null;
  globalId?: string | null;
  assigneeId?: string | null;
  createdAt?: string | null;
  supplierStatusId?: string | null;
  supplierCategoryId?: string | null;
  supplierLogoImageId?: string | null;
  supplierEventId?: string | null;
  supplierAssigneeId?: string | null;
  supplierGlobalSupplierId?: string | null;
  supplierCreatedById?: string | null;
  supplierDeletedById?: string | null;
  supplierLastUpdatedById?: string | null;
};

export type ModelSupplierConditionInput = {
  statusId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  logoImageId?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  globalId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierConditionInput | null> | null;
  or?: Array<ModelSupplierConditionInput | null> | null;
  not?: ModelSupplierConditionInput | null;
};

export type UpdateSupplierInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name?: string | null;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  logoImageId?: string | null;
  globalId?: string | null;
  assigneeId?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  supplierStatusId?: string | null;
  supplierCategoryId?: string | null;
  supplierLogoImageId?: string | null;
  supplierEventId?: string | null;
  supplierAssigneeId?: string | null;
  supplierGlobalSupplierId?: string | null;
  supplierCreatedById?: string | null;
  supplierDeletedById?: string | null;
  supplierLastUpdatedById?: string | null;
};

export type DeleteSupplierInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateTagInput = {
  id: string;
  teamId: string;
  name: string;
  createdAt?: string | null;
  tagCreatedById?: string | null;
  tagDeletedById?: string | null;
  tagLastUpdatedById?: string | null;
};

export type ModelTagConditionInput = {
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTagConditionInput | null> | null;
  or?: Array<ModelTagConditionInput | null> | null;
  not?: ModelTagConditionInput | null;
};

export type UpdateTagInput = {
  id: string;
  teamId: string;
  name: string;
  lastUpdatedAt?: string | null;
  _version: number;
  tagCreatedById?: string | null;
  tagDeletedById?: string | null;
  tagLastUpdatedById?: string | null;
};

export type DeleteTagInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateTaskInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name: string;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  supplierId?: string | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  attachmentsIds?: Array<string | null> | null;
  assigneeId?: string | null;
  createdAt?: string | null;
  taskStatusId?: string | null;
  taskSupplierId?: string | null;
  taskCategoryId?: string | null;
  taskProductId?: string | null;
  taskEventId?: string | null;
  taskAssigneeId?: string | null;
  taskCreatedById?: string | null;
  taskDeletedById?: string | null;
  taskLastUpdatedById?: string | null;
};

export type ModelTaskConditionInput = {
  statusId?: ModelIDInput | null;
  supplierId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTaskConditionInput | null> | null;
  or?: Array<ModelTaskConditionInput | null> | null;
  not?: ModelTaskConditionInput | null;
};

export type UpdateTaskInput = {
  id: string;
  teamId: string;
  properties?: Array<PropertyInput | null> | null;
  name?: string | null;
  dueDate?: string | null;
  completed?: boolean | null;
  completionDate?: string | null;
  favorite?: boolean | null;
  imageIds?: Array<string | null> | null;
  attachmentIds?: Array<string | null> | null;
  supplierId?: string | null;
  categoryId?: string | null;
  eventId?: string | null;
  tagIds?: Array<string | null> | null;
  attachmentsIds?: Array<string | null> | null;
  assigneeId?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  taskStatusId?: string | null;
  taskSupplierId?: string | null;
  taskCategoryId?: string | null;
  taskProductId?: string | null;
  taskEventId?: string | null;
  taskAssigneeId?: string | null;
  taskCreatedById?: string | null;
  taskDeletedById?: string | null;
  taskLastUpdatedById?: string | null;
};

export type DeleteTaskInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateVenueInput = {
  id: string;
  teamId: string;
  city?: string | null;
  name: string;
  latitude?: number | null;
  country?: string | null;
  longitude?: number | null;
  addressFull?: string | null;
  createdAt?: string | null;
  venueCreatedById?: string | null;
  venueDeletedById?: string | null;
  venueLastUpdatedById?: string | null;
};

export type ModelVenueConditionInput = {
  global?: ModelBooleanInput | null;
  city?: ModelStringInput | null;
  name?: ModelStringInput | null;
  latitude?: ModelFloatInput | null;
  country?: ModelStringInput | null;
  longitude?: ModelFloatInput | null;
  addressFull?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelVenueConditionInput | null> | null;
  or?: Array<ModelVenueConditionInput | null> | null;
  not?: ModelVenueConditionInput | null;
};

export type ModelFloatInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type UpdateVenueInput = {
  id: string;
  teamId: string;
  city?: string | null;
  name: string;
  latitude?: number | null;
  country?: string | null;
  longitude?: number | null;
  addressFull?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  venueCreatedById?: string | null;
  venueDeletedById?: string | null;
  venueLastUpdatedById?: string | null;
};

export type DeleteVenueInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateVoteInput = {
  id: string;
  teamId: string;
  rating: number;
  message?: string | null;
  nodeId: string;
  createdAt?: string | null;
  voteCreatedById?: string | null;
  voteDeletedById?: string | null;
  voteLastUpdatedById?: string | null;
};

export type ModelVoteConditionInput = {
  rating?: ModelIntInput | null;
  message?: ModelStringInput | null;
  nodeId?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelVoteConditionInput | null> | null;
  or?: Array<ModelVoteConditionInput | null> | null;
  not?: ModelVoteConditionInput | null;
};

export type UpdateVoteInput = {
  id: string;
  teamId: string;
  rating?: number | null;
  message?: string | null;
  nodeId?: string | null;
  lastUpdatedAt?: string | null;
  _version: number;
  voteCreatedById?: string | null;
  voteDeletedById?: string | null;
  voteLastUpdatedById?: string | null;
};

export type DeleteVoteInput = {
  id: string;
  teamId: string;
  _version: number;
};

export type CreateDescriptorInput = {
  id: string;
  teamId: string;
  sections?: Array<SectionDescriptorInput | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  deletedAt?: string | null;
  lastUpdatedAt: string;
  deleted: boolean;
  descriptorCreatedById?: string | null;
  descriptorDeletedById?: string | null;
  descriptorLastUpdatedById?: string | null;
};

export type SectionDescriptorInput = {
  name: string;
  fields?: Array<FieldDescriptorInput | null> | null;
};

export type FieldDescriptorInput = {
  id: string;
  fieldId: string;
  defaultValue?: string | null;
  fixedValue?: boolean | null;
  required?: boolean | null;
  metadata?: string | null;
};

export enum DescriptorType {
  PRODUCT = "PRODUCT",
  SUPPLIER = "SUPPLIER",
  SAMPLE = "SAMPLE",
  TASK = "TASK",
  SUPPLIER_REQUEST = "SUPPLIER_REQUEST"
}

export type ModelDescriptorConditionInput = {
  teamId?: ModelIDInput | null;
  type?: ModelDescriptorTypeInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelDescriptorConditionInput | null> | null;
  or?: Array<ModelDescriptorConditionInput | null> | null;
  not?: ModelDescriptorConditionInput | null;
};

export type ModelDescriptorTypeInput = {
  eq?: DescriptorType | null;
  ne?: DescriptorType | null;
};

export type UpdateDescriptorInput = {
  id: string;
  teamId?: string | null;
  sections?: Array<SectionDescriptorInput | null> | null;
  type?: DescriptorType | null;
  name?: string | null;
  createdAt?: string | null;
  deletedAt?: string | null;
  lastUpdatedAt?: string | null;
  deleted?: boolean | null;
  descriptorCreatedById?: string | null;
  descriptorDeletedById?: string | null;
  descriptorLastUpdatedById?: string | null;
};

export type DeleteDescriptorInput = {
  id: string;
};

export type CreateFieldDefinitionInput = {
  id?: string | null;
  teamId: string;
  label: string;
  type: FieldType;
  name: string;
  default?: boolean | null;
  metaData?: string | null;
  createdAt: string;
  deletedAt?: string | null;
  lastUpdatedAt: string;
  deleted: boolean;
  fieldDefinitionCreatedById?: string | null;
  fieldDefinitionDeletedById?: string | null;
  fieldDefinitionLastUpdatedById?: string | null;
};

export enum FieldType {
  INT = "INT",
  FLOAT = "FLOAT",
  STRING = "STRING",
  PRICE = "PRICE",
  DATE = "DATE",
  SELECTOR = "SELECTOR"
}

export type ModelFieldDefinitionConditionInput = {
  teamId?: ModelIDInput | null;
  label?: ModelStringInput | null;
  type?: ModelFieldTypeInput | null;
  name?: ModelStringInput | null;
  default?: ModelBooleanInput | null;
  metaData?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelFieldDefinitionConditionInput | null> | null;
  or?: Array<ModelFieldDefinitionConditionInput | null> | null;
  not?: ModelFieldDefinitionConditionInput | null;
};

export type ModelFieldTypeInput = {
  eq?: FieldType | null;
  ne?: FieldType | null;
};

export type UpdateFieldDefinitionInput = {
  id: string;
  teamId?: string | null;
  label?: string | null;
  type?: FieldType | null;
  name?: string | null;
  default?: boolean | null;
  metaData?: string | null;
  createdAt?: string | null;
  deletedAt?: string | null;
  lastUpdatedAt?: string | null;
  deleted?: boolean | null;
  fieldDefinitionCreatedById?: string | null;
  fieldDefinitionDeletedById?: string | null;
  fieldDefinitionLastUpdatedById?: string | null;
};

export type DeleteFieldDefinitionInput = {
  id?: string | null;
};

export type SearchFilterInput = {
  property?: string | null;
  eq?: number | null;
  ne?: number | null;
  ge?: number | null;
  gt?: number | null;
  le?: number | null;
  lt?: number | null;
  contains?: string | null;
  notContains?: string | null;
  beginsWith?: string | null;
  inStrings?: Array<string | null> | null;
  isString?: string | null;
  exists?: boolean | null;
  isTrue?: boolean | null;
  and?: Array<SearchFilterInput | null> | null;
  or?: Array<SearchFilterInput | null> | null;
};

export type SearchSortInput = {
  property: string;
  direction: SearchDirection;
};

export enum SearchDirection {
  ASC = "ASC",
  DESC = "DESC"
}

export type ModelInvitationFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  email?: ModelStringInput | null;
  firstName?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  status?: ModelInvitationStatusInput | null;
  secret?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelInvitationFilterInput | null> | null;
  or?: Array<ModelInvitationFilterInput | null> | null;
  not?: ModelInvitationFilterInput | null;
};

export enum ModelSortDirection {
  ASC = "ASC",
  DESC = "DESC"
}

export type ModelIDKeyConditionInput = {
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
};

export type ModelTeamUserFilterInput = {
  teamId?: ModelIDInput | null;
  userId?: ModelIDInput | null;
  role?: ModelTeamRoleInput | null;
  and?: Array<ModelTeamUserFilterInput | null> | null;
  or?: Array<ModelTeamUserFilterInput | null> | null;
  not?: ModelTeamUserFilterInput | null;
};

export type ModelCompanyFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  ownerUserId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCompanyFilterInput | null> | null;
  or?: Array<ModelCompanyFilterInput | null> | null;
  not?: ModelCompanyFilterInput | null;
};

export type ModelUserFilterInput = {
  id?: ModelIDInput | null;
  email?: ModelStringInput | null;
  firstName?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  preferredLanguage?: ModelLangInput | null;
  avatar?: ModelStringInput | null;
  creationDate?: ModelStringInput | null;
  and?: Array<ModelUserFilterInput | null> | null;
  or?: Array<ModelUserFilterInput | null> | null;
  not?: ModelUserFilterInput | null;
};

export type ModelLangInput = {
  eq?: Lang | null;
  ne?: Lang | null;
};

export type ModelAttachmentFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  fileName?: ModelStringInput | null;
  url?: ModelStringInput | null;
  size?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelAttachmentFilterInput | null> | null;
  or?: Array<ModelAttachmentFilterInput | null> | null;
  not?: ModelAttachmentFilterInput | null;
};

export type ModelCategoryFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCategoryFilterInput | null> | null;
  or?: Array<ModelCategoryFilterInput | null> | null;
  not?: ModelCategoryFilterInput | null;
};

export type ModelContactFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  email?: ModelStringInput | null;
  jobTitle?: ModelStringInput | null;
  supplierId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelContactFilterInput | null> | null;
  or?: Array<ModelContactFilterInput | null> | null;
  not?: ModelContactFilterInput | null;
};

export type ModelEventFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  global?: ModelBooleanInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  website?: ModelStringInput | null;
  startDate?: ModelStringInput | null;
  endDate?: ModelStringInput | null;
  countryCode?: ModelStringInput | null;
  venueId?: ModelIDInput | null;
  logoImageId?: ModelIDInput | null;
  supplierCount?: ModelIntInput | null;
  industriesId?: ModelIDInput | null;
  primaryColor?: ModelStringInput | null;
  secondaryColor?: ModelStringInput | null;
  globalEventId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelEventFilterInput | null> | null;
  or?: Array<ModelEventFilterInput | null> | null;
  not?: ModelEventFilterInput | null;
};

export type ModelExportFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  format?: ModelExportFormatInput | null;
  target?: ModelExportTargetInput | null;
  options?: ModelStringInput | null;
  query?: ModelStringInput | null;
  status?: ModelExportStatusInput | null;
  documentUrl?: ModelStringInput | null;
  errors?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelExportFilterInput | null> | null;
  or?: Array<ModelExportFilterInput | null> | null;
  not?: ModelExportFilterInput | null;
};

export type ModelImageFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  fileName?: ModelStringInput | null;
  orientation?: ModelIntInput | null;
  type?: ModelImageTypeInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelImageFilterInput | null> | null;
  or?: Array<ModelImageFilterInput | null> | null;
  not?: ModelImageFilterInput | null;
};

export type ModelIndustryFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  and?: Array<ModelIndustryFilterInput | null> | null;
  or?: Array<ModelIndustryFilterInput | null> | null;
  not?: ModelIndustryFilterInput | null;
};

export type ModelProjectFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  logoImageId?: ModelIDInput | null;
  description?: ModelStringInput | null;
  assigneeId?: ModelIDInput | null;
  dueDate?: ModelStringInput | null;
  archived?: ModelBooleanInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProjectFilterInput | null> | null;
  or?: Array<ModelProjectFilterInput | null> | null;
  not?: ModelProjectFilterInput | null;
};

export type ModelWorkflowStatusFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  type?: ModelWorkflowTypeInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelWorkflowStatusFilterInput | null> | null;
  or?: Array<ModelWorkflowStatusFilterInput | null> | null;
  not?: ModelWorkflowStatusFilterInput | null;
};

export type ModelSupplierTypeFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierTypeFilterInput | null> | null;
  or?: Array<ModelSupplierTypeFilterInput | null> | null;
  not?: ModelSupplierTypeFilterInput | null;
};

export type ModelTagFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTagFilterInput | null> | null;
  or?: Array<ModelTagFilterInput | null> | null;
  not?: ModelTagFilterInput | null;
};

export type ModelVenueFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  global?: ModelBooleanInput | null;
  city?: ModelStringInput | null;
  name?: ModelStringInput | null;
  latitude?: ModelFloatInput | null;
  country?: ModelStringInput | null;
  longitude?: ModelFloatInput | null;
  addressFull?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelVenueFilterInput | null> | null;
  or?: Array<ModelVenueFilterInput | null> | null;
  not?: ModelVenueFilterInput | null;
};

export type ModelVoteFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  rating?: ModelIntInput | null;
  message?: ModelStringInput | null;
  nodeId?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelVoteFilterInput | null> | null;
  or?: Array<ModelVoteFilterInput | null> | null;
  not?: ModelVoteFilterInput | null;
};

export enum ConstantType {
  COUNTRY = "COUNTRY",
  HARBOUR = "HARBOUR",
  CURRENCY = "CURRENCY"
}

export type ModelConstantFilterInput = {
  id?: ModelIDInput | null;
  type?: ModelConstantTypeInput | null;
  code?: ModelStringInput | null;
  label?: ModelStringInput | null;
  and?: Array<ModelConstantFilterInput | null> | null;
  or?: Array<ModelConstantFilterInput | null> | null;
  not?: ModelConstantFilterInput | null;
};

export type ModelConstantTypeInput = {
  eq?: ConstantType | null;
  ne?: ConstantType | null;
};

export type ModelDescriptorFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  type?: ModelDescriptorTypeInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelDescriptorFilterInput | null> | null;
  or?: Array<ModelDescriptorFilterInput | null> | null;
  not?: ModelDescriptorFilterInput | null;
};

export type ModelFieldDefinitionFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  label?: ModelStringInput | null;
  type?: ModelFieldTypeInput | null;
  name?: ModelStringInput | null;
  default?: ModelBooleanInput | null;
  metaData?: ModelStringInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelFieldDefinitionFilterInput | null> | null;
  or?: Array<ModelFieldDefinitionFilterInput | null> | null;
  not?: ModelFieldDefinitionFilterInput | null;
};

export type ModelRoleFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  and?: Array<ModelRoleFilterInput | null> | null;
  or?: Array<ModelRoleFilterInput | null> | null;
  not?: ModelRoleFilterInput | null;
};

export type ModelCommentFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  message?: ModelStringInput | null;
  nodeId?: ModelIDInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCommentFilterInput | null> | null;
  or?: Array<ModelCommentFilterInput | null> | null;
  not?: ModelCommentFilterInput | null;
};

export type ModelProductFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  statusId?: ModelIDInput | null;
  supplierId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProductFilterInput | null> | null;
  or?: Array<ModelProductFilterInput | null> | null;
  not?: ModelProductFilterInput | null;
};

export type ModelSampleFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  statusId?: ModelIDInput | null;
  supplierId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  linkedProductId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSampleFilterInput | null> | null;
  or?: Array<ModelSampleFilterInput | null> | null;
  not?: ModelSampleFilterInput | null;
};

export type ModelSupplierFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  statusId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  logoImageId?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  globalId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierFilterInput | null> | null;
  or?: Array<ModelSupplierFilterInput | null> | null;
  not?: ModelSupplierFilterInput | null;
};

export type ModelTaskFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  statusId?: ModelIDInput | null;
  supplierId?: ModelIDInput | null;
  categoryId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  imageIds?: ModelIDInput | null;
  attachmentsIds?: ModelIDInput | null;
  eventId?: ModelIDInput | null;
  assigneeId?: ModelIDInput | null;
  tagIds?: ModelIDInput | null;
  name?: ModelStringInput | null;
  dueDate?: ModelStringInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelStringInput | null;
  score?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelStringInput | null;
  deletedAt?: ModelStringInput | null;
  lastUpdatedAt?: ModelStringInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTaskFilterInput | null> | null;
  or?: Array<ModelTaskFilterInput | null> | null;
  not?: ModelTaskFilterInput | null;
};

export type ModelStringKeyConditionInput = {
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
};

export type CreateTeamMutation = {
  __typename: "Team";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  companyId: string;
  company: {
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  createdOn: string;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedOn: string | null;
};

export type AcceptInvitationMutation = {
  __typename: "Team";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  companyId: string;
  company: {
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  createdOn: string;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedOn: string | null;
};

export type CreateInvitationMutation = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateInvitationMutation = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteInvitationMutation = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateTeamUserMutation = {
  __typename: "TeamUser";
  teamId: string;
  userId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  user: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  role: TeamRole;
};

export type UpdateTeamUserMutation = {
  __typename: "TeamUser";
  teamId: string;
  userId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  user: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  role: TeamRole;
};

export type DeleteTeamUserMutation = {
  __typename: "TeamUser";
  teamId: string;
  userId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  user: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  role: TeamRole;
};

export type CreateCompanyMutation = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateCompanyMutation = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteCompanyMutation = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateRoleMutation = {
  __typename: "Role";
  id: string;
  teamId: string;
  name: string;
  permissions: {
    __typename: "PermisionMap";
    comment: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    contact: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    event: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    export: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    image: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    industry: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    product: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    project: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    sample: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    supplier: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    tag: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    task: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    vote: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    team: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
  } | null;
};

export type UpdateRoleMutation = {
  __typename: "Role";
  id: string;
  teamId: string;
  name: string;
  permissions: {
    __typename: "PermisionMap";
    comment: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    contact: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    event: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    export: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    image: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    industry: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    product: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    project: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    sample: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    supplier: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    tag: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    task: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    vote: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    team: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
  } | null;
};

export type DeleteRoleMutation = {
  __typename: "Role";
  id: string;
  teamId: string;
  name: string;
  permissions: {
    __typename: "PermisionMap";
    comment: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    contact: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    event: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    export: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    image: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    industry: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    product: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    project: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    sample: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    supplier: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    tag: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    task: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    vote: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
    team: {
      __typename: "Permission";
      canCreate: boolean;
      canUpdate: boolean;
      canDelete: boolean;
      canList: boolean;
      canRead: boolean;
    };
  } | null;
};

export type CreateAttachmentMutation = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateCategoryMutation = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateCategoryMutation = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteCategoryMutation = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateCommentMutation = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  message: string;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateCommentMutation = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  message: string;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteCommentMutation = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  message: string;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateContactMutation = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateContactMutation = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteContactMutation = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateEventMutation = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateEventMutation = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteEventMutation = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateExportMutation = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateExportMutation = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteExportMutation = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateImageMutation = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateImageMutation = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteImageMutation = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateProductMutation = {
  __typename: "Product";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateProductMutation = {
  __typename: "Product";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteProductMutation = {
  __typename: "Product";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateProjectMutation = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateProjectMutation = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteProjectMutation = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateProjectProductMutation = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
};

export type UpdateProjectProductMutation = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
};

export type DeleteProjectProductMutation = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
};

export type CreateSampleMutation = {
  __typename: "Sample";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  linkedProductId: string | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateSampleMutation = {
  __typename: "Sample";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  linkedProductId: string | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteSampleMutation = {
  __typename: "Sample";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  linkedProductId: string | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateWorkflowStatusMutation = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateWorkflowStatusMutation = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteWorkflowStatusMutation = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateSupplierTypeMutation = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateSupplierTypeMutation = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteSupplierTypeMutation = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateSupplierMutation = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  logoImageId: string | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  globalId: string | null;
  globalSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateSupplierMutation = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  logoImageId: string | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  globalId: string | null;
  globalSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteSupplierMutation = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  logoImageId: string | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  globalId: string | null;
  globalSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateTagMutation = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateTagMutation = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteTagMutation = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateTaskMutation = {
  __typename: "Task";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateTaskMutation = {
  __typename: "Task";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteTaskMutation = {
  __typename: "Task";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateVenueMutation = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateVenueMutation = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteVenueMutation = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateVoteMutation = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateVoteMutation = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteVoteMutation = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateDescriptorMutation = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateDescriptorMutation = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteDescriptorMutation = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type CreateFieldDefinitionMutation = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type UpdateFieldDefinitionMutation = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type DeleteFieldDefinitionMutation = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type GetStreamTokenQuery = {
  __typename: "GetStreamToken";
  token: string;
  feedName: string;
  feedId: string;
};

export type GetStreamNotificationTokenQuery = {
  __typename: "GetStreamToken";
  token: string;
  feedName: string;
  feedId: string;
};

export type SyncAProductQuery = {
  __typename: "Product";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type SearchContactsByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchProductsByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchSuppliersByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchSamplesByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchTasksByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchEventsByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchExportsByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type SearchProjectsByTeamsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  count: number | null;
  skip: number | null;
  take: number | null;
};

export type GetInvitationQuery = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListInvitationsQuery = {
  __typename: "ModelInvitationConnection";
  items: Array<{
    __typename: "Invitation";
    id: string;
    teamId: string;
    email: string;
    firstName: string | null;
    lastName: string | null;
    status: InvitationStatus;
    secret: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListTeamUserQuery = {
  __typename: "ModelTeamUserConnection";
  items: Array<{
    __typename: "TeamUser";
    teamId: string;
    userId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: string;
      lastUpdatedByUserId: string;
      lastUpdatedOn: string | null;
    } | null;
    user: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    role: TeamRole;
  } | null> | null;
  nextToken: string | null;
};

export type GetCompanyQuery = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  };
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListCompanysQuery = {
  __typename: "ModelCompanyConnection";
  items: Array<{
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetUserQuery = {
  __typename: "User";
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  phoneNumber: string | null;
  preferredLanguage: Lang | null;
  avatar: string | null;
  creationDate: string | null;
};

export type ListUsersQuery = {
  __typename: "ModelUserConnection";
  items: Array<{
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null> | null;
  nextToken: string | null;
};

export type GetAttachmentQuery = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListAttachmentsQuery = {
  __typename: "ModelAttachmentConnection";
  items: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetCategoryQuery = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListCategorysQuery = {
  __typename: "ModelCategoryConnection";
  items: Array<{
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetContactQuery = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListContactsQuery = {
  __typename: "ModelContactConnection";
  items: Array<{
    __typename: "Contact";
    id: string;
    teamId: string;
    name: string | null;
    phoneNumber: string | null;
    email: string | null;
    jobTitle: string | null;
    supplierId: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetEventQuery = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListEventsQuery = {
  __typename: "ModelEventConnection";
  items: Array<{
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetExportQuery = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListExportsQuery = {
  __typename: "ModelExportConnection";
  items: Array<{
    __typename: "Export";
    id: string;
    teamId: string;
    format: ExportFormat;
    target: ExportTarget | null;
    options: string | null;
    query: string | null;
    status: ExportStatus;
    documentUrl: string | null;
    errors: Array<string | null> | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetImageQuery = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListImagesQuery = {
  __typename: "ModelImageConnection";
  items: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetIndustryQuery = {
  __typename: "Industry";
  id: string;
  name: string;
};

export type ListIndustrysQuery = {
  __typename: "ModelIndustryConnection";
  items: Array<{
    __typename: "Industry";
    id: string;
    name: string;
  } | null> | null;
  nextToken: string | null;
};

export type GetProductQuery = {
  __typename: "Product";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type GetProjectQuery = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListProjectsQuery = {
  __typename: "ModelProjectConnection";
  items: Array<{
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetSampleQuery = {
  __typename: "Sample";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  linkedProductId: string | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type GetWorkflowStatusQuery = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListWorkflowStatussQuery = {
  __typename: "ModelWorkflowStatusConnection";
  items: Array<{
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetSupplierTypeQuery = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListSupplierTypesQuery = {
  __typename: "ModelSupplierTypeConnection";
  items: Array<{
    __typename: "SupplierType";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetSupplierQuery = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  attachments: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  logoImageId: string | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  globalId: string | null;
  globalSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type GetTagQuery = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListTagsQuery = {
  __typename: "ModelTagConnection";
  items: Array<{
    __typename: "Tag";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: string;
      lastUpdatedByUserId: string;
      lastUpdatedOn: string | null;
    } | null;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetTaskQuery = {
  __typename: "Task";
  id: string;
  teamId: string;
  statusId: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierId: string | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  categoryId: string | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  imageIds: Array<string | null> | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  attachmentsIds: Array<string | null> | null;
  eventId: string | null;
  event: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  assigneeId: string | null;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  tagIds: Array<string | null> | null;
  properties: Array<{
    __typename: "Property";
    name: string;
    value: string;
  } | null> | null;
  name: string;
  dueDate: string | null;
  completed: boolean | null;
  completionDate: string | null;
  score: number | null;
  favorite: boolean | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type GetVenueQuery = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListVenuesQuery = {
  __typename: "ModelVenueConnection";
  items: Array<{
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetVoteQuery = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListVotesQuery = {
  __typename: "ModelVoteConnection";
  items: Array<{
    __typename: "Vote";
    id: string;
    teamId: string;
    rating: number;
    message: string | null;
    nodeId: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetConstantQuery = {
  __typename: "Constant";
  id: string;
  type: ConstantType | null;
  code: string;
  label: string;
};

export type ListConstantsQuery = {
  __typename: "ModelConstantConnection";
  items: Array<{
    __typename: "Constant";
    id: string;
    type: ConstantType | null;
    code: string;
    label: string;
  } | null> | null;
  nextToken: string | null;
};

export type GetDescriptorQuery = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListDescriptorsQuery = {
  __typename: "ModelDescriptorConnection";
  items: Array<{
    __typename: "Descriptor";
    id: string;
    teamId: string;
    sections: Array<{
      __typename: "SectionDescriptor";
      name: string;
    } | null> | null;
    type: DescriptorType;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type GetFieldDefinitionQuery = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type ListFieldDefinitionsQuery = {
  __typename: "ModelFieldDefinitionConnection";
  items: Array<{
    __typename: "FieldDefinition";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: string;
      lastUpdatedByUserId: string;
      lastUpdatedOn: string | null;
    } | null;
    label: string;
    type: FieldType;
    name: string;
    default: boolean | null;
    metaData: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListInvitationByTeamQuery = {
  __typename: "ModelInvitationConnection";
  items: Array<{
    __typename: "Invitation";
    id: string;
    teamId: string;
    email: string;
    firstName: string | null;
    lastName: string | null;
    status: InvitationStatus;
    secret: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListTeamUserByUserQuery = {
  __typename: "ModelTeamUserConnection";
  items: Array<{
    __typename: "TeamUser";
    teamId: string;
    userId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: string;
      lastUpdatedByUserId: string;
      lastUpdatedOn: string | null;
    } | null;
    user: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    role: TeamRole;
  } | null> | null;
  nextToken: string | null;
};

export type ListCompanyByOwnerQuery = {
  __typename: "ModelCompanyConnection";
  items: Array<{
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListRolesQuery = {
  __typename: "ModelRoleConnection";
  items: Array<{
    __typename: "Role";
    id: string;
    teamId: string;
    name: string;
  } | null> | null;
  nextToken: string | null;
};

export type ListCategoryQuery = {
  __typename: "ModelCategoryConnection";
  items: Array<{
    __typename: "Category";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListCommentByNodeQuery = {
  __typename: "ModelCommentConnection";
  items: Array<{
    __typename: "Comment";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: string;
      lastUpdatedByUserId: string;
      lastUpdatedOn: string | null;
    } | null;
    message: string;
    nodeId: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListContactQuery = {
  __typename: "ModelContactConnection";
  items: Array<{
    __typename: "Contact";
    id: string;
    teamId: string;
    name: string | null;
    phoneNumber: string | null;
    email: string | null;
    jobTitle: string | null;
    supplierId: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListContactBySupplierQuery = {
  __typename: "ModelContactConnection";
  items: Array<{
    __typename: "Contact";
    id: string;
    teamId: string;
    name: string | null;
    phoneNumber: string | null;
    email: string | null;
    jobTitle: string | null;
    supplierId: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListEventQuery = {
  __typename: "ModelEventConnection";
  items: Array<{
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListExportQuery = {
  __typename: "ModelExportConnection";
  items: Array<{
    __typename: "Export";
    id: string;
    teamId: string;
    format: ExportFormat;
    target: ExportTarget | null;
    options: string | null;
    query: string | null;
    status: ExportStatus;
    documentUrl: string | null;
    errors: Array<string | null> | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListProductsQuery = {
  __typename: "ModelProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListProductsByStatusQuery = {
  __typename: "ModelProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListProjectQuery = {
  __typename: "ModelProjectConnection";
  items: Array<{
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListSamplesByLinkedSupplierQuery = {
  __typename: "ModelSampleConnection";
  items: Array<{
    __typename: "Sample";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    linkedProductId: string | null;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      statusId: string | null;
      supplierId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListSamplesByLinkedProductQuery = {
  __typename: "ModelSampleConnection";
  items: Array<{
    __typename: "Sample";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    linkedProductId: string | null;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      statusId: string | null;
      supplierId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListSamplesByStatusQuery = {
  __typename: "ModelSampleConnection";
  items: Array<{
    __typename: "Sample";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    linkedProductId: string | null;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      statusId: string | null;
      supplierId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListWorkflowStatusQuery = {
  __typename: "ModelWorkflowStatusConnection";
  items: Array<{
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListSupplierTypeQuery = {
  __typename: "ModelSupplierTypeConnection";
  items: Array<{
    __typename: "SupplierType";
    id: string;
    teamId: string;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListSuppliersQuery = {
  __typename: "ModelSupplierConnection";
  items: Array<{
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListSuppliersByStatusQuery = {
  __typename: "ModelSupplierConnection";
  items: Array<{
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListTagQuery = {
  __typename: "ModelTagConnection";
  items: Array<{
    __typename: "Tag";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: string;
      lastUpdatedByUserId: string;
      lastUpdatedOn: string | null;
    } | null;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListTasksQuery = {
  __typename: "ModelTaskConnection";
  items: Array<{
    __typename: "Task";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      statusId: string | null;
      supplierId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListTasksByProductQuery = {
  __typename: "ModelTaskConnection";
  items: Array<{
    __typename: "Task";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      statusId: string | null;
      supplierId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListTasksBySupplierQuery = {
  __typename: "ModelTaskConnection";
  items: Array<{
    __typename: "Task";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      statusId: string | null;
      supplierId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListVenueQuery = {
  __typename: "ModelVenueConnection";
  items: Array<{
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListVoteByNodeQuery = {
  __typename: "ModelVoteConnection";
  items: Array<{
    __typename: "Vote";
    id: string;
    teamId: string;
    rating: number;
    message: string | null;
    nodeId: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListDescriptorQuery = {
  __typename: "ModelDescriptorConnection";
  items: Array<{
    __typename: "Descriptor";
    id: string;
    teamId: string;
    sections: Array<{
      __typename: "SectionDescriptor";
      name: string;
    } | null> | null;
    type: DescriptorType;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type ListDescriptorByTypeQuery = {
  __typename: "ModelDescriptorConnection";
  items: Array<{
    __typename: "Descriptor";
    id: string;
    teamId: string;
    sections: Array<{
      __typename: "SectionDescriptor";
      name: string;
    } | null> | null;
    type: DescriptorType;
    name: string;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null> | null;
  nextToken: string | null;
};

export type OnCreateInvitationSubscription = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateInvitationSubscription = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteInvitationSubscription = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateCategorySubscription = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateCategorySubscription = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteCategorySubscription = {
  __typename: "Category";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateCommentSubscription = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  message: string;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateCommentSubscription = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  message: string;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteCommentSubscription = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  message: string;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateContactSubscription = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateContactSubscription = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteContactSubscription = {
  __typename: "Contact";
  id: string;
  teamId: string;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    logoImageId: string | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    globalId: string | null;
    globalSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateEventSubscription = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateEventSubscription = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteEventSubscription = {
  __typename: "Event";
  id: string;
  teamId: string;
  global: boolean;
  name: string;
  description: string | null;
  website: string | null;
  startDate: string | null;
  endDate: string | null;
  countryCode: string | null;
  venueId: string;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    global: boolean | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  supplierCount: number | null;
  industriesId: Array<string | null>;
  primaryColor: string | null;
  secondaryColor: string | null;
  globalEventId: string;
  globalEvent: {
    __typename: "Event";
    id: string;
    teamId: string;
    global: boolean;
    name: string;
    description: string | null;
    website: string | null;
    startDate: string | null;
    endDate: string | null;
    countryCode: string | null;
    venueId: string;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      global: boolean | null;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierCount: number | null;
    industriesId: Array<string | null>;
    primaryColor: string | null;
    secondaryColor: string | null;
    globalEventId: string;
    globalEvent: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateExportSubscription = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateExportSubscription = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteExportSubscription = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateImageSubscription = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateImageSubscription = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteImageSubscription = {
  __typename: "Image";
  id: string;
  teamId: string;
  fileName: string | null;
  orientation: number | null;
  type: ImageType;
  size: {
    __typename: "ImageSize";
    s: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    m: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    l: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    xl: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
    original: {
      __typename: "FileUrl";
      id: string;
      size: number | null;
      url: string;
    } | null;
  } | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateProjectSubscription = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateProjectSubscription = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteProjectSubscription = {
  __typename: "Project";
  id: string;
  teamId: string;
  name: string;
  logoImageId: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    fileName: string | null;
    orientation: number | null;
    type: ImageType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
    } | null> | null;
    nextToken: string | null;
  } | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  dueDate: string | null;
  status: {
    __typename: "WorkflowStatus";
    id: string;
    teamId: string;
    name: string;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    type: WorkflowType;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  };
  archived: boolean | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateProjectProductSubscription = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
};

export type OnUpdateProjectProductSubscription = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
};

export type OnDeleteProjectProductSubscription = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    statusId: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    supplierId: string | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      statusId: string | null;
      categoryId: string | null;
      imageIds: Array<string | null> | null;
      attachmentsIds: Array<string | null> | null;
      logoImageId: string | null;
      eventId: string | null;
      assigneeId: string | null;
      tagIds: Array<string | null> | null;
      globalId: string | null;
      name: string;
      dueDate: string | null;
      completed: boolean | null;
      completionDate: string | null;
      score: number | null;
      favorite: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    categoryId: string | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    imageIds: Array<string | null> | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    attachmentsIds: Array<string | null> | null;
    attachments: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null> | null;
    eventId: string | null;
    event: {
      __typename: "Event";
      id: string;
      teamId: string;
      global: boolean;
      name: string;
      description: string | null;
      website: string | null;
      startDate: string | null;
      endDate: string | null;
      countryCode: string | null;
      venueId: string;
      logoImageId: string;
      supplierCount: number | null;
      industriesId: Array<string | null>;
      primaryColor: string | null;
      secondaryColor: string | null;
      globalEventId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string | null;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    tagIds: Array<string | null> | null;
    properties: Array<{
      __typename: "Property";
      name: string;
      value: string;
    } | null> | null;
    name: string;
    dueDate: string | null;
    completed: boolean | null;
    completionDate: string | null;
    score: number | null;
    favorite: boolean | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    name: string;
    logoImageId: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string | null;
      orientation: number | null;
      type: ImageType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
    } | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    dueDate: string | null;
    status: {
      __typename: "WorkflowStatus";
      id: string;
      teamId: string;
      name: string;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      type: WorkflowType;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    archived: boolean | null;
    createdAt: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    deletedAt: string | null;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedAt: string;
    deleted: boolean;
  } | null;
};

export type OnCreateWorkflowStatusSubscription = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateWorkflowStatusSubscription = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteWorkflowStatusSubscription = {
  __typename: "WorkflowStatus";
  id: string;
  teamId: string;
  name: string;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  type: WorkflowType;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateSupplierTypeSubscription = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateSupplierTypeSubscription = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteSupplierTypeSubscription = {
  __typename: "SupplierType";
  id: string;
  teamId: string;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateTagSubscription = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateTagSubscription = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteTagSubscription = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateVenueSubscription = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateVenueSubscription = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteVenueSubscription = {
  __typename: "Venue";
  id: string;
  teamId: string;
  global: boolean | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateVoteSubscription = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateVoteSubscription = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteVoteSubscription = {
  __typename: "Vote";
  id: string;
  teamId: string;
  rating: number;
  message: string | null;
  nodeId: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateDescriptorSubscription = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateDescriptorSubscription = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteDescriptorSubscription = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "SectionDescriptor";
    name: string;
    fields: Array<{
      __typename: "FieldDescriptor";
      id: string;
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  type: DescriptorType;
  name: string;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnCreateFieldDefinitionSubscription = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnUpdateFieldDefinitionSubscription = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

export type OnDeleteFieldDefinitionSubscription = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdAt: string;
      deletedAt: string | null;
      lastUpdatedAt: string;
      deleted: boolean;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    };
    createdOn: string;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: string | null;
    } | null;
    lastUpdatedOn: string | null;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  deletedAt: string | null;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: string | null;
  } | null;
  lastUpdatedAt: string;
  deleted: boolean;
};

@Injectable({
  providedIn: "root"
})
export class APIService {
  async CreateTeam(input?: CreateTeamInput): Promise<CreateTeamMutation> {
    const statement = `mutation CreateTeam($input: CreateTeamInput) {
        createTeam(input: $input) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          companyId
          company {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedOn
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (input) {
      gqlAPIServiceArguments.input = input;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTeamMutation>response.data.createTeam;
  }
  async AcceptInvitation(
    id: string,
    secret: string
  ): Promise<AcceptInvitationMutation> {
    const statement = `mutation AcceptInvitation($id: ID!, $secret: String!) {
        acceptInvitation(id: $id, secret: $secret) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          companyId
          company {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedOn
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
      secret
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <AcceptInvitationMutation>response.data.acceptInvitation;
  }
  async CreateInvitation(
    input: CreateInvitationInput,
    condition?: ModelInvitationConditionInput
  ): Promise<CreateInvitationMutation> {
    const statement = `mutation CreateInvitation($input: CreateInvitationInput!, $condition: ModelInvitationConditionInput) {
        createInvitation(input: $input, condition: $condition) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateInvitationMutation>response.data.createInvitation;
  }
  async UpdateInvitation(
    input: UpdateInvitationInput,
    condition?: ModelInvitationConditionInput
  ): Promise<UpdateInvitationMutation> {
    const statement = `mutation UpdateInvitation($input: UpdateInvitationInput!, $condition: ModelInvitationConditionInput) {
        updateInvitation(input: $input, condition: $condition) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateInvitationMutation>response.data.updateInvitation;
  }
  async DeleteInvitation(
    input: DeleteInvitationInput,
    condition?: ModelInvitationConditionInput
  ): Promise<DeleteInvitationMutation> {
    const statement = `mutation DeleteInvitation($input: DeleteInvitationInput!, $condition: ModelInvitationConditionInput) {
        deleteInvitation(input: $input, condition: $condition) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteInvitationMutation>response.data.deleteInvitation;
  }
  async CreateTeamUser(
    input: CreateTeamUserInput,
    condition?: ModelTeamUserConditionInput
  ): Promise<CreateTeamUserMutation> {
    const statement = `mutation CreateTeamUser($input: CreateTeamUserInput!, $condition: ModelTeamUserConditionInput) {
        createTeamUser(input: $input, condition: $condition) {
          __typename
          teamId
          userId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          user {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          role
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTeamUserMutation>response.data.createTeamUser;
  }
  async UpdateTeamUser(
    input: UpdateTeamUserInput,
    condition?: ModelTeamUserConditionInput
  ): Promise<UpdateTeamUserMutation> {
    const statement = `mutation UpdateTeamUser($input: UpdateTeamUserInput!, $condition: ModelTeamUserConditionInput) {
        updateTeamUser(input: $input, condition: $condition) {
          __typename
          teamId
          userId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          user {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          role
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateTeamUserMutation>response.data.updateTeamUser;
  }
  async DeleteTeamUser(
    input: DeleteTeamUserInput,
    condition?: ModelTeamUserConditionInput
  ): Promise<DeleteTeamUserMutation> {
    const statement = `mutation DeleteTeamUser($input: DeleteTeamUserInput!, $condition: ModelTeamUserConditionInput) {
        deleteTeamUser(input: $input, condition: $condition) {
          __typename
          teamId
          userId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          user {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          role
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteTeamUserMutation>response.data.deleteTeamUser;
  }
  async CreateCompany(
    input: CreateCompanyInput,
    condition?: ModelCompanyConditionInput
  ): Promise<CreateCompanyMutation> {
    const statement = `mutation CreateCompany($input: CreateCompanyInput!, $condition: ModelCompanyConditionInput) {
        createCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateCompanyMutation>response.data.createCompany;
  }
  async UpdateCompany(
    input: UpdateCompanyInput,
    condition?: ModelCompanyConditionInput
  ): Promise<UpdateCompanyMutation> {
    const statement = `mutation UpdateCompany($input: UpdateCompanyInput!, $condition: ModelCompanyConditionInput) {
        updateCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateCompanyMutation>response.data.updateCompany;
  }
  async DeleteCompany(
    input: DeleteCompanyInput,
    condition?: ModelCompanyConditionInput
  ): Promise<DeleteCompanyMutation> {
    const statement = `mutation DeleteCompany($input: DeleteCompanyInput!, $condition: ModelCompanyConditionInput) {
        deleteCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteCompanyMutation>response.data.deleteCompany;
  }
  async CreateRole(
    input: CreateRoleInput,
    condition?: ModelRoleConditionInput
  ): Promise<CreateRoleMutation> {
    const statement = `mutation CreateRole($input: CreateRoleInput!, $condition: ModelRoleConditionInput) {
        createRole(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          permissions {
            __typename
            comment {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            contact {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            event {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            export {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            image {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            industry {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            product {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            project {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            sample {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            supplier {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            tag {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            task {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            vote {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            team {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateRoleMutation>response.data.createRole;
  }
  async UpdateRole(
    input: UpdateRoleInput,
    condition?: ModelRoleConditionInput
  ): Promise<UpdateRoleMutation> {
    const statement = `mutation UpdateRole($input: UpdateRoleInput!, $condition: ModelRoleConditionInput) {
        updateRole(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          permissions {
            __typename
            comment {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            contact {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            event {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            export {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            image {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            industry {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            product {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            project {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            sample {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            supplier {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            tag {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            task {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            vote {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            team {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateRoleMutation>response.data.updateRole;
  }
  async DeleteRole(
    input: DeleteRoleInput,
    condition?: ModelRoleConditionInput
  ): Promise<DeleteRoleMutation> {
    const statement = `mutation DeleteRole($input: DeleteRoleInput!, $condition: ModelRoleConditionInput) {
        deleteRole(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          permissions {
            __typename
            comment {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            contact {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            event {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            export {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            image {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            industry {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            product {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            project {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            sample {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            supplier {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            tag {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            task {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            vote {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
            team {
              __typename
              canCreate
              canUpdate
              canDelete
              canList
              canRead
            }
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteRoleMutation>response.data.deleteRole;
  }
  async CreateAttachment(
    input: CreateAttachmentInput,
    condition?: ModelAttachmentConditionInput
  ): Promise<CreateAttachmentMutation> {
    const statement = `mutation CreateAttachment($input: CreateAttachmentInput!, $condition: ModelAttachmentConditionInput) {
        createAttachment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          fileName
          url
          size
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateAttachmentMutation>response.data.createAttachment;
  }
  async CreateCategory(
    input: CreateCategoryInput,
    condition?: ModelCategoryConditionInput
  ): Promise<CreateCategoryMutation> {
    const statement = `mutation CreateCategory($input: CreateCategoryInput!, $condition: ModelCategoryConditionInput) {
        createCategory(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateCategoryMutation>response.data.createCategory;
  }
  async UpdateCategory(
    input: UpdateCategoryInput,
    condition?: ModelCategoryConditionInput
  ): Promise<UpdateCategoryMutation> {
    const statement = `mutation UpdateCategory($input: UpdateCategoryInput!, $condition: ModelCategoryConditionInput) {
        updateCategory(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateCategoryMutation>response.data.updateCategory;
  }
  async DeleteCategory(
    input: DeleteCategoryInput,
    condition?: ModelCategoryConditionInput
  ): Promise<DeleteCategoryMutation> {
    const statement = `mutation DeleteCategory($input: DeleteCategoryInput!, $condition: ModelCategoryConditionInput) {
        deleteCategory(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteCategoryMutation>response.data.deleteCategory;
  }
  async CreateComment(
    input: CreateCommentInput,
    condition?: ModelCommentConditionInput
  ): Promise<CreateCommentMutation> {
    const statement = `mutation CreateComment($input: CreateCommentInput!, $condition: ModelCommentConditionInput) {
        createComment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateCommentMutation>response.data.createComment;
  }
  async UpdateComment(
    input: UpdateCommentInput,
    condition?: ModelCommentConditionInput
  ): Promise<UpdateCommentMutation> {
    const statement = `mutation UpdateComment($input: UpdateCommentInput!, $condition: ModelCommentConditionInput) {
        updateComment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateCommentMutation>response.data.updateComment;
  }
  async DeleteComment(
    input: DeleteCommentInput,
    condition?: ModelCommentConditionInput
  ): Promise<DeleteCommentMutation> {
    const statement = `mutation DeleteComment($input: DeleteCommentInput!, $condition: ModelCommentConditionInput) {
        deleteComment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteCommentMutation>response.data.deleteComment;
  }
  async CreateContact(
    input: CreateContactInput,
    condition?: ModelContactConditionInput
  ): Promise<CreateContactMutation> {
    const statement = `mutation CreateContact($input: CreateContactInput!, $condition: ModelContactConditionInput) {
        createContact(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateContactMutation>response.data.createContact;
  }
  async UpdateContact(
    input: UpdateContactInput,
    condition?: ModelContactConditionInput
  ): Promise<UpdateContactMutation> {
    const statement = `mutation UpdateContact($input: UpdateContactInput!, $condition: ModelContactConditionInput) {
        updateContact(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateContactMutation>response.data.updateContact;
  }
  async DeleteContact(
    input: DeleteContactInput,
    condition?: ModelContactConditionInput
  ): Promise<DeleteContactMutation> {
    const statement = `mutation DeleteContact($input: DeleteContactInput!, $condition: ModelContactConditionInput) {
        deleteContact(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteContactMutation>response.data.deleteContact;
  }
  async CreateEvent(
    input: CreateEventInput,
    condition?: ModelEventConditionInput
  ): Promise<CreateEventMutation> {
    const statement = `mutation CreateEvent($input: CreateEventInput!, $condition: ModelEventConditionInput) {
        createEvent(input: $input, condition: $condition) {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateEventMutation>response.data.createEvent;
  }
  async UpdateEvent(
    input: UpdateEventInput,
    condition?: ModelEventConditionInput
  ): Promise<UpdateEventMutation> {
    const statement = `mutation UpdateEvent($input: UpdateEventInput!, $condition: ModelEventConditionInput) {
        updateEvent(input: $input, condition: $condition) {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateEventMutation>response.data.updateEvent;
  }
  async DeleteEvent(
    input: DeleteEventInput,
    condition?: ModelEventConditionInput
  ): Promise<DeleteEventMutation> {
    const statement = `mutation DeleteEvent($input: DeleteEventInput!, $condition: ModelEventConditionInput) {
        deleteEvent(input: $input, condition: $condition) {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteEventMutation>response.data.deleteEvent;
  }
  async CreateExport(
    input: CreateExportInput,
    condition?: ModelExportConditionInput
  ): Promise<CreateExportMutation> {
    const statement = `mutation CreateExport($input: CreateExportInput!, $condition: ModelExportConditionInput) {
        createExport(input: $input, condition: $condition) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateExportMutation>response.data.createExport;
  }
  async UpdateExport(
    input: UpdateExportInput,
    condition?: ModelExportConditionInput
  ): Promise<UpdateExportMutation> {
    const statement = `mutation UpdateExport($input: UpdateExportInput!, $condition: ModelExportConditionInput) {
        updateExport(input: $input, condition: $condition) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateExportMutation>response.data.updateExport;
  }
  async DeleteExport(
    input: DeleteExportInput,
    condition?: ModelExportConditionInput
  ): Promise<DeleteExportMutation> {
    const statement = `mutation DeleteExport($input: DeleteExportInput!, $condition: ModelExportConditionInput) {
        deleteExport(input: $input, condition: $condition) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteExportMutation>response.data.deleteExport;
  }
  async CreateImage(
    input: CreateImageInput,
    condition?: ModelImageConditionInput
  ): Promise<CreateImageMutation> {
    const statement = `mutation CreateImage($input: CreateImageInput!, $condition: ModelImageConditionInput) {
        createImage(input: $input, condition: $condition) {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateImageMutation>response.data.createImage;
  }
  async UpdateImage(
    input: UpdateImageInput,
    condition?: ModelImageConditionInput
  ): Promise<UpdateImageMutation> {
    const statement = `mutation UpdateImage($input: UpdateImageInput!, $condition: ModelImageConditionInput) {
        updateImage(input: $input, condition: $condition) {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateImageMutation>response.data.updateImage;
  }
  async DeleteImage(
    input: DeleteImageInput,
    condition?: ModelImageConditionInput
  ): Promise<DeleteImageMutation> {
    const statement = `mutation DeleteImage($input: DeleteImageInput!, $condition: ModelImageConditionInput) {
        deleteImage(input: $input, condition: $condition) {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteImageMutation>response.data.deleteImage;
  }
  async CreateProduct(
    input: CreateProductInput,
    condition?: ModelProductConditionInput
  ): Promise<CreateProductMutation> {
    const statement = `mutation CreateProduct($input: CreateProductInput!, $condition: ModelProductConditionInput) {
        createProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProductMutation>response.data.createProduct;
  }
  async UpdateProduct(
    input: UpdateProductInput,
    condition?: ModelProductConditionInput
  ): Promise<UpdateProductMutation> {
    const statement = `mutation UpdateProduct($input: UpdateProductInput!, $condition: ModelProductConditionInput) {
        updateProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProductMutation>response.data.updateProduct;
  }
  async DeleteProduct(
    input: DeleteProductInput,
    condition?: ModelProductConditionInput
  ): Promise<DeleteProductMutation> {
    const statement = `mutation DeleteProduct($input: DeleteProductInput!, $condition: ModelProductConditionInput) {
        deleteProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProductMutation>response.data.deleteProduct;
  }
  async CreateProject(
    input: CreateProjectInput,
    condition?: ModelProjectConditionInput
  ): Promise<CreateProjectMutation> {
    const statement = `mutation CreateProject($input: CreateProjectInput!, $condition: ModelProjectConditionInput) {
        createProject(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProjectMutation>response.data.createProject;
  }
  async UpdateProject(
    input: UpdateProjectInput,
    condition?: ModelProjectConditionInput
  ): Promise<UpdateProjectMutation> {
    const statement = `mutation UpdateProject($input: UpdateProjectInput!, $condition: ModelProjectConditionInput) {
        updateProject(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProjectMutation>response.data.updateProject;
  }
  async DeleteProject(
    input: DeleteProjectInput,
    condition?: ModelProjectConditionInput
  ): Promise<DeleteProjectMutation> {
    const statement = `mutation DeleteProject($input: DeleteProjectInput!, $condition: ModelProjectConditionInput) {
        deleteProject(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProjectMutation>response.data.deleteProject;
  }
  async CreateProjectProduct(
    input: CreateProjectProductInput,
    condition?: ModelProjectProductConditionInput
  ): Promise<CreateProjectProductMutation> {
    const statement = `mutation CreateProjectProduct($input: CreateProjectProductInput!, $condition: ModelProjectProductConditionInput) {
        createProjectProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          projectId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          project {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProjectProductMutation>response.data.createProjectProduct;
  }
  async UpdateProjectProduct(
    input: UpdateProjectProductInput,
    condition?: ModelProjectProductConditionInput
  ): Promise<UpdateProjectProductMutation> {
    const statement = `mutation UpdateProjectProduct($input: UpdateProjectProductInput!, $condition: ModelProjectProductConditionInput) {
        updateProjectProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          projectId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          project {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProjectProductMutation>response.data.updateProjectProduct;
  }
  async DeleteProjectProduct(
    input: DeleteProjectProductInput,
    condition?: ModelProjectProductConditionInput
  ): Promise<DeleteProjectProductMutation> {
    const statement = `mutation DeleteProjectProduct($input: DeleteProjectProductInput!, $condition: ModelProjectProductConditionInput) {
        deleteProjectProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          projectId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          project {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProjectProductMutation>response.data.deleteProjectProduct;
  }
  async CreateSample(
    input: CreateSampleInput,
    condition?: ModelSampleConditionInput
  ): Promise<CreateSampleMutation> {
    const statement = `mutation CreateSample($input: CreateSampleInput!, $condition: ModelSampleConditionInput) {
        createSample(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          linkedProductId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSampleMutation>response.data.createSample;
  }
  async UpdateSample(
    input: UpdateSampleInput,
    condition?: ModelSampleConditionInput
  ): Promise<UpdateSampleMutation> {
    const statement = `mutation UpdateSample($input: UpdateSampleInput!, $condition: ModelSampleConditionInput) {
        updateSample(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          linkedProductId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSampleMutation>response.data.updateSample;
  }
  async DeleteSample(
    input: DeleteSampleInput,
    condition?: ModelSampleConditionInput
  ): Promise<DeleteSampleMutation> {
    const statement = `mutation DeleteSample($input: DeleteSampleInput!, $condition: ModelSampleConditionInput) {
        deleteSample(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          linkedProductId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSampleMutation>response.data.deleteSample;
  }
  async CreateWorkflowStatus(
    input: CreateWorkflowStatusInput,
    condition?: ModelWorkflowStatusConditionInput
  ): Promise<CreateWorkflowStatusMutation> {
    const statement = `mutation CreateWorkflowStatus($input: CreateWorkflowStatusInput!, $condition: ModelWorkflowStatusConditionInput) {
        createWorkflowStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateWorkflowStatusMutation>response.data.createWorkflowStatus;
  }
  async UpdateWorkflowStatus(
    input: UpdateWorkflowStatusInput,
    condition?: ModelWorkflowStatusConditionInput
  ): Promise<UpdateWorkflowStatusMutation> {
    const statement = `mutation UpdateWorkflowStatus($input: UpdateWorkflowStatusInput!, $condition: ModelWorkflowStatusConditionInput) {
        updateWorkflowStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateWorkflowStatusMutation>response.data.updateWorkflowStatus;
  }
  async DeleteWorkflowStatus(
    input: DeleteWorkflowStatusInput,
    condition?: ModelWorkflowStatusConditionInput
  ): Promise<DeleteWorkflowStatusMutation> {
    const statement = `mutation DeleteWorkflowStatus($input: DeleteWorkflowStatusInput!, $condition: ModelWorkflowStatusConditionInput) {
        deleteWorkflowStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteWorkflowStatusMutation>response.data.deleteWorkflowStatus;
  }
  async CreateSupplierType(
    input: CreateSupplierTypeInput,
    condition?: ModelSupplierTypeConditionInput
  ): Promise<CreateSupplierTypeMutation> {
    const statement = `mutation CreateSupplierType($input: CreateSupplierTypeInput!, $condition: ModelSupplierTypeConditionInput) {
        createSupplierType(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSupplierTypeMutation>response.data.createSupplierType;
  }
  async UpdateSupplierType(
    input: UpdateSupplierTypeInput,
    condition?: ModelSupplierTypeConditionInput
  ): Promise<UpdateSupplierTypeMutation> {
    const statement = `mutation UpdateSupplierType($input: UpdateSupplierTypeInput!, $condition: ModelSupplierTypeConditionInput) {
        updateSupplierType(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSupplierTypeMutation>response.data.updateSupplierType;
  }
  async DeleteSupplierType(
    input: DeleteSupplierTypeInput,
    condition?: ModelSupplierTypeConditionInput
  ): Promise<DeleteSupplierTypeMutation> {
    const statement = `mutation DeleteSupplierType($input: DeleteSupplierTypeInput!, $condition: ModelSupplierTypeConditionInput) {
        deleteSupplierType(input: $input, condition: $condition) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSupplierTypeMutation>response.data.deleteSupplierType;
  }
  async CreateSupplier(
    input: CreateSupplierInput,
    condition?: ModelSupplierConditionInput
  ): Promise<CreateSupplierMutation> {
    const statement = `mutation CreateSupplier($input: CreateSupplierInput!, $condition: ModelSupplierConditionInput) {
        createSupplier(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          globalId
          globalSupplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSupplierMutation>response.data.createSupplier;
  }
  async UpdateSupplier(
    input: UpdateSupplierInput,
    condition?: ModelSupplierConditionInput
  ): Promise<UpdateSupplierMutation> {
    const statement = `mutation UpdateSupplier($input: UpdateSupplierInput!, $condition: ModelSupplierConditionInput) {
        updateSupplier(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          globalId
          globalSupplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSupplierMutation>response.data.updateSupplier;
  }
  async DeleteSupplier(
    input: DeleteSupplierInput,
    condition?: ModelSupplierConditionInput
  ): Promise<DeleteSupplierMutation> {
    const statement = `mutation DeleteSupplier($input: DeleteSupplierInput!, $condition: ModelSupplierConditionInput) {
        deleteSupplier(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          globalId
          globalSupplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSupplierMutation>response.data.deleteSupplier;
  }
  async CreateTag(
    input: CreateTagInput,
    condition?: ModelTagConditionInput
  ): Promise<CreateTagMutation> {
    const statement = `mutation CreateTag($input: CreateTagInput!, $condition: ModelTagConditionInput) {
        createTag(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTagMutation>response.data.createTag;
  }
  async UpdateTag(
    input: UpdateTagInput,
    condition?: ModelTagConditionInput
  ): Promise<UpdateTagMutation> {
    const statement = `mutation UpdateTag($input: UpdateTagInput!, $condition: ModelTagConditionInput) {
        updateTag(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateTagMutation>response.data.updateTag;
  }
  async DeleteTag(
    input: DeleteTagInput,
    condition?: ModelTagConditionInput
  ): Promise<DeleteTagMutation> {
    const statement = `mutation DeleteTag($input: DeleteTagInput!, $condition: ModelTagConditionInput) {
        deleteTag(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteTagMutation>response.data.deleteTag;
  }
  async CreateTask(
    input: CreateTaskInput,
    condition?: ModelTaskConditionInput
  ): Promise<CreateTaskMutation> {
    const statement = `mutation CreateTask($input: CreateTaskInput!, $condition: ModelTaskConditionInput) {
        createTask(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTaskMutation>response.data.createTask;
  }
  async UpdateTask(
    input: UpdateTaskInput,
    condition?: ModelTaskConditionInput
  ): Promise<UpdateTaskMutation> {
    const statement = `mutation UpdateTask($input: UpdateTaskInput!, $condition: ModelTaskConditionInput) {
        updateTask(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateTaskMutation>response.data.updateTask;
  }
  async DeleteTask(
    input: DeleteTaskInput,
    condition?: ModelTaskConditionInput
  ): Promise<DeleteTaskMutation> {
    const statement = `mutation DeleteTask($input: DeleteTaskInput!, $condition: ModelTaskConditionInput) {
        deleteTask(input: $input, condition: $condition) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteTaskMutation>response.data.deleteTask;
  }
  async CreateVenue(
    input: CreateVenueInput,
    condition?: ModelVenueConditionInput
  ): Promise<CreateVenueMutation> {
    const statement = `mutation CreateVenue($input: CreateVenueInput!, $condition: ModelVenueConditionInput) {
        createVenue(input: $input, condition: $condition) {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateVenueMutation>response.data.createVenue;
  }
  async UpdateVenue(
    input: UpdateVenueInput,
    condition?: ModelVenueConditionInput
  ): Promise<UpdateVenueMutation> {
    const statement = `mutation UpdateVenue($input: UpdateVenueInput!, $condition: ModelVenueConditionInput) {
        updateVenue(input: $input, condition: $condition) {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateVenueMutation>response.data.updateVenue;
  }
  async DeleteVenue(
    input: DeleteVenueInput,
    condition?: ModelVenueConditionInput
  ): Promise<DeleteVenueMutation> {
    const statement = `mutation DeleteVenue($input: DeleteVenueInput!, $condition: ModelVenueConditionInput) {
        deleteVenue(input: $input, condition: $condition) {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteVenueMutation>response.data.deleteVenue;
  }
  async CreateVote(
    input: CreateVoteInput,
    condition?: ModelVoteConditionInput
  ): Promise<CreateVoteMutation> {
    const statement = `mutation CreateVote($input: CreateVoteInput!, $condition: ModelVoteConditionInput) {
        createVote(input: $input, condition: $condition) {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateVoteMutation>response.data.createVote;
  }
  async UpdateVote(
    input: UpdateVoteInput,
    condition?: ModelVoteConditionInput
  ): Promise<UpdateVoteMutation> {
    const statement = `mutation UpdateVote($input: UpdateVoteInput!, $condition: ModelVoteConditionInput) {
        updateVote(input: $input, condition: $condition) {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateVoteMutation>response.data.updateVote;
  }
  async DeleteVote(
    input: DeleteVoteInput,
    condition?: ModelVoteConditionInput
  ): Promise<DeleteVoteMutation> {
    const statement = `mutation DeleteVote($input: DeleteVoteInput!, $condition: ModelVoteConditionInput) {
        deleteVote(input: $input, condition: $condition) {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteVoteMutation>response.data.deleteVote;
  }
  async CreateDescriptor(
    input: CreateDescriptorInput,
    condition?: ModelDescriptorConditionInput
  ): Promise<CreateDescriptorMutation> {
    const statement = `mutation CreateDescriptor($input: CreateDescriptorInput!, $condition: ModelDescriptorConditionInput) {
        createDescriptor(input: $input, condition: $condition) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateDescriptorMutation>response.data.createDescriptor;
  }
  async UpdateDescriptor(
    input: UpdateDescriptorInput,
    condition?: ModelDescriptorConditionInput
  ): Promise<UpdateDescriptorMutation> {
    const statement = `mutation UpdateDescriptor($input: UpdateDescriptorInput!, $condition: ModelDescriptorConditionInput) {
        updateDescriptor(input: $input, condition: $condition) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateDescriptorMutation>response.data.updateDescriptor;
  }
  async DeleteDescriptor(
    input: DeleteDescriptorInput,
    condition?: ModelDescriptorConditionInput
  ): Promise<DeleteDescriptorMutation> {
    const statement = `mutation DeleteDescriptor($input: DeleteDescriptorInput!, $condition: ModelDescriptorConditionInput) {
        deleteDescriptor(input: $input, condition: $condition) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteDescriptorMutation>response.data.deleteDescriptor;
  }
  async CreateFieldDefinition(
    input: CreateFieldDefinitionInput,
    condition?: ModelFieldDefinitionConditionInput
  ): Promise<CreateFieldDefinitionMutation> {
    const statement = `mutation CreateFieldDefinition($input: CreateFieldDefinitionInput!, $condition: ModelFieldDefinitionConditionInput) {
        createFieldDefinition(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateFieldDefinitionMutation>response.data.createFieldDefinition;
  }
  async UpdateFieldDefinition(
    input: UpdateFieldDefinitionInput,
    condition?: ModelFieldDefinitionConditionInput
  ): Promise<UpdateFieldDefinitionMutation> {
    const statement = `mutation UpdateFieldDefinition($input: UpdateFieldDefinitionInput!, $condition: ModelFieldDefinitionConditionInput) {
        updateFieldDefinition(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateFieldDefinitionMutation>response.data.updateFieldDefinition;
  }
  async DeleteFieldDefinition(
    input: DeleteFieldDefinitionInput,
    condition?: ModelFieldDefinitionConditionInput
  ): Promise<DeleteFieldDefinitionMutation> {
    const statement = `mutation DeleteFieldDefinition($input: DeleteFieldDefinitionInput!, $condition: ModelFieldDefinitionConditionInput) {
        deleteFieldDefinition(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteFieldDefinitionMutation>response.data.deleteFieldDefinition;
  }
  async GetStreamToken(teamId?: string): Promise<GetStreamTokenQuery> {
    const statement = `query GetStreamToken($teamId: String) {
        getStreamToken(teamId: $teamId) {
          __typename
          token
          feedName
          feedId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetStreamTokenQuery>response.data.getStreamToken;
  }
  async GetStreamNotificationToken(
    teamId?: string
  ): Promise<GetStreamNotificationTokenQuery> {
    const statement = `query GetStreamNotificationToken($teamId: String) {
        getStreamNotificationToken(teamId: $teamId) {
          __typename
          token
          feedName
          feedId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetStreamNotificationTokenQuery>(
      response.data.getStreamNotificationToken
    );
  }
  async SyncAProduct(teamId?: string): Promise<Array<SyncAProductQuery>> {
    const statement = `query SyncAProduct($teamId: String) {
        syncAProduct(teamId: $teamId) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <Array<SyncAProductQuery>>response.data.syncAProduct;
  }
  async SearchContactsByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchContactsByTeamsQuery> {
    const statement = `query SearchContactsByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchContactsByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchContactsByTeamsQuery>response.data.searchContactsByTeams;
  }
  async SearchProductsByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchProductsByTeamsQuery> {
    const statement = `query SearchProductsByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchProductsByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchProductsByTeamsQuery>response.data.searchProductsByTeams;
  }
  async SearchSuppliersByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchSuppliersByTeamsQuery> {
    const statement = `query SearchSuppliersByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchSuppliersByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchSuppliersByTeamsQuery>response.data.searchSuppliersByTeams;
  }
  async SearchSamplesByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchSamplesByTeamsQuery> {
    const statement = `query SearchSamplesByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchSamplesByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchSamplesByTeamsQuery>response.data.searchSamplesByTeams;
  }
  async SearchTasksByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchTasksByTeamsQuery> {
    const statement = `query SearchTasksByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchTasksByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchTasksByTeamsQuery>response.data.searchTasksByTeams;
  }
  async SearchEventsByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchEventsByTeamsQuery> {
    const statement = `query SearchEventsByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchEventsByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchEventsByTeamsQuery>response.data.searchEventsByTeams;
  }
  async SearchExportsByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchExportsByTeamsQuery> {
    const statement = `query SearchExportsByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchExportsByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchExportsByTeamsQuery>response.data.searchExportsByTeams;
  }
  async SearchProjectsByTeams(
    teamIds: Array<string>,
    filter?: SearchFilterInput,
    sort?: SearchSortInput,
    take?: number,
    skip?: number
  ): Promise<SearchProjectsByTeamsQuery> {
    const statement = `query SearchProjectsByTeams($teamIds: [String!]!, $filter: SearchFilterInput, $sort: SearchSortInput, $take: Int, $skip: Int) {
        searchProjectsByTeams(teamIds: $teamIds, filter: $filter, sort: $sort, take: $take, skip: $skip) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          count
          skip
          take
        }
      }`;
    const gqlAPIServiceArguments: any = {
      teamIds
    };
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (take) {
      gqlAPIServiceArguments.take = take;
    }
    if (skip) {
      gqlAPIServiceArguments.skip = skip;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchProjectsByTeamsQuery>response.data.searchProjectsByTeams;
  }
  async GetInvitation(id: string): Promise<GetInvitationQuery> {
    const statement = `query GetInvitation($id: ID!) {
        getInvitation(id: $id) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetInvitationQuery>response.data.getInvitation;
  }
  async ListInvitations(
    id?: string,
    filter?: ModelInvitationFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListInvitationsQuery> {
    const statement = `query ListInvitations($id: ID, $filter: ModelInvitationFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listInvitations(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            email
            firstName
            lastName
            status
            secret
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListInvitationsQuery>response.data.listInvitations;
  }
  async ListTeamUser(
    teamId?: string,
    userId?: ModelIDKeyConditionInput,
    filter?: ModelTeamUserFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListTeamUserQuery> {
    const statement = `query ListTeamUser($teamId: ID, $userId: ModelIDKeyConditionInput, $filter: ModelTeamUserFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listTeamUser(teamId: $teamId, userId: $userId, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            teamId
            userId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
            }
            user {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            role
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (userId) {
      gqlAPIServiceArguments.userId = userId;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTeamUserQuery>response.data.listTeamUser;
  }
  async GetCompany(id: string): Promise<GetCompanyQuery> {
    const statement = `query GetCompany($id: ID!) {
        getCompany(id: $id) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetCompanyQuery>response.data.getCompany;
  }
  async ListCompanys(
    id?: string,
    filter?: ModelCompanyFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListCompanysQuery> {
    const statement = `query ListCompanys($id: ID, $filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listCompanys(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCompanysQuery>response.data.listCompanys;
  }
  async GetUser(id: string): Promise<GetUserQuery> {
    const statement = `query GetUser($id: ID!) {
        getUser(id: $id) {
          __typename
          id
          email
          firstName
          lastName
          phoneNumber
          preferredLanguage
          avatar
          creationDate
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetUserQuery>response.data.getUser;
  }
  async ListUsers(
    filter?: ModelUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListUsersQuery> {
    const statement = `query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {
        listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListUsersQuery>response.data.listUsers;
  }
  async GetAttachment(id: string): Promise<GetAttachmentQuery> {
    const statement = `query GetAttachment($id: ID!) {
        getAttachment(id: $id) {
          __typename
          id
          teamId
          fileName
          url
          size
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetAttachmentQuery>response.data.getAttachment;
  }
  async ListAttachments(
    filter?: ModelAttachmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListAttachmentsQuery> {
    const statement = `query ListAttachments($filter: ModelAttachmentFilterInput, $limit: Int, $nextToken: String) {
        listAttachments(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListAttachmentsQuery>response.data.listAttachments;
  }
  async GetCategory(id: string): Promise<GetCategoryQuery> {
    const statement = `query GetCategory($id: ID!) {
        getCategory(id: $id) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetCategoryQuery>response.data.getCategory;
  }
  async ListCategorys(
    id?: string,
    filter?: ModelCategoryFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListCategorysQuery> {
    const statement = `query ListCategorys($id: ID, $filter: ModelCategoryFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listCategorys(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCategorysQuery>response.data.listCategorys;
  }
  async GetContact(id: string): Promise<GetContactQuery> {
    const statement = `query GetContact($id: ID!) {
        getContact(id: $id) {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetContactQuery>response.data.getContact;
  }
  async ListContacts(
    id?: string,
    filter?: ModelContactFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListContactsQuery> {
    const statement = `query ListContacts($id: ID, $filter: ModelContactFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listContacts(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            name
            phoneNumber
            email
            jobTitle
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListContactsQuery>response.data.listContacts;
  }
  async GetEvent(id: string): Promise<GetEventQuery> {
    const statement = `query GetEvent($id: ID!) {
        getEvent(id: $id) {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetEventQuery>response.data.getEvent;
  }
  async ListEvents(
    id?: string,
    filter?: ModelEventFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListEventsQuery> {
    const statement = `query ListEvents($id: ID, $filter: ModelEventFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listEvents(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListEventsQuery>response.data.listEvents;
  }
  async GetExport(id: string): Promise<GetExportQuery> {
    const statement = `query GetExport($id: ID!) {
        getExport(id: $id) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetExportQuery>response.data.getExport;
  }
  async ListExports(
    id?: string,
    filter?: ModelExportFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListExportsQuery> {
    const statement = `query ListExports($id: ID, $filter: ModelExportFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listExports(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            format
            target
            options
            query
            status
            documentUrl
            errors
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListExportsQuery>response.data.listExports;
  }
  async GetImage(id: string): Promise<GetImageQuery> {
    const statement = `query GetImage($id: ID!) {
        getImage(id: $id) {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetImageQuery>response.data.getImage;
  }
  async ListImages(
    id?: string,
    filter?: ModelImageFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListImagesQuery> {
    const statement = `query ListImages($id: ID, $filter: ModelImageFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listImages(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListImagesQuery>response.data.listImages;
  }
  async GetIndustry(id: string): Promise<GetIndustryQuery> {
    const statement = `query GetIndustry($id: ID!) {
        getIndustry(id: $id) {
          __typename
          id
          name
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetIndustryQuery>response.data.getIndustry;
  }
  async ListIndustrys(
    id?: string,
    filter?: ModelIndustryFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListIndustrysQuery> {
    const statement = `query ListIndustrys($id: ID, $filter: ModelIndustryFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listIndustrys(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            name
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListIndustrysQuery>response.data.listIndustrys;
  }
  async GetProduct(id: string): Promise<GetProductQuery> {
    const statement = `query GetProduct($id: ID!) {
        getProduct(id: $id) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetProductQuery>response.data.getProduct;
  }
  async GetProject(id: string): Promise<GetProjectQuery> {
    const statement = `query GetProject($id: ID!) {
        getProject(id: $id) {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetProjectQuery>response.data.getProject;
  }
  async ListProjects(
    id?: string,
    filter?: ModelProjectFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListProjectsQuery> {
    const statement = `query ListProjects($id: ID, $filter: ModelProjectFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listProjects(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProjectsQuery>response.data.listProjects;
  }
  async GetSample(id: string): Promise<GetSampleQuery> {
    const statement = `query GetSample($id: ID!) {
        getSample(id: $id) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          linkedProductId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSampleQuery>response.data.getSample;
  }
  async GetWorkflowStatus(id: string): Promise<GetWorkflowStatusQuery> {
    const statement = `query GetWorkflowStatus($id: ID!) {
        getWorkflowStatus(id: $id) {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetWorkflowStatusQuery>response.data.getWorkflowStatus;
  }
  async ListWorkflowStatuss(
    filter?: ModelWorkflowStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListWorkflowStatussQuery> {
    const statement = `query ListWorkflowStatuss($filter: ModelWorkflowStatusFilterInput, $limit: Int, $nextToken: String) {
        listWorkflowStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListWorkflowStatussQuery>response.data.listWorkflowStatuss;
  }
  async GetSupplierType(id: string): Promise<GetSupplierTypeQuery> {
    const statement = `query GetSupplierType($id: ID!) {
        getSupplierType(id: $id) {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSupplierTypeQuery>response.data.getSupplierType;
  }
  async ListSupplierTypes(
    id?: string,
    filter?: ModelSupplierTypeFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListSupplierTypesQuery> {
    const statement = `query ListSupplierTypes($id: ID, $filter: ModelSupplierTypeFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listSupplierTypes(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSupplierTypesQuery>response.data.listSupplierTypes;
  }
  async GetSupplier(id: string): Promise<GetSupplierQuery> {
    const statement = `query GetSupplier($id: ID!) {
        getSupplier(id: $id) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          attachments {
            __typename
            id
            teamId
            fileName
            url
            size
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          globalId
          globalSupplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSupplierQuery>response.data.getSupplier;
  }
  async GetTag(id: string): Promise<GetTagQuery> {
    const statement = `query GetTag($id: ID!) {
        getTag(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetTagQuery>response.data.getTag;
  }
  async ListTags(
    id?: string,
    filter?: ModelTagFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListTagsQuery> {
    const statement = `query ListTags($id: ID, $filter: ModelTagFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listTags(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
            }
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTagsQuery>response.data.listTags;
  }
  async GetTask(id: string): Promise<GetTaskQuery> {
    const statement = `query GetTask($id: ID!) {
        getTask(id: $id) {
          __typename
          id
          teamId
          statusId
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          categoryId
          category {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          imageIds
          images {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          attachmentsIds
          eventId
          event {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          tagIds
          properties {
            __typename
            name
            value
          }
          name
          dueDate
          completed
          completionDate
          score
          favorite
          archived
          reference
          referenceKey
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetTaskQuery>response.data.getTask;
  }
  async GetVenue(id: string): Promise<GetVenueQuery> {
    const statement = `query GetVenue($id: ID!) {
        getVenue(id: $id) {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetVenueQuery>response.data.getVenue;
  }
  async ListVenues(
    id?: string,
    filter?: ModelVenueFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListVenuesQuery> {
    const statement = `query ListVenues($id: ID, $filter: ModelVenueFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listVenues(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListVenuesQuery>response.data.listVenues;
  }
  async GetVote(id: string): Promise<GetVoteQuery> {
    const statement = `query GetVote($id: ID!) {
        getVote(id: $id) {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetVoteQuery>response.data.getVote;
  }
  async ListVotes(
    id?: string,
    filter?: ModelVoteFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListVotesQuery> {
    const statement = `query ListVotes($id: ID, $filter: ModelVoteFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listVotes(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            rating
            message
            nodeId
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListVotesQuery>response.data.listVotes;
  }
  async GetConstant(id: string): Promise<GetConstantQuery> {
    const statement = `query GetConstant($id: ID!) {
        getConstant(id: $id) {
          __typename
          id
          type
          code
          label
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetConstantQuery>response.data.getConstant;
  }
  async ListConstants(
    filter?: ModelConstantFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListConstantsQuery> {
    const statement = `query ListConstants($filter: ModelConstantFilterInput, $limit: Int, $nextToken: String) {
        listConstants(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            type
            code
            label
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListConstantsQuery>response.data.listConstants;
  }
  async GetDescriptor(id: string): Promise<GetDescriptorQuery> {
    const statement = `query GetDescriptor($id: ID!) {
        getDescriptor(id: $id) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetDescriptorQuery>response.data.getDescriptor;
  }
  async ListDescriptors(
    id?: string,
    filter?: ModelDescriptorFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListDescriptorsQuery> {
    const statement = `query ListDescriptors($id: ID, $filter: ModelDescriptorFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listDescriptors(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            sections {
              __typename
              name
            }
            type
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListDescriptorsQuery>response.data.listDescriptors;
  }
  async GetFieldDefinition(id: string): Promise<GetFieldDefinitionQuery> {
    const statement = `query GetFieldDefinition($id: ID!) {
        getFieldDefinition(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetFieldDefinitionQuery>response.data.getFieldDefinition;
  }
  async ListFieldDefinitions(
    filter?: ModelFieldDefinitionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListFieldDefinitionsQuery> {
    const statement = `query ListFieldDefinitions($filter: ModelFieldDefinitionFilterInput, $limit: Int, $nextToken: String) {
        listFieldDefinitions(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
            }
            label
            type
            name
            default
            metaData
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListFieldDefinitionsQuery>response.data.listFieldDefinitions;
  }
  async ListInvitationByTeam(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelInvitationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListInvitationByTeamQuery> {
    const statement = `query ListInvitationByTeam($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelInvitationFilterInput, $limit: Int, $nextToken: String) {
        listInvitationByTeam(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            email
            firstName
            lastName
            status
            secret
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListInvitationByTeamQuery>response.data.listInvitationByTeam;
  }
  async ListTeamUserByUser(
    userId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelTeamUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTeamUserByUserQuery> {
    const statement = `query ListTeamUserByUser($userId: ID, $sortDirection: ModelSortDirection, $filter: ModelTeamUserFilterInput, $limit: Int, $nextToken: String) {
        listTeamUserByUser(userId: $userId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            teamId
            userId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
            }
            user {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            role
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (userId) {
      gqlAPIServiceArguments.userId = userId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTeamUserByUserQuery>response.data.listTeamUserByUser;
  }
  async ListCompanyByOwner(
    ownerUserId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListCompanyByOwnerQuery> {
    const statement = `query ListCompanyByOwner($ownerUserId: ID, $sortDirection: ModelSortDirection, $filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String) {
        listCompanyByOwner(ownerUserId: $ownerUserId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (ownerUserId) {
      gqlAPIServiceArguments.ownerUserId = ownerUserId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCompanyByOwnerQuery>response.data.listCompanyByOwner;
  }
  async ListRoles(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelRoleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListRolesQuery> {
    const statement = `query ListRoles($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelRoleFilterInput, $limit: Int, $nextToken: String) {
        listRoles(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListRolesQuery>response.data.listRoles;
  }
  async ListCategory(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelCategoryFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListCategoryQuery> {
    const statement = `query ListCategory($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelCategoryFilterInput, $limit: Int, $nextToken: String) {
        listCategory(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCategoryQuery>response.data.listCategory;
  }
  async ListCommentByNode(
    nodeId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelCommentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListCommentByNodeQuery> {
    const statement = `query ListCommentByNode($nodeId: ID, $sortDirection: ModelSortDirection, $filter: ModelCommentFilterInput, $limit: Int, $nextToken: String) {
        listCommentByNode(nodeId: $nodeId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
            }
            message
            nodeId
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (nodeId) {
      gqlAPIServiceArguments.nodeId = nodeId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCommentByNodeQuery>response.data.listCommentByNode;
  }
  async ListContact(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelContactFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListContactQuery> {
    const statement = `query ListContact($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelContactFilterInput, $limit: Int, $nextToken: String) {
        listContact(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            phoneNumber
            email
            jobTitle
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListContactQuery>response.data.listContact;
  }
  async ListContactBySupplier(
    supplierId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelContactFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListContactBySupplierQuery> {
    const statement = `query ListContactBySupplier($supplierId: ID, $sortDirection: ModelSortDirection, $filter: ModelContactFilterInput, $limit: Int, $nextToken: String) {
        listContactBySupplier(supplierId: $supplierId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            phoneNumber
            email
            jobTitle
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (supplierId) {
      gqlAPIServiceArguments.supplierId = supplierId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListContactBySupplierQuery>response.data.listContactBySupplier;
  }
  async ListEvent(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelEventFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEventQuery> {
    const statement = `query ListEvent($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelEventFilterInput, $limit: Int, $nextToken: String) {
        listEvent(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListEventQuery>response.data.listEvent;
  }
  async ListExport(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelExportFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListExportQuery> {
    const statement = `query ListExport($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelExportFilterInput, $limit: Int, $nextToken: String) {
        listExport(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            format
            target
            options
            query
            status
            documentUrl
            errors
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListExportQuery>response.data.listExport;
  }
  async ListProducts(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelProductFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProductsQuery> {
    const statement = `query ListProducts($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelProductFilterInput, $limit: Int, $nextToken: String) {
        listProducts(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProductsQuery>response.data.listProducts;
  }
  async ListProductsByStatus(
    statusId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelProductFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProductsByStatusQuery> {
    const statement = `query ListProductsByStatus($statusId: ID, $sortDirection: ModelSortDirection, $filter: ModelProductFilterInput, $limit: Int, $nextToken: String) {
        listProductsByStatus(statusId: $statusId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (statusId) {
      gqlAPIServiceArguments.statusId = statusId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProductsByStatusQuery>response.data.listProductsByStatus;
  }
  async ListProject(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelProjectFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProjectQuery> {
    const statement = `query ListProject($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelProjectFilterInput, $limit: Int, $nextToken: String) {
        listProject(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProjectQuery>response.data.listProject;
  }
  async ListSamplesByLinkedSupplier(
    supplierId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSampleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSamplesByLinkedSupplierQuery> {
    const statement = `query ListSamplesByLinkedSupplier($supplierId: ID, $sortDirection: ModelSortDirection, $filter: ModelSampleFilterInput, $limit: Int, $nextToken: String) {
        listSamplesByLinkedSupplier(supplierId: $supplierId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            linkedProductId
            productId
            product {
              __typename
              id
              teamId
              statusId
              supplierId
              categoryId
              imageIds
              attachmentsIds
              eventId
              assigneeId
              tagIds
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (supplierId) {
      gqlAPIServiceArguments.supplierId = supplierId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSamplesByLinkedSupplierQuery>(
      response.data.listSamplesByLinkedSupplier
    );
  }
  async ListSamplesByLinkedProduct(
    linkedProductId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSampleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSamplesByLinkedProductQuery> {
    const statement = `query ListSamplesByLinkedProduct($linkedProductId: ID, $sortDirection: ModelSortDirection, $filter: ModelSampleFilterInput, $limit: Int, $nextToken: String) {
        listSamplesByLinkedProduct(linkedProductId: $linkedProductId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            linkedProductId
            productId
            product {
              __typename
              id
              teamId
              statusId
              supplierId
              categoryId
              imageIds
              attachmentsIds
              eventId
              assigneeId
              tagIds
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (linkedProductId) {
      gqlAPIServiceArguments.linkedProductId = linkedProductId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSamplesByLinkedProductQuery>(
      response.data.listSamplesByLinkedProduct
    );
  }
  async ListSamplesByStatus(
    statusId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSampleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSamplesByStatusQuery> {
    const statement = `query ListSamplesByStatus($statusId: ID, $sortDirection: ModelSortDirection, $filter: ModelSampleFilterInput, $limit: Int, $nextToken: String) {
        listSamplesByStatus(statusId: $statusId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            linkedProductId
            productId
            product {
              __typename
              id
              teamId
              statusId
              supplierId
              categoryId
              imageIds
              attachmentsIds
              eventId
              assigneeId
              tagIds
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (statusId) {
      gqlAPIServiceArguments.statusId = statusId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSamplesByStatusQuery>response.data.listSamplesByStatus;
  }
  async ListWorkflowStatus(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelWorkflowStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListWorkflowStatusQuery> {
    const statement = `query ListWorkflowStatus($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelWorkflowStatusFilterInput, $limit: Int, $nextToken: String) {
        listWorkflowStatus(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListWorkflowStatusQuery>response.data.listWorkflowStatus;
  }
  async ListSupplierType(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSupplierTypeFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSupplierTypeQuery> {
    const statement = `query ListSupplierType($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelSupplierTypeFilterInput, $limit: Int, $nextToken: String) {
        listSupplierType(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSupplierTypeQuery>response.data.listSupplierType;
  }
  async ListSuppliers(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSupplierFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSuppliersQuery> {
    const statement = `query ListSuppliers($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelSupplierFilterInput, $limit: Int, $nextToken: String) {
        listSuppliers(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSuppliersQuery>response.data.listSuppliers;
  }
  async ListSuppliersByStatus(
    statusId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSupplierFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSuppliersByStatusQuery> {
    const statement = `query ListSuppliersByStatus($statusId: ID, $sortDirection: ModelSortDirection, $filter: ModelSupplierFilterInput, $limit: Int, $nextToken: String) {
        listSuppliersByStatus(statusId: $statusId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (statusId) {
      gqlAPIServiceArguments.statusId = statusId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSuppliersByStatusQuery>response.data.listSuppliersByStatus;
  }
  async ListTag(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelTagFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTagQuery> {
    const statement = `query ListTag($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelTagFilterInput, $limit: Int, $nextToken: String) {
        listTag(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
            }
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTagQuery>response.data.listTag;
  }
  async ListTasks(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelTaskFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTasksQuery> {
    const statement = `query ListTasks($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {
        listTasks(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            productId
            product {
              __typename
              id
              teamId
              statusId
              supplierId
              categoryId
              imageIds
              attachmentsIds
              eventId
              assigneeId
              tagIds
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTasksQuery>response.data.listTasks;
  }
  async ListTasksByProduct(
    productId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelTaskFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTasksByProductQuery> {
    const statement = `query ListTasksByProduct($productId: ID, $sortDirection: ModelSortDirection, $filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {
        listTasksByProduct(productId: $productId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            productId
            product {
              __typename
              id
              teamId
              statusId
              supplierId
              categoryId
              imageIds
              attachmentsIds
              eventId
              assigneeId
              tagIds
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (productId) {
      gqlAPIServiceArguments.productId = productId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTasksByProductQuery>response.data.listTasksByProduct;
  }
  async ListTasksBySupplier(
    productId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelTaskFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTasksBySupplierQuery> {
    const statement = `query ListTasksBySupplier($productId: ID, $sortDirection: ModelSortDirection, $filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {
        listTasksBySupplier(productId: $productId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            productId
            product {
              __typename
              id
              teamId
              statusId
              supplierId
              categoryId
              imageIds
              attachmentsIds
              eventId
              assigneeId
              tagIds
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (productId) {
      gqlAPIServiceArguments.productId = productId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTasksBySupplierQuery>response.data.listTasksBySupplier;
  }
  async ListVenue(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelVenueFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListVenueQuery> {
    const statement = `query ListVenue($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelVenueFilterInput, $limit: Int, $nextToken: String) {
        listVenue(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListVenueQuery>response.data.listVenue;
  }
  async ListVoteByNode(
    nodeId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelVoteFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListVoteByNodeQuery> {
    const statement = `query ListVoteByNode($nodeId: String, $sortDirection: ModelSortDirection, $filter: ModelVoteFilterInput, $limit: Int, $nextToken: String) {
        listVoteByNode(nodeId: $nodeId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            rating
            message
            nodeId
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (nodeId) {
      gqlAPIServiceArguments.nodeId = nodeId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListVoteByNodeQuery>response.data.listVoteByNode;
  }
  async ListDescriptor(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelDescriptorFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListDescriptorQuery> {
    const statement = `query ListDescriptor($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelDescriptorFilterInput, $limit: Int, $nextToken: String) {
        listDescriptor(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            sections {
              __typename
              name
            }
            type
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListDescriptorQuery>response.data.listDescriptor;
  }
  async ListDescriptorByType(
    teamId?: string,
    type?: ModelStringKeyConditionInput,
    sortDirection?: ModelSortDirection,
    filter?: ModelDescriptorFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListDescriptorByTypeQuery> {
    const statement = `query ListDescriptorByType($teamId: ID, $type: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelDescriptorFilterInput, $limit: Int, $nextToken: String) {
        listDescriptorByType(teamId: $teamId, type: $type, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            sections {
              __typename
              name
            }
            type
            name
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          nextToken
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (type) {
      gqlAPIServiceArguments.type = type;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListDescriptorByTypeQuery>response.data.listDescriptorByType;
  }
  OnCreateInvitationListener: Observable<
    OnCreateInvitationSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateInvitation {
        onCreateInvitation {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateInvitationSubscription>;

  OnUpdateInvitationListener: Observable<
    OnUpdateInvitationSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateInvitation {
        onUpdateInvitation {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateInvitationSubscription>;

  OnDeleteInvitationListener: Observable<
    OnDeleteInvitationSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteInvitation {
        onDeleteInvitation {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteInvitationSubscription>;

  OnCreateCategoryListener: Observable<
    OnCreateCategorySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateCategory {
        onCreateCategory {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateCategorySubscription>;

  OnUpdateCategoryListener: Observable<
    OnUpdateCategorySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateCategory {
        onUpdateCategory {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateCategorySubscription>;

  OnDeleteCategoryListener: Observable<
    OnDeleteCategorySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteCategory {
        onDeleteCategory {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteCategorySubscription>;

  OnCreateCommentListener: Observable<
    OnCreateCommentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateComment {
        onCreateComment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateCommentSubscription>;

  OnUpdateCommentListener: Observable<
    OnUpdateCommentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateComment {
        onUpdateComment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateCommentSubscription>;

  OnDeleteCommentListener: Observable<
    OnDeleteCommentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteComment {
        onDeleteComment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteCommentSubscription>;

  OnCreateContactListener: Observable<
    OnCreateContactSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateContact {
        onCreateContact {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateContactSubscription>;

  OnUpdateContactListener: Observable<
    OnUpdateContactSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateContact {
        onUpdateContact {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateContactSubscription>;

  OnDeleteContactListener: Observable<
    OnDeleteContactSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteContact {
        onDeleteContact {
          __typename
          id
          teamId
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            globalId
            globalSupplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteContactSubscription>;

  OnCreateEventListener: Observable<OnCreateEventSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateEvent {
        onCreateEvent {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateEventSubscription>;

  OnUpdateEventListener: Observable<OnUpdateEventSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateEvent {
        onUpdateEvent {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateEventSubscription>;

  OnDeleteEventListener: Observable<OnDeleteEventSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteEvent {
        onDeleteEvent {
          __typename
          id
          teamId
          global
          name
          description
          website
          startDate
          endDate
          countryCode
          venueId
          venue {
            __typename
            id
            teamId
            global
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          supplierCount
          industriesId
          primaryColor
          secondaryColor
          globalEventId
          globalEvent {
            __typename
            id
            teamId
            global
            name
            description
            website
            startDate
            endDate
            countryCode
            venueId
            venue {
              __typename
              id
              teamId
              global
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierCount
            industriesId
            primaryColor
            secondaryColor
            globalEventId
            globalEvent {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteEventSubscription>;

  OnCreateExportListener: Observable<OnCreateExportSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateExport {
        onCreateExport {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateExportSubscription>;

  OnUpdateExportListener: Observable<OnUpdateExportSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateExport {
        onUpdateExport {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateExportSubscription>;

  OnDeleteExportListener: Observable<OnDeleteExportSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteExport {
        onDeleteExport {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteExportSubscription>;

  OnCreateImageListener: Observable<OnCreateImageSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateImage {
        onCreateImage {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateImageSubscription>;

  OnUpdateImageListener: Observable<OnUpdateImageSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateImage {
        onUpdateImage {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateImageSubscription>;

  OnDeleteImageListener: Observable<OnDeleteImageSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteImage {
        onDeleteImage {
          __typename
          id
          teamId
          fileName
          orientation
          type
          size {
            __typename
            s {
              __typename
              id
              size
              url
            }
            m {
              __typename
              id
              size
              url
            }
            l {
              __typename
              id
              size
              url
            }
            xl {
              __typename
              id
              size
              url
            }
            original {
              __typename
              id
              size
              url
            }
          }
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteImageSubscription>;

  OnCreateProjectListener: Observable<
    OnCreateProjectSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateProject {
        onCreateProject {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateProjectSubscription>;

  OnUpdateProjectListener: Observable<
    OnUpdateProjectSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateProject {
        onUpdateProject {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateProjectSubscription>;

  OnDeleteProjectListener: Observable<
    OnDeleteProjectSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteProject {
        onDeleteProject {
          __typename
          id
          teamId
          name
          logoImageId
          logoImage {
            __typename
            id
            teamId
            fileName
            orientation
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
            }
            nextToken
          }
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          dueDate
          status {
            __typename
            id
            teamId
            name
            inWorkflow
            category
            step
            final
            type
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          archived
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteProjectSubscription>;

  OnCreateProjectProductListener: Observable<
    OnCreateProjectProductSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateProjectProduct {
        onCreateProjectProduct {
          __typename
          id
          teamId
          projectId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          project {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
        }
      }`
    )
  ) as Observable<OnCreateProjectProductSubscription>;

  OnUpdateProjectProductListener: Observable<
    OnUpdateProjectProductSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateProjectProduct {
        onUpdateProjectProduct {
          __typename
          id
          teamId
          projectId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          project {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
        }
      }`
    )
  ) as Observable<OnUpdateProjectProductSubscription>;

  OnDeleteProjectProductListener: Observable<
    OnDeleteProjectProductSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteProjectProduct {
        onDeleteProjectProduct {
          __typename
          id
          teamId
          projectId
          productId
          product {
            __typename
            id
            teamId
            statusId
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            supplierId
            supplier {
              __typename
              id
              teamId
              statusId
              categoryId
              imageIds
              attachmentsIds
              logoImageId
              eventId
              assigneeId
              tagIds
              globalId
              name
              dueDate
              completed
              completionDate
              score
              favorite
              archived
              reference
              referenceKey
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            categoryId
            category {
              __typename
              id
              teamId
              name
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            imageIds
            images {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            attachmentsIds
            attachments {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            eventId
            event {
              __typename
              id
              teamId
              global
              name
              description
              website
              startDate
              endDate
              countryCode
              venueId
              logoImageId
              supplierCount
              industriesId
              primaryColor
              secondaryColor
              globalEventId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            projects {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            tagIds
            properties {
              __typename
              name
              value
            }
            name
            dueDate
            completed
            completionDate
            score
            favorite
            archived
            reference
            referenceKey
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
          project {
            __typename
            id
            teamId
            name
            logoImageId
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            description
            products {
              __typename
              nextToken
            }
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            dueDate
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              type
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            archived
            createdAt
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            deletedAt
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedAt
            deleted
          }
        }
      }`
    )
  ) as Observable<OnDeleteProjectProductSubscription>;

  OnCreateWorkflowStatusListener: Observable<
    OnCreateWorkflowStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateWorkflowStatus {
        onCreateWorkflowStatus {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateWorkflowStatusSubscription>;

  OnUpdateWorkflowStatusListener: Observable<
    OnUpdateWorkflowStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateWorkflowStatus {
        onUpdateWorkflowStatus {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateWorkflowStatusSubscription>;

  OnDeleteWorkflowStatusListener: Observable<
    OnDeleteWorkflowStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteWorkflowStatus {
        onDeleteWorkflowStatus {
          __typename
          id
          teamId
          name
          inWorkflow
          category
          step
          final
          type
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteWorkflowStatusSubscription>;

  OnCreateSupplierTypeListener: Observable<
    OnCreateSupplierTypeSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateSupplierType {
        onCreateSupplierType {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateSupplierTypeSubscription>;

  OnUpdateSupplierTypeListener: Observable<
    OnUpdateSupplierTypeSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateSupplierType {
        onUpdateSupplierType {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateSupplierTypeSubscription>;

  OnDeleteSupplierTypeListener: Observable<
    OnDeleteSupplierTypeSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteSupplierType {
        onDeleteSupplierType {
          __typename
          id
          teamId
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteSupplierTypeSubscription>;

  OnCreateTagListener: Observable<OnCreateTagSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateTag {
        onCreateTag {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateTagSubscription>;

  OnUpdateTagListener: Observable<OnUpdateTagSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateTag {
        onUpdateTag {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateTagSubscription>;

  OnDeleteTagListener: Observable<OnDeleteTagSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteTag {
        onDeleteTag {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteTagSubscription>;

  OnCreateVenueListener: Observable<OnCreateVenueSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateVenue {
        onCreateVenue {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateVenueSubscription>;

  OnUpdateVenueListener: Observable<OnUpdateVenueSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateVenue {
        onUpdateVenue {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateVenueSubscription>;

  OnDeleteVenueListener: Observable<OnDeleteVenueSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteVenue {
        onDeleteVenue {
          __typename
          id
          teamId
          global
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteVenueSubscription>;

  OnCreateVoteListener: Observable<OnCreateVoteSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateVote {
        onCreateVote {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateVoteSubscription>;

  OnUpdateVoteListener: Observable<OnUpdateVoteSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateVote {
        onUpdateVote {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateVoteSubscription>;

  OnDeleteVoteListener: Observable<OnDeleteVoteSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteVote {
        onDeleteVote {
          __typename
          id
          teamId
          rating
          message
          nodeId
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteVoteSubscription>;

  OnCreateDescriptorListener: Observable<
    OnCreateDescriptorSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateDescriptor {
        onCreateDescriptor {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateDescriptorSubscription>;

  OnUpdateDescriptorListener: Observable<
    OnUpdateDescriptorSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateDescriptor {
        onUpdateDescriptor {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateDescriptorSubscription>;

  OnDeleteDescriptorListener: Observable<
    OnDeleteDescriptorSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteDescriptor {
        onDeleteDescriptor {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              id
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          type
          name
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteDescriptorSubscription>;

  OnCreateFieldDefinitionListener: Observable<
    OnCreateFieldDefinitionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateFieldDefinition {
        onCreateFieldDefinition {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnCreateFieldDefinitionSubscription>;

  OnUpdateFieldDefinitionListener: Observable<
    OnUpdateFieldDefinitionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateFieldDefinition {
        onUpdateFieldDefinition {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnUpdateFieldDefinitionSubscription>;

  OnDeleteFieldDefinitionListener: Observable<
    OnDeleteFieldDefinitionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteFieldDefinition {
        onDeleteFieldDefinition {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdAt
              deletedAt
              lastUpdatedAt
              deleted
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
            }
            lastUpdatedOn
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          deletedAt
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
          }
          lastUpdatedAt
          deleted
        }
      }`
    )
  ) as Observable<OnDeleteFieldDefinitionSubscription>;
}
