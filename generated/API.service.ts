/* tslint:disable */
//  This file was automatically generated and should not be edited.
import { Injectable } from "@angular/core";
import API, { graphqlOperation } from "@aws-amplify/api";
import { GraphQLResult } from "@aws-amplify/api/lib/types";
import * as Observable from "zen-observable";

export type CreateTeamInput = {
  name: string;
  companyId: string;
};

export enum Lang {
  EN = "EN",
  FR = "FR",
  CN = "CN"
}

export type CreateInvitationInput = {
  teamId: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
};

export type ModelInvitationConditionInput = {
  teamId?: ModelIDInput | null;
  email?: ModelStringInput | null;
  firstName?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  status?: ModelInvitationStatusInput | null;
  secret?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelInvitationConditionInput | null> | null;
  or?: Array<ModelInvitationConditionInput | null> | null;
  not?: ModelInvitationConditionInput | null;
};

export type ModelIDInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
  size?: ModelSizeInput | null;
};

export enum ModelAttributeTypes {
  binary = "binary",
  binarySet = "binarySet",
  bool = "bool",
  list = "list",
  map = "map",
  number = "number",
  numberSet = "numberSet",
  string = "string",
  stringSet = "stringSet",
  _null = "_null"
}

export type ModelSizeInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
};

export type ModelStringInput = {
  ne?: string | null;
  eq?: string | null;
  le?: string | null;
  lt?: string | null;
  ge?: string | null;
  gt?: string | null;
  contains?: string | null;
  notContains?: string | null;
  between?: Array<string | null> | null;
  beginsWith?: string | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
  size?: ModelSizeInput | null;
};

export type ModelInvitationStatusInput = {
  eq?: InvitationStatus | null;
  ne?: InvitationStatus | null;
};

export enum InvitationStatus {
  SENT = "SENT",
  ACCEPTED = "ACCEPTED",
  REFUSED = "REFUSED"
}

export type ModelIntInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type ModelBooleanInput = {
  ne?: boolean | null;
  eq?: boolean | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export type UpdateInvitationInput = {
  id: string;
  teamId?: string | null;
  email?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  status?: InvitationStatus | null;
  secret?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteInvitationInput = {
  id: string;
  _version?: number | null;
};

export type CreateTeamUserInput = {
  teamId: string;
  userId: string;
  team?: TeamInput | null;
  role: TeamRole;
  _version?: number | null;
};

export type TeamInput = {
  id: string;
  name: string;
  ownerUserId: string;
  companyId: string;
  createdByUserId: string;
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedOn?: number | null;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export enum TeamRole {
  TEAMOWNER = "TEAMOWNER",
  TEAMMEMBER = "TEAMMEMBER",
  TEAMVIEWER = "TEAMVIEWER"
}

export type ModelTeamUserConditionInput = {
  role?: ModelTeamRoleInput | null;
  and?: Array<ModelTeamUserConditionInput | null> | null;
  or?: Array<ModelTeamUserConditionInput | null> | null;
  not?: ModelTeamUserConditionInput | null;
};

export type ModelTeamRoleInput = {
  eq?: TeamRole | null;
  ne?: TeamRole | null;
};

export type UpdateTeamUserInput = {
  teamId: string;
  userId: string;
  team?: TeamInput | null;
  role?: TeamRole | null;
  _version?: number | null;
};

export type DeleteTeamUserInput = {
  teamId: string;
  userId: string;
  _version?: number | null;
};

export type CreateCompanyInput = {
  name: string;
};

export type ModelCompanyConditionInput = {
  name?: ModelStringInput | null;
  ownerUserId?: ModelIDInput | null;
  createdByUserId?: ModelIDInput | null;
  createdOn?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedOn?: ModelIntInput | null;
  and?: Array<ModelCompanyConditionInput | null> | null;
  or?: Array<ModelCompanyConditionInput | null> | null;
  not?: ModelCompanyConditionInput | null;
};

export type UpdateCompanyInput = {
  id: string;
  name?: string | null;
  ownerUserId?: string | null;
  createdByUserId?: string | null;
  createdOn?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedOn?: number | null;
  _version?: number | null;
};

export type DeleteCompanyInput = {
  id: string;
  _version?: number | null;
};

export type CreateProductInput = {
  id?: string | null;
  teamId: string;
  name: string;
  price?: PriceInput | null;
  description?: string | null;
  favorite?: boolean | null;
  assigneeId?: string | null;
  minimumOrderQuantity?: number | null;
  moqDescription?: string | null;
  incoTerm?: string | null;
  harbour?: string | null;
  masterCbm?: number | null;
  quantityPer20ft?: number | null;
  quantityPer40ft?: number | null;
  quantityPer40ftHC?: number | null;
  leadTimeValue?: number | null;
  leadTimeUnit?: string | null;
  sample?: boolean | null;
  samplePrice?: PriceInput | null;
  archived?: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
  productSupplierId?: string | null;
};

export type PriceInput = {
  currency?: string | null;
  value?: number | null;
  baseCurrencyValue?: number | null;
};

export type ModelProductConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  favorite?: ModelBooleanInput | null;
  assigneeId?: ModelIDInput | null;
  score?: ModelIntInput | null;
  incoTerm?: ModelStringInput | null;
  harbour?: ModelStringInput | null;
  masterCbm?: ModelFloatInput | null;
  quantityPer20ft?: ModelIntInput | null;
  quantityPer40ft?: ModelIntInput | null;
  quantityPer40ftHC?: ModelIntInput | null;
  sample?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProductConditionInput | null> | null;
  or?: Array<ModelProductConditionInput | null> | null;
  not?: ModelProductConditionInput | null;
};

export type ModelFloatInput = {
  ne?: number | null;
  eq?: number | null;
  le?: number | null;
  lt?: number | null;
  ge?: number | null;
  gt?: number | null;
  between?: Array<number | null> | null;
  attributeExists?: boolean | null;
  attributeType?: ModelAttributeTypes | null;
};

export enum ImageType {
  JPG = "JPG",
  PNG = "PNG",
  GIF = "GIF"
}

export enum LeadTimeUnit {
  DAY = "DAY",
  MONTH = "MONTH"
}

export type UpdateProductInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  price?: PriceInput | null;
  description?: string | null;
  favorite?: boolean | null;
  assigneeId?: string | null;
  assignee?: UserInput | null;
  score?: number | null;
  extendedFields?: Array<FieldValueInput | null> | null;
  incoTerm?: string | null;
  harbour?: string | null;
  masterCbm?: number | null;
  quantityPer20ft?: number | null;
  quantityPer40ft?: number | null;
  quantityPer40ftHC?: number | null;
  itemDimension?: PackagingInput | null;
  innerCarton?: PackagingInput | null;
  masterCarton?: PackagingInput | null;
  priceMatrix?: Array<PriceInput | null> | null;
  leadTime?: LeadTimeInput | null;
  sample?: boolean | null;
  samplePrice?: PriceInput | null;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
  productSupplierId?: string | null;
};

export type UserInput = {
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  phoneNumber?: string | null;
  preferredLanguage?: Lang | null;
  avatar?: string | null;
  creationDate?: number | null;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export type FieldValueInput = {
  name: string;
  value: string;
};

export type PackagingInput = {
  height?: number | null;
  width?: number | null;
  length?: number | null;
  unit?: string | null;
  itemsQuantity?: number | null;
  weight?: number | null;
  weightUnit?: string | null;
  type?: string | null;
};

export type LeadTimeInput = {
  value?: number | null;
  unit?: LeadTimeUnit | null;
};

export type DeleteProductInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateAttachmentInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  fileName: string;
  url?: string | null;
  size?: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
  productAttachmentsId?: string | null;
};

export type ModelAttachmentConditionInput = {
  teamId?: ModelIDInput | null;
  fileName?: ModelStringInput | null;
  url?: ModelStringInput | null;
  size?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelAttachmentConditionInput | null> | null;
  or?: Array<ModelAttachmentConditionInput | null> | null;
  not?: ModelAttachmentConditionInput | null;
};

export type UpdateAttachmentInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  fileName?: string | null;
  url?: string | null;
  size?: number | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
  productAttachmentsId?: string | null;
};

export type DeleteAttachmentInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateSupplierInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  fullName?: string | null;
  tradingName?: string | null;
  description?: string | null;
  website?: string | null;
  phoneNumber?: string | null;
  country?: string | null;
  city?: string | null;
  address?: string | null;
  officeEmail?: string | null;
  officePhone?: string | null;
  incoTerm?: string | null;
  harbour?: string | null;
  generalMOQ?: number | null;
  generalLeadTime?: number | null;
  favorite?: boolean | null;
  globalDatabaseId?: string | null;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelSupplierConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  fullName?: ModelStringInput | null;
  tradingName?: ModelStringInput | null;
  description?: ModelStringInput | null;
  website?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  country?: ModelStringInput | null;
  city?: ModelStringInput | null;
  address?: ModelStringInput | null;
  officeEmail?: ModelStringInput | null;
  officePhone?: ModelStringInput | null;
  incoTerm?: ModelStringInput | null;
  harbour?: ModelStringInput | null;
  generalMOQ?: ModelIntInput | null;
  generalLeadTime?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  globalDatabaseId?: ModelIDInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierConditionInput | null> | null;
  or?: Array<ModelSupplierConditionInput | null> | null;
  not?: ModelSupplierConditionInput | null;
};

export type UpdateSupplierInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  fullName?: string | null;
  tradingName?: string | null;
  description?: string | null;
  website?: string | null;
  phoneNumber?: string | null;
  country?: string | null;
  city?: string | null;
  address?: string | null;
  officeEmail?: string | null;
  officePhone?: string | null;
  incoTerm?: string | null;
  harbour?: string | null;
  generalMOQ?: number | null;
  generalLeadTime?: number | null;
  favorite?: boolean | null;
  globalDatabaseId?: string | null;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteSupplierInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateDescriptorInput = {
  id?: string | null;
  teamId: string;
  sections?: Array<DescriptorSectionInput | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy?: UserInput | null;
  deletedByUserId: string;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type DescriptorSectionInput = {
  name: string;
  fields?: Array<DescriptorFieldInput | null> | null;
};

export type DescriptorFieldInput = {
  fieldId: string;
  defaultValue?: string | null;
  fixedValue?: boolean | null;
  required?: boolean | null;
  metadata?: string | null;
};

export enum DescriptorType {
  PRODUCT = "PRODUCT",
  SUPPLIER = "SUPPLIER",
  SAMPLE = "SAMPLE",
  TASK = "TASK",
  SUPPLIER_REQUEST = "SUPPLIER_REQUEST"
}

export type ModelDescriptorConditionInput = {
  teamId?: ModelIDInput | null;
  target?: ModelDescriptorTypeInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelDescriptorConditionInput | null> | null;
  or?: Array<ModelDescriptorConditionInput | null> | null;
  not?: ModelDescriptorConditionInput | null;
};

export type ModelDescriptorTypeInput = {
  eq?: DescriptorType | null;
  ne?: DescriptorType | null;
};

export type UpdateDescriptorInput = {
  id: string;
  teamId?: string | null;
  sections?: Array<DescriptorSectionInput | null> | null;
  target?: DescriptorType | null;
  name?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteDescriptorInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateProjectInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  description?: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelProjectConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProjectConditionInput | null> | null;
  or?: Array<ModelProjectConditionInput | null> | null;
  not?: ModelProjectConditionInput | null;
};

export type UpdateProjectInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  description?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteProjectInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateProjectProductInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  projectId: string;
  productId: string;
  product?: ProductInput | null;
  project?: ProjectInput | null;
  _version?: number | null;
};

export type ProductInput = {
  id: string;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  supplier?: SupplierInput | null;
  price?: PriceInput | null;
  description?: string | null;
  favorite?: boolean | null;
  assigneeId: string;
  assignee?: UserInput | null;
  score?: number | null;
  attachments?: Array<AttachmentInput | null> | null;
  extendedFields?: Array<FieldValueInput | null> | null;
  incoTerm?: string | null;
  harbour?: string | null;
  masterCbm?: number | null;
  quantityPer20ft?: number | null;
  quantityPer40ft?: number | null;
  quantityPer40ftHC?: number | null;
  itemDimension?: PackagingInput | null;
  innerCarton?: PackagingInput | null;
  masterCarton?: PackagingInput | null;
  priceMatrix?: Array<PriceInput | null> | null;
  leadTime?: LeadTimeInput | null;
  sample?: boolean | null;
  samplePrice?: PriceInput | null;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export type SupplierInput = {
  id: string;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  fullName?: string | null;
  tradingName?: string | null;
  description?: string | null;
  website?: string | null;
  phoneNumber?: string | null;
  country?: string | null;
  city?: string | null;
  address?: string | null;
  officeEmail?: string | null;
  officePhone?: string | null;
  incoTerm?: string | null;
  harbour?: string | null;
  generalMOQ?: number | null;
  generalLeadTime?: number | null;
  favorite?: boolean | null;
  globalDatabaseId?: string | null;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export type AttachmentInput = {
  id: string;
  teamId: string;
  team?: TeamInput | null;
  fileName: string;
  url?: string | null;
  size?: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export type ProjectInput = {
  id: string;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  description?: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export type ModelProjectProductConditionInput = {
  teamId?: ModelIDInput | null;
  projectId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  and?: Array<ModelProjectProductConditionInput | null> | null;
  or?: Array<ModelProjectProductConditionInput | null> | null;
  not?: ModelProjectProductConditionInput | null;
};

export type UpdateProjectProductInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  projectId?: string | null;
  productId?: string | null;
  product?: ProductInput | null;
  project?: ProjectInput | null;
  _version?: number | null;
};

export type DeleteProjectProductInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateSampleInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  assignee: UserInput;
  description: string;
  linkedProductId: string;
  linkedProduct?: ProductInput | null;
  linkedSupplierId: string;
  linkedSupplier: SupplierInput;
  price: PriceInput;
  paid: boolean;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelSampleConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  linkedProductId?: ModelIDInput | null;
  linkedSupplierId?: ModelIDInput | null;
  paid?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSampleConditionInput | null> | null;
  or?: Array<ModelSampleConditionInput | null> | null;
  not?: ModelSampleConditionInput | null;
};

export type UpdateSampleInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  assignee?: UserInput | null;
  description?: string | null;
  linkedProductId?: string | null;
  linkedProduct?: ProductInput | null;
  linkedSupplierId?: string | null;
  linkedSupplier?: SupplierInput | null;
  price?: PriceInput | null;
  paid?: boolean | null;
  archived?: boolean | null;
  reference?: string | null;
  referenceKey?: number | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteSampleInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateFieldDefinitionInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  label: string;
  type: FieldType;
  name: string;
  default?: boolean | null;
  metaData?: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy?: UserInput | null;
  deletedByUserId: string;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export enum FieldType {
  INT = "INT",
  FLOAT = "FLOAT",
  STRING = "STRING",
  PRICE = "PRICE",
  DATE = "DATE",
  SELECTOR = "SELECTOR"
}

export type ModelFieldDefinitionConditionInput = {
  teamId?: ModelIDInput | null;
  label?: ModelStringInput | null;
  type?: ModelFieldTypeInput | null;
  name?: ModelStringInput | null;
  default?: ModelBooleanInput | null;
  metaData?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelFieldDefinitionConditionInput | null> | null;
  or?: Array<ModelFieldDefinitionConditionInput | null> | null;
  not?: ModelFieldDefinitionConditionInput | null;
};

export type ModelFieldTypeInput = {
  eq?: FieldType | null;
  ne?: FieldType | null;
};

export type UpdateFieldDefinitionInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  label?: string | null;
  type?: FieldType | null;
  name?: string | null;
  default?: boolean | null;
  metaData?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteFieldDefinitionInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateCategoryInput = {
  id?: string | null;
  teamId: string;
  name: string;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelCategoryConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCategoryConditionInput | null> | null;
  or?: Array<ModelCategoryConditionInput | null> | null;
  not?: ModelCategoryConditionInput | null;
};

export type UpdateCategoryInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteCategoryInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateHelperListInput = {
  id?: string | null;
  helperType?: HelperType | null;
  code: string;
  label: string;
  _version?: number | null;
};

export enum HelperType {
  COUNTRY = "COUNTRY",
  HARBOUR = "HARBOUR",
  CURRENCY = "CURRENCY"
}

export type ModelhelperListConditionInput = {
  helperType?: ModelHelperTypeInput | null;
  code?: ModelStringInput | null;
  label?: ModelStringInput | null;
  and?: Array<ModelhelperListConditionInput | null> | null;
  or?: Array<ModelhelperListConditionInput | null> | null;
  not?: ModelhelperListConditionInput | null;
};

export type ModelHelperTypeInput = {
  eq?: HelperType | null;
  ne?: HelperType | null;
};

export type UpdateHelperListInput = {
  id: string;
  helperType?: HelperType | null;
  code?: string | null;
  label?: string | null;
  _version?: number | null;
};

export type DeleteHelperListInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateCommentInput = {
  id?: string | null;
  teamId: string;
  message?: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelCommentConditionInput = {
  teamId?: ModelIDInput | null;
  message?: ModelStringInput | null;
  nodeId?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCommentConditionInput | null> | null;
  or?: Array<ModelCommentConditionInput | null> | null;
  not?: ModelCommentConditionInput | null;
};

export type UpdateCommentInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  message?: string | null;
  nodeId?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteCommentInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateContactInput = {
  id?: string | null;
  teamId: string;
  name?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  jobTitle?: string | null;
  supplierId?: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelContactConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  email?: ModelStringInput | null;
  jobTitle?: ModelStringInput | null;
  supplierId?: ModelIDInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelContactConditionInput | null> | null;
  or?: Array<ModelContactConditionInput | null> | null;
  not?: ModelContactConditionInput | null;
};

export type UpdateContactInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  jobTitle?: string | null;
  supplierId?: string | null;
  supplier?: SupplierInput | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteContactInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateExportInput = {
  teamdId: string;
  format: ExportFormat;
  target?: ExportTarget | null;
  options?: string | null;
  query?: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export enum ExportFormat {
  XLS = "XLS",
  PDF = "PDF",
  IMAGE = "IMAGE"
}

export enum ExportTarget {
  SUPPLIER = "SUPPLIER",
  PRODUCT = "PRODUCT",
  CONTACT = "CONTACT",
  SAMPLE = "SAMPLE"
}

export type ModelExportConditionInput = {
  teamId?: ModelIDInput | null;
  format?: ModelExportFormatInput | null;
  target?: ModelExportTargetInput | null;
  options?: ModelStringInput | null;
  query?: ModelStringInput | null;
  status?: ModelExportStatusInput | null;
  documentUrl?: ModelStringInput | null;
  errors?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelExportConditionInput | null> | null;
  or?: Array<ModelExportConditionInput | null> | null;
  not?: ModelExportConditionInput | null;
};

export type ModelExportFormatInput = {
  eq?: ExportFormat | null;
  ne?: ExportFormat | null;
};

export type ModelExportTargetInput = {
  eq?: ExportTarget | null;
  ne?: ExportTarget | null;
};

export type ModelExportStatusInput = {
  eq?: ExportStatus | null;
  ne?: ExportStatus | null;
};

export enum ExportStatus {
  PENDING = "PENDING",
  PROCESSING = "PROCESSING",
  READY = "READY",
  ERROR = "ERROR"
}

export type UpdateExportInput = {
  id: string;
  teamId?: string | null;
  format?: ExportFormat | null;
  target?: ExportTarget | null;
  options?: string | null;
  query?: string | null;
  status?: ExportStatus | null;
  documentUrl?: string | null;
  errors?: Array<string | null> | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteExportInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateImageInput = {
  id?: string | null;
  teamId: string;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
  sampleImagesId?: string | null;
};

export type ModelImageConditionInput = {
  teamId?: ModelIDInput | null;
  fileName?: ModelStringInput | null;
  orientation?: ModelIntInput | null;
  imageType?: ModelImageTypeInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelImageConditionInput | null> | null;
  or?: Array<ModelImageConditionInput | null> | null;
  not?: ModelImageConditionInput | null;
};

export type ModelImageTypeInput = {
  eq?: ImageType | null;
  ne?: ImageType | null;
};

export type UpdateImageInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  fileName?: string | null;
  orientation?: number | null;
  imageType?: ImageType | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
  sampleImagesId?: string | null;
};

export type DeleteImageInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateEventInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  global?: boolean | null;
  name?: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy?: UserInput | null;
  deletedByUserId: string;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
  eventDescriptionId: string;
};

export type ModelEventConditionInput = {
  teamId?: ModelIDInput | null;
  global?: ModelBooleanInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelEventConditionInput | null> | null;
  or?: Array<ModelEventConditionInput | null> | null;
  not?: ModelEventConditionInput | null;
};

export type UpdateEventInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  global?: boolean | null;
  name?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
  eventDescriptionId?: string | null;
};

export type DeleteEventInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateEventDescriptionInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name: string;
  description?: string | null;
  website?: string | null;
  startDate?: number | null;
  endDate?: number | null;
  countryCode?: string | null;
  logoImage?: ImageInput | null;
  global: boolean;
  supplierCount?: number | null;
  primaryColor?: string | null;
  secondaryColor?: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy?: UserInput | null;
  deletedByUserId: string;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ImageInput = {
  id: string;
  teamId: string;
  team?: TeamInput | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy?: UserInput | null;
  deletedByUserId: string;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted?: boolean | null;
  _lastChangedAt: number;
};

export type ModelEventDescriptionConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  website?: ModelStringInput | null;
  startDate?: ModelIntInput | null;
  endDate?: ModelIntInput | null;
  countryCode?: ModelStringInput | null;
  global?: ModelBooleanInput | null;
  supplierCount?: ModelIntInput | null;
  primaryColor?: ModelStringInput | null;
  secondaryColor?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelEventDescriptionConditionInput | null> | null;
  or?: Array<ModelEventDescriptionConditionInput | null> | null;
  not?: ModelEventDescriptionConditionInput | null;
};

export type UpdateEventDescriptionInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  description?: string | null;
  website?: string | null;
  startDate?: number | null;
  endDate?: number | null;
  countryCode?: string | null;
  logoImage?: ImageInput | null;
  global?: boolean | null;
  supplierCount?: number | null;
  primaryColor?: string | null;
  secondaryColor?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteEventDescriptionInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateVenueInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  city?: string | null;
  name: string;
  latitude?: number | null;
  country?: string | null;
  longitude?: number | null;
  addressFull?: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy?: UserInput | null;
  deletedByUserId: string;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelVenueConditionInput = {
  teamId?: ModelIDInput | null;
  city?: ModelStringInput | null;
  name?: ModelStringInput | null;
  latitude?: ModelFloatInput | null;
  country?: ModelStringInput | null;
  longitude?: ModelFloatInput | null;
  addressFull?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelVenueConditionInput | null> | null;
  or?: Array<ModelVenueConditionInput | null> | null;
  not?: ModelVenueConditionInput | null;
};

export type UpdateVenueInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  city?: string | null;
  name?: string | null;
  latitude?: number | null;
  country?: string | null;
  longitude?: number | null;
  addressFull?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  createdBy?: UserInput | null;
  deletedByUserId?: string | null;
  deletedBy?: UserInput | null;
  deletedAt?: number | null;
  lastupdatedByUserId?: string | null;
  lastUpdatedBy?: UserInput | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteVenueInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateIndustryInput = {
  id?: string | null;
  name: string;
  _version?: number | null;
};

export type ModelIndustryConditionInput = {
  name?: ModelStringInput | null;
  and?: Array<ModelIndustryConditionInput | null> | null;
  or?: Array<ModelIndustryConditionInput | null> | null;
  not?: ModelIndustryConditionInput | null;
};

export type UpdateIndustryInput = {
  id: string;
  name?: string | null;
  _version?: number | null;
};

export type DeleteIndustryInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateTaskInput = {
  id?: string | null;
  teamId: string;
  name?: string | null;
  description?: string | null;
  dueDate?: number | null;
  completed?: boolean | null;
  completionDate?: number | null;
  assigneeUserId?: string | null;
  inProgress?: boolean | null;
  taskProductId?: string | null;
  taskSupplierId?: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelTaskConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  dueDate?: ModelIntInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelIntInput | null;
  assigneeUserId?: ModelIDInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  inProgress?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTaskConditionInput | null> | null;
  or?: Array<ModelTaskConditionInput | null> | null;
  not?: ModelTaskConditionInput | null;
};

export type UpdateTaskInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  description?: string | null;
  dueDate?: number | null;
  completed?: boolean | null;
  completionDate?: number | null;
  assigneeUserId?: string | null;
  assignee?: UserInput | null;
  product?: ProductInput | null;
  supplier?: SupplierInput | null;
  reference?: string | null;
  referenceKey?: number | null;
  inProgress?: boolean | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
  taskProductId?: string | null;
  taskSupplierId?: string | null;
};

export type DeleteTaskInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateTagInput = {
  id?: string | null;
  teamId: string;
  name?: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
  productTagsId?: string | null;
};

export type ModelTagConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTagConditionInput | null> | null;
  or?: Array<ModelTagConditionInput | null> | null;
  not?: ModelTagConditionInput | null;
};

export type UpdateTagInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
  productTagsId?: string | null;
};

export type DeleteTagInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateSampleStatusInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name?: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelSampleStatusConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSampleStatusConditionInput | null> | null;
  or?: Array<ModelSampleStatusConditionInput | null> | null;
  not?: ModelSampleStatusConditionInput | null;
};

export type UpdateSampleStatusInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  inWorkflow?: boolean | null;
  category?: string | null;
  step?: number | null;
  final?: boolean | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteSampleStatusInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateProductStatusInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name?: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelProductStatusConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProductStatusConditionInput | null> | null;
  or?: Array<ModelProductStatusConditionInput | null> | null;
  not?: ModelProductStatusConditionInput | null;
};

export type UpdateProductStatusInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  inWorkflow?: boolean | null;
  category?: string | null;
  step?: number | null;
  final?: boolean | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteProductStatusInput = {
  id?: string | null;
  _version?: number | null;
};

export type CreateSupplierStatusInput = {
  id?: string | null;
  teamId: string;
  team?: TeamInput | null;
  name?: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version?: number | null;
};

export type ModelSupplierStatusConditionInput = {
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierStatusConditionInput | null> | null;
  or?: Array<ModelSupplierStatusConditionInput | null> | null;
  not?: ModelSupplierStatusConditionInput | null;
};

export type UpdateSupplierStatusInput = {
  id: string;
  teamId?: string | null;
  team?: TeamInput | null;
  name?: string | null;
  inWorkflow?: boolean | null;
  category?: string | null;
  step?: number | null;
  final?: boolean | null;
  createdAt?: number | null;
  createdByUserId?: string | null;
  deletedByUSerId?: string | null;
  deletedAt?: number | null;
  lastUpdatedByUserId?: string | null;
  lastUpdatedAt?: number | null;
  deleted?: boolean | null;
  _version?: number | null;
};

export type DeleteSupplierStatusInput = {
  id?: string | null;
  _version?: number | null;
};

export type ModelTeamFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  ownerUserId?: ModelIDInput | null;
  companyId?: ModelIDInput | null;
  createdByUserId?: ModelIDInput | null;
  createdOn?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedOn?: ModelIntInput | null;
  and?: Array<ModelTeamFilterInput | null> | null;
  or?: Array<ModelTeamFilterInput | null> | null;
  not?: ModelTeamFilterInput | null;
};

export type ModelInvitationFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  email?: ModelStringInput | null;
  firstName?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  status?: ModelInvitationStatusInput | null;
  secret?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelInvitationFilterInput | null> | null;
  or?: Array<ModelInvitationFilterInput | null> | null;
  not?: ModelInvitationFilterInput | null;
};

export enum ModelSortDirection {
  ASC = "ASC",
  DESC = "DESC"
}

export type ModelTeamUserFilterInput = {
  teamId?: ModelIDInput | null;
  userId?: ModelIDInput | null;
  role?: ModelTeamRoleInput | null;
  and?: Array<ModelTeamUserFilterInput | null> | null;
  or?: Array<ModelTeamUserFilterInput | null> | null;
  not?: ModelTeamUserFilterInput | null;
};

export type ModelCompanyFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  ownerUserId?: ModelIDInput | null;
  createdByUserId?: ModelIDInput | null;
  createdOn?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedOn?: ModelIntInput | null;
  and?: Array<ModelCompanyFilterInput | null> | null;
  or?: Array<ModelCompanyFilterInput | null> | null;
  not?: ModelCompanyFilterInput | null;
};

export type ModelUserFilterInput = {
  id?: ModelIDInput | null;
  email?: ModelStringInput | null;
  firstName?: ModelStringInput | null;
  lastName?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  preferredLanguage?: ModelLangInput | null;
  avatar?: ModelStringInput | null;
  creationDate?: ModelIntInput | null;
  and?: Array<ModelUserFilterInput | null> | null;
  or?: Array<ModelUserFilterInput | null> | null;
  not?: ModelUserFilterInput | null;
};

export type ModelLangInput = {
  eq?: Lang | null;
  ne?: Lang | null;
};

export type ModelProductFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  favorite?: ModelBooleanInput | null;
  assigneeId?: ModelIDInput | null;
  score?: ModelIntInput | null;
  incoTerm?: ModelStringInput | null;
  harbour?: ModelStringInput | null;
  masterCbm?: ModelFloatInput | null;
  quantityPer20ft?: ModelIntInput | null;
  quantityPer40ft?: ModelIntInput | null;
  quantityPer40ftHC?: ModelIntInput | null;
  sample?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProductFilterInput | null> | null;
  or?: Array<ModelProductFilterInput | null> | null;
  not?: ModelProductFilterInput | null;
};

export type ModelAttachmentFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  fileName?: ModelStringInput | null;
  url?: ModelStringInput | null;
  size?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelAttachmentFilterInput | null> | null;
  or?: Array<ModelAttachmentFilterInput | null> | null;
  not?: ModelAttachmentFilterInput | null;
};

export type ModelSupplierFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  fullName?: ModelStringInput | null;
  tradingName?: ModelStringInput | null;
  description?: ModelStringInput | null;
  website?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  country?: ModelStringInput | null;
  city?: ModelStringInput | null;
  address?: ModelStringInput | null;
  officeEmail?: ModelStringInput | null;
  officePhone?: ModelStringInput | null;
  incoTerm?: ModelStringInput | null;
  harbour?: ModelStringInput | null;
  generalMOQ?: ModelIntInput | null;
  generalLeadTime?: ModelIntInput | null;
  favorite?: ModelBooleanInput | null;
  globalDatabaseId?: ModelIDInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierFilterInput | null> | null;
  or?: Array<ModelSupplierFilterInput | null> | null;
  not?: ModelSupplierFilterInput | null;
};

export type ModelDescriptorFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  target?: ModelDescriptorTypeInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelDescriptorFilterInput | null> | null;
  or?: Array<ModelDescriptorFilterInput | null> | null;
  not?: ModelDescriptorFilterInput | null;
};

export type ModelProjectFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProjectFilterInput | null> | null;
  or?: Array<ModelProjectFilterInput | null> | null;
  not?: ModelProjectFilterInput | null;
};

export type ModelProjectProductFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  projectId?: ModelIDInput | null;
  productId?: ModelIDInput | null;
  and?: Array<ModelProjectProductFilterInput | null> | null;
  or?: Array<ModelProjectProductFilterInput | null> | null;
  not?: ModelProjectProductFilterInput | null;
};

export type ModelSampleFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  linkedProductId?: ModelIDInput | null;
  linkedSupplierId?: ModelIDInput | null;
  paid?: ModelBooleanInput | null;
  archived?: ModelBooleanInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSampleFilterInput | null> | null;
  or?: Array<ModelSampleFilterInput | null> | null;
  not?: ModelSampleFilterInput | null;
};

export type ModelFieldDefinitionFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  label?: ModelStringInput | null;
  type?: ModelFieldTypeInput | null;
  name?: ModelStringInput | null;
  default?: ModelBooleanInput | null;
  metaData?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelFieldDefinitionFilterInput | null> | null;
  or?: Array<ModelFieldDefinitionFilterInput | null> | null;
  not?: ModelFieldDefinitionFilterInput | null;
};

export type ModelCategoryFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCategoryFilterInput | null> | null;
  or?: Array<ModelCategoryFilterInput | null> | null;
  not?: ModelCategoryFilterInput | null;
};

export type ModelhelperListFilterInput = {
  id?: ModelIDInput | null;
  helperType?: ModelHelperTypeInput | null;
  code?: ModelStringInput | null;
  label?: ModelStringInput | null;
  and?: Array<ModelhelperListFilterInput | null> | null;
  or?: Array<ModelhelperListFilterInput | null> | null;
  not?: ModelhelperListFilterInput | null;
};

export type ModelCommentFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  message?: ModelStringInput | null;
  nodeId?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelCommentFilterInput | null> | null;
  or?: Array<ModelCommentFilterInput | null> | null;
  not?: ModelCommentFilterInput | null;
};

export type ModelContactFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  phoneNumber?: ModelStringInput | null;
  email?: ModelStringInput | null;
  jobTitle?: ModelStringInput | null;
  supplierId?: ModelIDInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelContactFilterInput | null> | null;
  or?: Array<ModelContactFilterInput | null> | null;
  not?: ModelContactFilterInput | null;
};

export type ModelExportFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  format?: ModelExportFormatInput | null;
  target?: ModelExportTargetInput | null;
  options?: ModelStringInput | null;
  query?: ModelStringInput | null;
  status?: ModelExportStatusInput | null;
  documentUrl?: ModelStringInput | null;
  errors?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelExportFilterInput | null> | null;
  or?: Array<ModelExportFilterInput | null> | null;
  not?: ModelExportFilterInput | null;
};

export type ModelImageFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  fileName?: ModelStringInput | null;
  orientation?: ModelIntInput | null;
  imageType?: ModelImageTypeInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelImageFilterInput | null> | null;
  or?: Array<ModelImageFilterInput | null> | null;
  not?: ModelImageFilterInput | null;
};

export type ModelEventFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  global?: ModelBooleanInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelEventFilterInput | null> | null;
  or?: Array<ModelEventFilterInput | null> | null;
  not?: ModelEventFilterInput | null;
};

export type ModelEventDescriptionFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  website?: ModelStringInput | null;
  startDate?: ModelIntInput | null;
  endDate?: ModelIntInput | null;
  countryCode?: ModelStringInput | null;
  global?: ModelBooleanInput | null;
  supplierCount?: ModelIntInput | null;
  primaryColor?: ModelStringInput | null;
  secondaryColor?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelEventDescriptionFilterInput | null> | null;
  or?: Array<ModelEventDescriptionFilterInput | null> | null;
  not?: ModelEventDescriptionFilterInput | null;
};

export type ModelVenueFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  city?: ModelStringInput | null;
  name?: ModelStringInput | null;
  latitude?: ModelFloatInput | null;
  country?: ModelStringInput | null;
  longitude?: ModelFloatInput | null;
  addressFull?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUserId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastupdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelVenueFilterInput | null> | null;
  or?: Array<ModelVenueFilterInput | null> | null;
  not?: ModelVenueFilterInput | null;
};

export type ModelIndustryFilterInput = {
  id?: ModelIDInput | null;
  name?: ModelStringInput | null;
  and?: Array<ModelIndustryFilterInput | null> | null;
  or?: Array<ModelIndustryFilterInput | null> | null;
  not?: ModelIndustryFilterInput | null;
};

export type ModelTaskFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  description?: ModelStringInput | null;
  dueDate?: ModelIntInput | null;
  completed?: ModelBooleanInput | null;
  completionDate?: ModelIntInput | null;
  assigneeUserId?: ModelIDInput | null;
  reference?: ModelStringInput | null;
  referenceKey?: ModelIntInput | null;
  inProgress?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTaskFilterInput | null> | null;
  or?: Array<ModelTaskFilterInput | null> | null;
  not?: ModelTaskFilterInput | null;
};

export type ModelTagFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelTagFilterInput | null> | null;
  or?: Array<ModelTagFilterInput | null> | null;
  not?: ModelTagFilterInput | null;
};

export type ModelSampleStatusFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSampleStatusFilterInput | null> | null;
  or?: Array<ModelSampleStatusFilterInput | null> | null;
  not?: ModelSampleStatusFilterInput | null;
};

export type ModelProductStatusFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelProductStatusFilterInput | null> | null;
  or?: Array<ModelProductStatusFilterInput | null> | null;
  not?: ModelProductStatusFilterInput | null;
};

export type ModelSupplierStatusFilterInput = {
  id?: ModelIDInput | null;
  teamId?: ModelIDInput | null;
  name?: ModelStringInput | null;
  inWorkflow?: ModelBooleanInput | null;
  category?: ModelStringInput | null;
  step?: ModelIntInput | null;
  final?: ModelBooleanInput | null;
  createdAt?: ModelIntInput | null;
  createdByUserId?: ModelIDInput | null;
  deletedByUSerId?: ModelIDInput | null;
  deletedAt?: ModelIntInput | null;
  lastUpdatedByUserId?: ModelIDInput | null;
  lastUpdatedAt?: ModelIntInput | null;
  deleted?: ModelBooleanInput | null;
  and?: Array<ModelSupplierStatusFilterInput | null> | null;
  or?: Array<ModelSupplierStatusFilterInput | null> | null;
  not?: ModelSupplierStatusFilterInput | null;
};

export type SearchableProductFilterInput = {
  id?: SearchableIDFilterInput | null;
  teamId?: SearchableIDFilterInput | null;
  name?: SearchableStringFilterInput | null;
  description?: SearchableStringFilterInput | null;
  favorite?: SearchableBooleanFilterInput | null;
  assigneeId?: SearchableIDFilterInput | null;
  score?: SearchableIntFilterInput | null;
  incoTerm?: SearchableStringFilterInput | null;
  harbour?: SearchableStringFilterInput | null;
  masterCbm?: SearchableFloatFilterInput | null;
  quantityPer20ft?: SearchableIntFilterInput | null;
  quantityPer40ft?: SearchableIntFilterInput | null;
  quantityPer40ftHC?: SearchableIntFilterInput | null;
  sample?: SearchableBooleanFilterInput | null;
  archived?: SearchableBooleanFilterInput | null;
  reference?: SearchableStringFilterInput | null;
  referenceKey?: SearchableIntFilterInput | null;
  createdAt?: SearchableIntFilterInput | null;
  createdByUserId?: SearchableIDFilterInput | null;
  deletedByUSerId?: SearchableIDFilterInput | null;
  deletedAt?: SearchableIntFilterInput | null;
  lastUpdatedByUserId?: SearchableIDFilterInput | null;
  lastUpdatedAt?: SearchableIntFilterInput | null;
  deleted?: SearchableBooleanFilterInput | null;
  and?: Array<SearchableProductFilterInput | null> | null;
  or?: Array<SearchableProductFilterInput | null> | null;
  not?: SearchableProductFilterInput | null;
};

export type SearchableIDFilterInput = {
  ne?: string | null;
  gt?: string | null;
  lt?: string | null;
  gte?: string | null;
  lte?: string | null;
  eq?: string | null;
  match?: string | null;
  matchPhrase?: string | null;
  matchPhrasePrefix?: string | null;
  multiMatch?: string | null;
  exists?: boolean | null;
  wildcard?: string | null;
  regexp?: string | null;
};

export type SearchableStringFilterInput = {
  ne?: string | null;
  gt?: string | null;
  lt?: string | null;
  gte?: string | null;
  lte?: string | null;
  eq?: string | null;
  match?: string | null;
  matchPhrase?: string | null;
  matchPhrasePrefix?: string | null;
  multiMatch?: string | null;
  exists?: boolean | null;
  wildcard?: string | null;
  regexp?: string | null;
};

export type SearchableBooleanFilterInput = {
  eq?: boolean | null;
  ne?: boolean | null;
};

export type SearchableIntFilterInput = {
  ne?: number | null;
  gt?: number | null;
  lt?: number | null;
  gte?: number | null;
  lte?: number | null;
  eq?: number | null;
  range?: Array<number | null> | null;
};

export type SearchableFloatFilterInput = {
  ne?: number | null;
  gt?: number | null;
  lt?: number | null;
  gte?: number | null;
  lte?: number | null;
  eq?: number | null;
  range?: Array<number | null> | null;
};

export type SearchableProductSortInput = {
  field?: SearchableProductSortableFields | null;
  direction?: SearchableSortDirection | null;
};

export enum SearchableProductSortableFields {
  id = "id",
  teamId = "teamId",
  name = "name",
  description = "description",
  favorite = "favorite",
  assigneeId = "assigneeId",
  score = "score",
  incoTerm = "incoTerm",
  harbour = "harbour",
  masterCbm = "masterCbm",
  quantityPer20ft = "quantityPer20ft",
  quantityPer40ft = "quantityPer40ft",
  quantityPer40ftHC = "quantityPer40ftHC",
  sample = "sample",
  archived = "archived",
  reference = "reference",
  referenceKey = "referenceKey",
  createdAt = "createdAt",
  createdByUserId = "createdByUserId",
  deletedByUSerId = "deletedByUSerId",
  deletedAt = "deletedAt",
  lastUpdatedByUserId = "lastUpdatedByUserId",
  lastUpdatedAt = "lastUpdatedAt",
  deleted = "deleted"
}

export enum SearchableSortDirection {
  asc = "asc",
  desc = "desc"
}

export type SearchableSupplierFilterInput = {
  id?: SearchableIDFilterInput | null;
  teamId?: SearchableIDFilterInput | null;
  name?: SearchableStringFilterInput | null;
  fullName?: SearchableStringFilterInput | null;
  tradingName?: SearchableStringFilterInput | null;
  description?: SearchableStringFilterInput | null;
  website?: SearchableStringFilterInput | null;
  phoneNumber?: SearchableStringFilterInput | null;
  country?: SearchableStringFilterInput | null;
  city?: SearchableStringFilterInput | null;
  address?: SearchableStringFilterInput | null;
  officeEmail?: SearchableStringFilterInput | null;
  officePhone?: SearchableStringFilterInput | null;
  incoTerm?: SearchableStringFilterInput | null;
  harbour?: SearchableStringFilterInput | null;
  generalMOQ?: SearchableIntFilterInput | null;
  generalLeadTime?: SearchableIntFilterInput | null;
  favorite?: SearchableBooleanFilterInput | null;
  globalDatabaseId?: SearchableIDFilterInput | null;
  archived?: SearchableBooleanFilterInput | null;
  reference?: SearchableStringFilterInput | null;
  referenceKey?: SearchableIntFilterInput | null;
  createdAt?: SearchableIntFilterInput | null;
  createdByUserId?: SearchableIDFilterInput | null;
  deletedByUSerId?: SearchableIDFilterInput | null;
  deletedAt?: SearchableIntFilterInput | null;
  lastUpdatedByUserId?: SearchableIDFilterInput | null;
  lastUpdatedAt?: SearchableIntFilterInput | null;
  deleted?: SearchableBooleanFilterInput | null;
  and?: Array<SearchableSupplierFilterInput | null> | null;
  or?: Array<SearchableSupplierFilterInput | null> | null;
  not?: SearchableSupplierFilterInput | null;
};

export type SearchableSupplierSortInput = {
  field?: SearchableSupplierSortableFields | null;
  direction?: SearchableSortDirection | null;
};

export enum SearchableSupplierSortableFields {
  id = "id",
  teamId = "teamId",
  name = "name",
  fullName = "fullName",
  tradingName = "tradingName",
  description = "description",
  website = "website",
  phoneNumber = "phoneNumber",
  country = "country",
  city = "city",
  address = "address",
  officeEmail = "officeEmail",
  officePhone = "officePhone",
  incoTerm = "incoTerm",
  harbour = "harbour",
  generalMOQ = "generalMOQ",
  generalLeadTime = "generalLeadTime",
  favorite = "favorite",
  globalDatabaseId = "globalDatabaseId",
  archived = "archived",
  reference = "reference",
  referenceKey = "referenceKey",
  createdAt = "createdAt",
  createdByUserId = "createdByUserId",
  deletedByUSerId = "deletedByUSerId",
  deletedAt = "deletedAt",
  lastUpdatedByUserId = "lastUpdatedByUserId",
  lastUpdatedAt = "lastUpdatedAt",
  deleted = "deleted"
}

export type SearchableProjectFilterInput = {
  id?: SearchableIDFilterInput | null;
  teamId?: SearchableIDFilterInput | null;
  name?: SearchableStringFilterInput | null;
  description?: SearchableStringFilterInput | null;
  createdAt?: SearchableIntFilterInput | null;
  createdByUserId?: SearchableIDFilterInput | null;
  deletedByUSerId?: SearchableIDFilterInput | null;
  deletedAt?: SearchableIntFilterInput | null;
  lastUpdatedByUserId?: SearchableIDFilterInput | null;
  lastUpdatedAt?: SearchableIntFilterInput | null;
  deleted?: SearchableBooleanFilterInput | null;
  and?: Array<SearchableProjectFilterInput | null> | null;
  or?: Array<SearchableProjectFilterInput | null> | null;
  not?: SearchableProjectFilterInput | null;
};

export type SearchableProjectSortInput = {
  field?: SearchableProjectSortableFields | null;
  direction?: SearchableSortDirection | null;
};

export enum SearchableProjectSortableFields {
  id = "id",
  teamId = "teamId",
  name = "name",
  description = "description",
  createdAt = "createdAt",
  createdByUserId = "createdByUserId",
  deletedByUSerId = "deletedByUSerId",
  deletedAt = "deletedAt",
  lastUpdatedByUserId = "lastUpdatedByUserId",
  lastUpdatedAt = "lastUpdatedAt",
  deleted = "deleted"
}

export type SearchableSampleFilterInput = {
  id?: SearchableIDFilterInput | null;
  teamId?: SearchableIDFilterInput | null;
  name?: SearchableStringFilterInput | null;
  description?: SearchableStringFilterInput | null;
  linkedProductId?: SearchableIDFilterInput | null;
  linkedSupplierId?: SearchableIDFilterInput | null;
  paid?: SearchableBooleanFilterInput | null;
  archived?: SearchableBooleanFilterInput | null;
  reference?: SearchableStringFilterInput | null;
  referenceKey?: SearchableIntFilterInput | null;
  createdAt?: SearchableIntFilterInput | null;
  createdByUserId?: SearchableIDFilterInput | null;
  deletedByUSerId?: SearchableIDFilterInput | null;
  deletedAt?: SearchableIntFilterInput | null;
  lastUpdatedByUserId?: SearchableIDFilterInput | null;
  lastUpdatedAt?: SearchableIntFilterInput | null;
  deleted?: SearchableBooleanFilterInput | null;
  and?: Array<SearchableSampleFilterInput | null> | null;
  or?: Array<SearchableSampleFilterInput | null> | null;
  not?: SearchableSampleFilterInput | null;
};

export type SearchableSampleSortInput = {
  field?: SearchableSampleSortableFields | null;
  direction?: SearchableSortDirection | null;
};

export enum SearchableSampleSortableFields {
  id = "id",
  teamId = "teamId",
  name = "name",
  description = "description",
  linkedProductId = "linkedProductId",
  linkedSupplierId = "linkedSupplierId",
  paid = "paid",
  archived = "archived",
  reference = "reference",
  referenceKey = "referenceKey",
  createdAt = "createdAt",
  createdByUserId = "createdByUserId",
  deletedByUSerId = "deletedByUSerId",
  deletedAt = "deletedAt",
  lastUpdatedByUserId = "lastUpdatedByUserId",
  lastUpdatedAt = "lastUpdatedAt",
  deleted = "deleted"
}

export type SearchableContactFilterInput = {
  id?: SearchableIDFilterInput | null;
  teamId?: SearchableIDFilterInput | null;
  name?: SearchableStringFilterInput | null;
  phoneNumber?: SearchableStringFilterInput | null;
  email?: SearchableStringFilterInput | null;
  jobTitle?: SearchableStringFilterInput | null;
  supplierId?: SearchableIDFilterInput | null;
  createdAt?: SearchableIntFilterInput | null;
  createdByUserId?: SearchableIDFilterInput | null;
  deletedByUserId?: SearchableIDFilterInput | null;
  deletedAt?: SearchableIntFilterInput | null;
  lastupdatedByUserId?: SearchableIDFilterInput | null;
  lastUpdatedAt?: SearchableIntFilterInput | null;
  deleted?: SearchableBooleanFilterInput | null;
  and?: Array<SearchableContactFilterInput | null> | null;
  or?: Array<SearchableContactFilterInput | null> | null;
  not?: SearchableContactFilterInput | null;
};

export type SearchableContactSortInput = {
  field?: SearchableContactSortableFields | null;
  direction?: SearchableSortDirection | null;
};

export enum SearchableContactSortableFields {
  id = "id",
  teamId = "teamId",
  name = "name",
  phoneNumber = "phoneNumber",
  email = "email",
  jobTitle = "jobTitle",
  supplierId = "supplierId",
  createdAt = "createdAt",
  createdByUserId = "createdByUserId",
  deletedByUserId = "deletedByUserId",
  deletedAt = "deletedAt",
  lastupdatedByUserId = "lastupdatedByUserId",
  lastUpdatedAt = "lastUpdatedAt",
  deleted = "deleted"
}

export type SearchableTaskFilterInput = {
  id?: SearchableIDFilterInput | null;
  teamId?: SearchableIDFilterInput | null;
  name?: SearchableStringFilterInput | null;
  description?: SearchableStringFilterInput | null;
  dueDate?: SearchableIntFilterInput | null;
  completed?: SearchableBooleanFilterInput | null;
  completionDate?: SearchableIntFilterInput | null;
  assigneeUserId?: SearchableIDFilterInput | null;
  reference?: SearchableStringFilterInput | null;
  referenceKey?: SearchableIntFilterInput | null;
  inProgress?: SearchableBooleanFilterInput | null;
  createdAt?: SearchableIntFilterInput | null;
  createdByUserId?: SearchableIDFilterInput | null;
  deletedByUSerId?: SearchableIDFilterInput | null;
  deletedAt?: SearchableIntFilterInput | null;
  lastUpdatedByUserId?: SearchableIDFilterInput | null;
  lastUpdatedAt?: SearchableIntFilterInput | null;
  deleted?: SearchableBooleanFilterInput | null;
  and?: Array<SearchableTaskFilterInput | null> | null;
  or?: Array<SearchableTaskFilterInput | null> | null;
  not?: SearchableTaskFilterInput | null;
};

export type SearchableTaskSortInput = {
  field?: SearchableTaskSortableFields | null;
  direction?: SearchableSortDirection | null;
};

export enum SearchableTaskSortableFields {
  id = "id",
  teamId = "teamId",
  name = "name",
  description = "description",
  dueDate = "dueDate",
  completed = "completed",
  completionDate = "completionDate",
  assigneeUserId = "assigneeUserId",
  reference = "reference",
  referenceKey = "referenceKey",
  inProgress = "inProgress",
  createdAt = "createdAt",
  createdByUserId = "createdByUserId",
  deletedByUSerId = "deletedByUSerId",
  deletedAt = "deletedAt",
  lastUpdatedByUserId = "lastUpdatedByUserId",
  lastUpdatedAt = "lastUpdatedAt",
  deleted = "deleted"
}

export type CreateTeamMutation = {
  __typename: "Team";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  companyId: string;
  company: {
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedOn: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type AcceptInvitationMutation = {
  __typename: "Team";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  companyId: string;
  company: {
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedOn: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateInvitationMutation = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateInvitationMutation = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteInvitationMutation = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateTeamUserMutation = {
  __typename: "TeamUser";
  teamId: string;
  userId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  user: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  role: TeamRole;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateTeamUserMutation = {
  __typename: "TeamUser";
  teamId: string;
  userId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  user: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  role: TeamRole;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteTeamUserMutation = {
  __typename: "TeamUser";
  teamId: string;
  userId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  user: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  role: TeamRole;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateCompanyMutation = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedOn: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateCompanyMutation = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedOn: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteCompanyMutation = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedOn: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateProductMutation = {
  __typename: "Product";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  favorite: boolean | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  tags: {
    __typename: "ModelTagConnection";
    items: Array<{
      __typename: "Tag";
      id: string;
      teamId: string;
      name: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  score: number | null;
  attachments: {
    __typename: "ModelAttachmentConnection";
    items: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  extendedFields: Array<{
    __typename: "FieldValue";
    name: string;
    value: string;
  } | null> | null;
  incoTerm: string | null;
  harbour: string | null;
  masterCbm: number | null;
  quantityPer20ft: number | null;
  quantityPer40ft: number | null;
  quantityPer40ftHC: number | null;
  itemDimension: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  innerCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  masterCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  priceMatrix: Array<{
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null> | null;
  leadTime: {
    __typename: "LeadTime";
    value: number | null;
    unit: LeadTimeUnit | null;
  } | null;
  sample: boolean | null;
  samplePrice: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateProductMutation = {
  __typename: "Product";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  favorite: boolean | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  tags: {
    __typename: "ModelTagConnection";
    items: Array<{
      __typename: "Tag";
      id: string;
      teamId: string;
      name: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  score: number | null;
  attachments: {
    __typename: "ModelAttachmentConnection";
    items: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  extendedFields: Array<{
    __typename: "FieldValue";
    name: string;
    value: string;
  } | null> | null;
  incoTerm: string | null;
  harbour: string | null;
  masterCbm: number | null;
  quantityPer20ft: number | null;
  quantityPer40ft: number | null;
  quantityPer40ftHC: number | null;
  itemDimension: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  innerCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  masterCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  priceMatrix: Array<{
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null> | null;
  leadTime: {
    __typename: "LeadTime";
    value: number | null;
    unit: LeadTimeUnit | null;
  } | null;
  sample: boolean | null;
  samplePrice: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteProductMutation = {
  __typename: "Product";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  favorite: boolean | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  tags: {
    __typename: "ModelTagConnection";
    items: Array<{
      __typename: "Tag";
      id: string;
      teamId: string;
      name: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  score: number | null;
  attachments: {
    __typename: "ModelAttachmentConnection";
    items: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  extendedFields: Array<{
    __typename: "FieldValue";
    name: string;
    value: string;
  } | null> | null;
  incoTerm: string | null;
  harbour: string | null;
  masterCbm: number | null;
  quantityPer20ft: number | null;
  quantityPer40ft: number | null;
  quantityPer40ftHC: number | null;
  itemDimension: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  innerCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  masterCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  priceMatrix: Array<{
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null> | null;
  leadTime: {
    __typename: "LeadTime";
    value: number | null;
    unit: LeadTimeUnit | null;
  } | null;
  sample: boolean | null;
  samplePrice: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateAttachmentMutation = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateAttachmentMutation = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteAttachmentMutation = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateSupplierMutation = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  fullName: string | null;
  tradingName: string | null;
  description: string | null;
  website: string | null;
  phoneNumber: string | null;
  country: string | null;
  city: string | null;
  address: string | null;
  officeEmail: string | null;
  officePhone: string | null;
  incoTerm: string | null;
  harbour: string | null;
  generalMOQ: number | null;
  generalLeadTime: number | null;
  favorite: boolean | null;
  globalDatabaseId: string | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateSupplierMutation = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  fullName: string | null;
  tradingName: string | null;
  description: string | null;
  website: string | null;
  phoneNumber: string | null;
  country: string | null;
  city: string | null;
  address: string | null;
  officeEmail: string | null;
  officePhone: string | null;
  incoTerm: string | null;
  harbour: string | null;
  generalMOQ: number | null;
  generalLeadTime: number | null;
  favorite: boolean | null;
  globalDatabaseId: string | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteSupplierMutation = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  fullName: string | null;
  tradingName: string | null;
  description: string | null;
  website: string | null;
  phoneNumber: string | null;
  country: string | null;
  city: string | null;
  address: string | null;
  officeEmail: string | null;
  officePhone: string | null;
  incoTerm: string | null;
  harbour: string | null;
  generalMOQ: number | null;
  generalLeadTime: number | null;
  favorite: boolean | null;
  globalDatabaseId: string | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateDescriptorMutation = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateDescriptorMutation = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteDescriptorMutation = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateProjectMutation = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateProjectMutation = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteProjectMutation = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateProjectProductMutation = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateProjectProductMutation = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteProjectProductMutation = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateSampleMutation = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateSampleMutation = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteSampleMutation = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateFieldDefinitionMutation = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateFieldDefinitionMutation = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteFieldDefinitionMutation = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateCategoryMutation = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateCategoryMutation = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteCategoryMutation = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateHelperListMutation = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateHelperListMutation = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteHelperListMutation = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateCommentMutation = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  message: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateCommentMutation = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  message: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteCommentMutation = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  message: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateContactMutation = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateContactMutation = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteContactMutation = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateExportMutation = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateExportMutation = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteExportMutation = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateImageMutation = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateImageMutation = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteImageMutation = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateEventMutation = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateEventMutation = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteEventMutation = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateEventDescriptionMutation = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateEventDescriptionMutation = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteEventDescriptionMutation = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateVenueMutation = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateVenueMutation = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteVenueMutation = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateIndustryMutation = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateIndustryMutation = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteIndustryMutation = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateTaskMutation = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateTaskMutation = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteTaskMutation = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateTagMutation = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateTagMutation = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteTagMutation = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateSampleStatusMutation = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateSampleStatusMutation = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteSampleStatusMutation = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateProductStatusMutation = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateProductStatusMutation = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteProductStatusMutation = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type CreateSupplierStatusMutation = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type UpdateSupplierStatusMutation = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type DeleteSupplierStatusMutation = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type GetStreamTokenQuery = {
  __typename: "GetStreamToken";
  token: string;
  feedName: string;
  feedId: string;
};

export type GetStreamNotificationTokenQuery = {
  __typename: "GetStreamToken";
  token: string;
  feedName: string;
  feedId: string;
};

export type SyncAProductQuery = {
  __typename: "Product";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  favorite: boolean | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  tags: {
    __typename: "ModelTagConnection";
    items: Array<{
      __typename: "Tag";
      id: string;
      teamId: string;
      name: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  score: number | null;
  attachments: {
    __typename: "ModelAttachmentConnection";
    items: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  extendedFields: Array<{
    __typename: "FieldValue";
    name: string;
    value: string;
  } | null> | null;
  incoTerm: string | null;
  harbour: string | null;
  masterCbm: number | null;
  quantityPer20ft: number | null;
  quantityPer40ft: number | null;
  quantityPer40ftHC: number | null;
  itemDimension: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  innerCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  masterCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  priceMatrix: Array<{
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null> | null;
  leadTime: {
    __typename: "LeadTime";
    value: number | null;
    unit: LeadTimeUnit | null;
  } | null;
  sample: boolean | null;
  samplePrice: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type SyncTeamsQuery = {
  __typename: "ModelTeamConnection";
  items: Array<{
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncInvitationsQuery = {
  __typename: "ModelInvitationConnection";
  items: Array<{
    __typename: "Invitation";
    id: string;
    teamId: string;
    email: string;
    firstName: string | null;
    lastName: string | null;
    status: InvitationStatus;
    secret: string | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetInvitationQuery = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListInvitationsQuery = {
  __typename: "ModelInvitationConnection";
  items: Array<{
    __typename: "Invitation";
    id: string;
    teamId: string;
    email: string;
    firstName: string | null;
    lastName: string | null;
    status: InvitationStatus;
    secret: string | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncTeamUsersQuery = {
  __typename: "ModelTeamUserConnection";
  items: Array<{
    __typename: "TeamUser";
    teamId: string;
    userId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    user: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    role: TeamRole;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncCompaniesQuery = {
  __typename: "ModelCompanyConnection";
  items: Array<{
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetCompanyQuery = {
  __typename: "Company";
  id: string;
  name: string;
  ownerUserId: string;
  owner: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdOn: number;
  lastUpdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedOn: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListCompanysQuery = {
  __typename: "ModelCompanyConnection";
  items: Array<{
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncUsersQuery = {
  __typename: "ModelUserConnection";
  items: Array<{
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetUserQuery = {
  __typename: "User";
  id: string;
  email: string;
  firstName: string;
  lastName: string;
  phoneNumber: string | null;
  preferredLanguage: Lang | null;
  avatar: string | null;
  creationDate: number | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListUsersQuery = {
  __typename: "ModelUserConnection";
  items: Array<{
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncProductsQuery = {
  __typename: "ModelProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetProductQuery = {
  __typename: "Product";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  images: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  category: {
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  favorite: boolean | null;
  assigneeId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  tags: {
    __typename: "ModelTagConnection";
    items: Array<{
      __typename: "Tag";
      id: string;
      teamId: string;
      name: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  score: number | null;
  attachments: {
    __typename: "ModelAttachmentConnection";
    items: Array<{
      __typename: "Attachment";
      id: string;
      teamId: string;
      fileName: string;
      url: string | null;
      size: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  extendedFields: Array<{
    __typename: "FieldValue";
    name: string;
    value: string;
  } | null> | null;
  incoTerm: string | null;
  harbour: string | null;
  masterCbm: number | null;
  quantityPer20ft: number | null;
  quantityPer40ft: number | null;
  quantityPer40ftHC: number | null;
  itemDimension: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  innerCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  masterCarton: {
    __typename: "Packaging";
    height: number | null;
    width: number | null;
    length: number | null;
    unit: string | null;
    itemsQuantity: number | null;
    weight: number | null;
    weightUnit: string | null;
    type: string | null;
  } | null;
  priceMatrix: Array<{
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null> | null;
  leadTime: {
    __typename: "LeadTime";
    value: number | null;
    unit: LeadTimeUnit | null;
  } | null;
  sample: boolean | null;
  samplePrice: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  } | null;
  projects: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListProductsQuery = {
  __typename: "ModelProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncAttachmentsQuery = {
  __typename: "ModelAttachmentConnection";
  items: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetAttachmentQuery = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListAttachmentsQuery = {
  __typename: "ModelAttachmentConnection";
  items: Array<{
    __typename: "Attachment";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    url: string | null;
    size: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncSuppliersQuery = {
  __typename: "ModelSupplierConnection";
  items: Array<{
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetSupplierQuery = {
  __typename: "Supplier";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  fullName: string | null;
  tradingName: string | null;
  description: string | null;
  website: string | null;
  phoneNumber: string | null;
  country: string | null;
  city: string | null;
  address: string | null;
  officeEmail: string | null;
  officePhone: string | null;
  incoTerm: string | null;
  harbour: string | null;
  generalMOQ: number | null;
  generalLeadTime: number | null;
  favorite: boolean | null;
  globalDatabaseId: string | null;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListSuppliersQuery = {
  __typename: "ModelSupplierConnection";
  items: Array<{
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncDescriptorsQuery = {
  __typename: "ModelDescriptorConnection";
  items: Array<{
    __typename: "Descriptor";
    id: string;
    teamId: string;
    sections: Array<{
      __typename: "DescriptorSection";
      name: string;
    } | null> | null;
    target: DescriptorType;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetDescriptorQuery = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListDescriptorsQuery = {
  __typename: "ModelDescriptorConnection";
  items: Array<{
    __typename: "Descriptor";
    id: string;
    teamId: string;
    sections: Array<{
      __typename: "DescriptorSection";
      name: string;
    } | null> | null;
    target: DescriptorType;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncProjectsQuery = {
  __typename: "ModelProjectConnection";
  items: Array<{
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetProjectQuery = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListProjectsQuery = {
  __typename: "ModelProjectConnection";
  items: Array<{
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncProjectProductsQuery = {
  __typename: "ModelProjectProductConnection";
  items: Array<{
    __typename: "ProjectProduct";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    projectId: string;
    productId: string;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    project: {
      __typename: "Project";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncSamplesQuery = {
  __typename: "ModelSampleConnection";
  items: Array<{
    __typename: "Sample";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    status: {
      __typename: "SampleStatus";
      id: string;
      teamId: string;
      name: string | null;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    description: string;
    linkedProductId: string;
    linkedProduct: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    linkedSupplierId: string;
    linkedSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    images: {
      __typename: "ModelImageConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    };
    paid: boolean;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetSampleQuery = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListSamplesQuery = {
  __typename: "ModelSampleConnection";
  items: Array<{
    __typename: "Sample";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    status: {
      __typename: "SampleStatus";
      id: string;
      teamId: string;
      name: string | null;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    description: string;
    linkedProductId: string;
    linkedProduct: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    linkedSupplierId: string;
    linkedSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    images: {
      __typename: "ModelImageConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    };
    paid: boolean;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncFieldDefinitionsQuery = {
  __typename: "ModelFieldDefinitionConnection";
  items: Array<{
    __typename: "FieldDefinition";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    label: string;
    type: FieldType;
    name: string;
    default: boolean | null;
    metaData: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetFieldDefinitionQuery = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListFieldDefinitionsQuery = {
  __typename: "ModelFieldDefinitionConnection";
  items: Array<{
    __typename: "FieldDefinition";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    label: string;
    type: FieldType;
    name: string;
    default: boolean | null;
    metaData: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncCategoriesQuery = {
  __typename: "ModelCategoryConnection";
  items: Array<{
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetCategoryQuery = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListCategorysQuery = {
  __typename: "ModelCategoryConnection";
  items: Array<{
    __typename: "Category";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncHelperListsQuery = {
  __typename: "ModelhelperListConnection";
  items: Array<{
    __typename: "helperList";
    id: string;
    helperType: HelperType | null;
    code: string;
    label: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetHelperListQuery = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListHelperListsQuery = {
  __typename: "ModelhelperListConnection";
  items: Array<{
    __typename: "helperList";
    id: string;
    helperType: HelperType | null;
    code: string;
    label: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncCommentsQuery = {
  __typename: "ModelCommentConnection";
  items: Array<{
    __typename: "Comment";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    message: string | null;
    nodeId: string;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncContactsQuery = {
  __typename: "ModelContactConnection";
  items: Array<{
    __typename: "Contact";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    phoneNumber: string | null;
    email: string | null;
    jobTitle: string | null;
    supplierId: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetContactQuery = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListContactsQuery = {
  __typename: "ModelContactConnection";
  items: Array<{
    __typename: "Contact";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    phoneNumber: string | null;
    email: string | null;
    jobTitle: string | null;
    supplierId: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncExportsQuery = {
  __typename: "ModelExportConnection";
  items: Array<{
    __typename: "Export";
    id: string;
    teamId: string;
    format: ExportFormat;
    target: ExportTarget | null;
    options: string | null;
    query: string | null;
    status: ExportStatus;
    documentUrl: string | null;
    errors: Array<string | null> | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetExportQuery = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListExportsQuery = {
  __typename: "ModelExportConnection";
  items: Array<{
    __typename: "Export";
    id: string;
    teamId: string;
    format: ExportFormat;
    target: ExportTarget | null;
    options: string | null;
    query: string | null;
    status: ExportStatus;
    documentUrl: string | null;
    errors: Array<string | null> | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncImagesQuery = {
  __typename: "ModelImageConnection";
  items: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetImageQuery = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListImagesQuery = {
  __typename: "ModelImageConnection";
  items: Array<{
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncEventsQuery = {
  __typename: "ModelEventConnection";
  items: Array<{
    __typename: "Event";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean | null;
    name: string | null;
    description: {
      __typename: "EventDescription";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      website: string | null;
      startDate: number | null;
      endDate: number | null;
      countryCode: string | null;
      global: boolean;
      supplierCount: number | null;
      primaryColor: string | null;
      secondaryColor: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetEventQuery = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListEventsQuery = {
  __typename: "ModelEventConnection";
  items: Array<{
    __typename: "Event";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean | null;
    name: string | null;
    description: {
      __typename: "EventDescription";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      website: string | null;
      startDate: number | null;
      endDate: number | null;
      countryCode: string | null;
      global: boolean;
      supplierCount: number | null;
      primaryColor: string | null;
      secondaryColor: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncEventDescriptionsQuery = {
  __typename: "ModelEventDescriptionConnection";
  items: Array<{
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetEventDescriptionQuery = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListEventDescriptionsQuery = {
  __typename: "ModelEventDescriptionConnection";
  items: Array<{
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncVenuesQuery = {
  __typename: "ModelVenueConnection";
  items: Array<{
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetVenueQuery = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListVenuesQuery = {
  __typename: "ModelVenueConnection";
  items: Array<{
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncIndustriesQuery = {
  __typename: "ModelIndustryConnection";
  items: Array<{
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetIndustryQuery = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListIndustrysQuery = {
  __typename: "ModelIndustryConnection";
  items: Array<{
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncTasksQuery = {
  __typename: "ModelTaskConnection";
  items: Array<{
    __typename: "Task";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    description: string | null;
    dueDate: number | null;
    completed: boolean | null;
    completionDate: number | null;
    assigneeUserId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    reference: string | null;
    referenceKey: number | null;
    inProgress: boolean | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetTaskQuery = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListTasksQuery = {
  __typename: "ModelTaskConnection";
  items: Array<{
    __typename: "Task";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    description: string | null;
    dueDate: number | null;
    completed: boolean | null;
    completionDate: number | null;
    assigneeUserId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    reference: string | null;
    referenceKey: number | null;
    inProgress: boolean | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncTagsQuery = {
  __typename: "ModelTagConnection";
  items: Array<{
    __typename: "Tag";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetTagQuery = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListTagsQuery = {
  __typename: "ModelTagConnection";
  items: Array<{
    __typename: "Tag";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncSampleStatusesQuery = {
  __typename: "ModelSampleStatusConnection";
  items: Array<{
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetSampleStatusQuery = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListSampleStatussQuery = {
  __typename: "ModelSampleStatusConnection";
  items: Array<{
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncProductStatusesQuery = {
  __typename: "ModelProductStatusConnection";
  items: Array<{
    __typename: "ProductStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetProductStatusQuery = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListProductStatussQuery = {
  __typename: "ModelProductStatusConnection";
  items: Array<{
    __typename: "ProductStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SyncSupplierStatusesQuery = {
  __typename: "ModelSupplierStatusConnection";
  items: Array<{
    __typename: "SupplierStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type GetSupplierStatusQuery = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type ListSupplierStatussQuery = {
  __typename: "ModelSupplierStatusConnection";
  items: Array<{
    __typename: "SupplierStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type ListInvitationByTeamQuery = {
  __typename: "ModelInvitationConnection";
  items: Array<{
    __typename: "Invitation";
    id: string;
    teamId: string;
    email: string;
    firstName: string | null;
    lastName: string | null;
    status: InvitationStatus;
    secret: string | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type ListTeamUserByUserQuery = {
  __typename: "ModelTeamUserConnection";
  items: Array<{
    __typename: "TeamUser";
    teamId: string;
    userId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    user: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    role: TeamRole;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type ListCompanyByOwnerQuery = {
  __typename: "ModelCompanyConnection";
  items: Array<{
    __typename: "Company";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type ListProductByTeamQuery = {
  __typename: "ModelProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SampleStatusByTeamQuery = {
  __typename: "ModelSampleStatusConnection";
  items: Array<{
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type ProductStatusByTeamQuery = {
  __typename: "ModelProductStatusConnection";
  items: Array<{
    __typename: "ProductStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SupplierStatusByTeamQuery = {
  __typename: "ModelSupplierStatusConnection";
  items: Array<{
    __typename: "SupplierStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  startedAt: number | null;
};

export type SearchProductsQuery = {
  __typename: "SearchableProductConnection";
  items: Array<{
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  total: number | null;
};

export type SearchSuppliersQuery = {
  __typename: "SearchableSupplierConnection";
  items: Array<{
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  total: number | null;
};

export type SearchProjectsQuery = {
  __typename: "SearchableProjectConnection";
  items: Array<{
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  total: number | null;
};

export type SearchSamplesQuery = {
  __typename: "SearchableSampleConnection";
  items: Array<{
    __typename: "Sample";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    status: {
      __typename: "SampleStatus";
      id: string;
      teamId: string;
      name: string | null;
      inWorkflow: boolean;
      category: string;
      step: number;
      final: boolean;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    description: string;
    linkedProductId: string;
    linkedProduct: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    linkedSupplierId: string;
    linkedSupplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    images: {
      __typename: "ModelImageConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    };
    paid: boolean;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  total: number | null;
};

export type SearchContactsQuery = {
  __typename: "SearchableContactConnection";
  items: Array<{
    __typename: "Contact";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    phoneNumber: string | null;
    email: string | null;
    jobTitle: string | null;
    supplierId: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  total: number | null;
};

export type SearchTasksQuery = {
  __typename: "SearchableTaskConnection";
  items: Array<{
    __typename: "Task";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    description: string | null;
    dueDate: number | null;
    completed: boolean | null;
    completionDate: number | null;
    assigneeUserId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    product: {
      __typename: "Product";
      id: string;
      teamId: string;
      name: string;
      description: string | null;
      favorite: boolean | null;
      assigneeId: string;
      score: number | null;
      incoTerm: string | null;
      harbour: string | null;
      masterCbm: number | null;
      quantityPer20ft: number | null;
      quantityPer40ft: number | null;
      quantityPer40ftHC: number | null;
      sample: boolean | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    reference: string | null;
    referenceKey: number | null;
    inProgress: boolean | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null> | null;
  nextToken: string | null;
  total: number | null;
};

export type OnCreateInvitationSubscription = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateInvitationSubscription = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteInvitationSubscription = {
  __typename: "Invitation";
  id: string;
  teamId: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  status: InvitationStatus;
  secret: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateAttachmentSubscription = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateAttachmentSubscription = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteAttachmentSubscription = {
  __typename: "Attachment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  url: string | null;
  size: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateDescriptorSubscription = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateDescriptorSubscription = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteDescriptorSubscription = {
  __typename: "Descriptor";
  id: string;
  teamId: string;
  sections: Array<{
    __typename: "DescriptorSection";
    name: string;
    fields: Array<{
      __typename: "DescriptorField";
      fieldId: string;
      defaultValue: string | null;
      fixedValue: boolean | null;
      required: boolean | null;
      metadata: string | null;
    } | null> | null;
  } | null> | null;
  target: DescriptorType;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateProjectSubscription = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateProjectSubscription = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteProjectSubscription = {
  __typename: "Project";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  description: string | null;
  products: {
    __typename: "ModelProjectProductConnection";
    items: Array<{
      __typename: "ProjectProduct";
      id: string;
      teamId: string;
      projectId: string;
      productId: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateProjectProductSubscription = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateProjectProductSubscription = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteProjectProductSubscription = {
  __typename: "ProjectProduct";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  projectId: string;
  productId: string;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  project: {
    __typename: "Project";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    products: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateSampleSubscription = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateSampleSubscription = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteSampleSubscription = {
  __typename: "Sample";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  status: {
    __typename: "SampleStatus";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string | null;
    inWorkflow: boolean;
    category: string;
    step: number;
    final: boolean;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  description: string;
  linkedProductId: string;
  linkedProduct: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  linkedSupplierId: string;
  linkedSupplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  images: {
    __typename: "ModelImageConnection";
    items: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    nextToken: string | null;
    startedAt: number | null;
  } | null;
  price: {
    __typename: "Price";
    currency: string | null;
    value: number | null;
    baseCurrencyValue: number | null;
    label: string | null;
    moq: number | null;
  };
  paid: boolean;
  archived: boolean | null;
  reference: string | null;
  referenceKey: number | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateFieldDefinitionSubscription = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateFieldDefinitionSubscription = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteFieldDefinitionSubscription = {
  __typename: "FieldDefinition";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  label: string;
  type: FieldType;
  name: string;
  default: boolean | null;
  metaData: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateCategorySubscription = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateCategorySubscription = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteCategorySubscription = {
  __typename: "Category";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateHelperListSubscription = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateHelperListSubscription = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteHelperListSubscription = {
  __typename: "helperList";
  id: string;
  helperType: HelperType | null;
  code: string;
  label: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateCommentSubscription = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  message: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateCommentSubscription = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  message: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteCommentSubscription = {
  __typename: "Comment";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  message: string | null;
  nodeId: string;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateContactSubscription = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateContactSubscription = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteContactSubscription = {
  __typename: "Contact";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  phoneNumber: string | null;
  email: string | null;
  jobTitle: string | null;
  supplierId: string;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateExportSubscription = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateExportSubscription = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteExportSubscription = {
  __typename: "Export";
  id: string;
  teamId: string;
  format: ExportFormat;
  target: ExportTarget | null;
  options: string | null;
  query: string | null;
  status: ExportStatus;
  documentUrl: string | null;
  errors: Array<string | null> | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateImageSubscription = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateImageSubscription = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteImageSubscription = {
  __typename: "Image";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  fileName: string;
  orientation: number;
  imageType: ImageType;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateEventSubscription = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateEventSubscription = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteEventSubscription = {
  __typename: "Event";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean | null;
  name: string | null;
  description: {
    __typename: "EventDescription";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    description: string | null;
    website: string | null;
    startDate: number | null;
    endDate: number | null;
    countryCode: string | null;
    venue: {
      __typename: "Venue";
      id: string;
      teamId: string;
      city: string | null;
      name: string;
      latitude: number | null;
      country: string | null;
      longitude: number | null;
      addressFull: string | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    logoImage: {
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    global: boolean;
    supplierCount: number | null;
    industry: {
      __typename: "Industry";
      id: string;
      name: string;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    primaryColor: string | null;
    secondaryColor: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  };
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateEventDescriptionSubscription = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateEventDescriptionSubscription = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteEventDescriptionSubscription = {
  __typename: "EventDescription";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string;
  description: string | null;
  website: string | null;
  startDate: number | null;
  endDate: number | null;
  countryCode: string | null;
  venue: {
    __typename: "Venue";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    city: string | null;
    name: string;
    latitude: number | null;
    country: string | null;
    longitude: number | null;
    addressFull: string | null;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  logoImage: {
    __typename: "Image";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    fileName: string;
    orientation: number;
    imageType: ImageType;
    createdAt: number;
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedByUserId: string;
    deletedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    deletedAt: number | null;
    lastupdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  global: boolean;
  supplierCount: number | null;
  industry: {
    __typename: "Industry";
    id: string;
    name: string;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  primaryColor: string | null;
  secondaryColor: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateVenueSubscription = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateVenueSubscription = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteVenueSubscription = {
  __typename: "Venue";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  city: string | null;
  name: string;
  latitude: number | null;
  country: string | null;
  longitude: number | null;
  addressFull: string | null;
  createdAt: number;
  createdByUserId: string;
  createdBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedByUserId: string;
  deletedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  deletedAt: number | null;
  lastupdatedByUserId: string;
  lastUpdatedBy: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateIndustrySubscription = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateIndustrySubscription = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteIndustrySubscription = {
  __typename: "Industry";
  id: string;
  name: string;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateTaskSubscription = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateTaskSubscription = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteTaskSubscription = {
  __typename: "Task";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  description: string | null;
  dueDate: number | null;
  completed: boolean | null;
  completionDate: number | null;
  assigneeUserId: string;
  assignee: {
    __typename: "User";
    id: string;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string | null;
    preferredLanguage: Lang | null;
    avatar: string | null;
    creationDate: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  product: {
    __typename: "Product";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    supplier: {
      __typename: "Supplier";
      id: string;
      teamId: string;
      name: string;
      fullName: string | null;
      tradingName: string | null;
      description: string | null;
      website: string | null;
      phoneNumber: string | null;
      country: string | null;
      city: string | null;
      address: string | null;
      officeEmail: string | null;
      officePhone: string | null;
      incoTerm: string | null;
      harbour: string | null;
      generalMOQ: number | null;
      generalLeadTime: number | null;
      favorite: boolean | null;
      globalDatabaseId: string | null;
      archived: boolean | null;
      reference: string | null;
      referenceKey: number | null;
      createdAt: number;
      createdByUserId: string;
      deletedByUSerId: string | null;
      deletedAt: number | null;
      lastUpdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    images: Array<{
      __typename: "Image";
      id: string;
      teamId: string;
      fileName: string;
      orientation: number;
      imageType: ImageType;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null> | null;
    price: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    category: {
      __typename: "Category";
      id: string;
      teamId: string;
      name: string;
      createdAt: number;
      createdByUserId: string;
      deletedByUserId: string;
      deletedAt: number | null;
      lastupdatedByUserId: string;
      lastUpdatedAt: number;
      deleted: boolean;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    description: string | null;
    favorite: boolean | null;
    assigneeId: string;
    assignee: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    tags: {
      __typename: "ModelTagConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    score: number | null;
    attachments: {
      __typename: "ModelAttachmentConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    extendedFields: Array<{
      __typename: "FieldValue";
      name: string;
      value: string;
    } | null> | null;
    incoTerm: string | null;
    harbour: string | null;
    masterCbm: number | null;
    quantityPer20ft: number | null;
    quantityPer40ft: number | null;
    quantityPer40ftHC: number | null;
    itemDimension: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    innerCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    masterCarton: {
      __typename: "Packaging";
      height: number | null;
      width: number | null;
      length: number | null;
      unit: string | null;
      itemsQuantity: number | null;
      weight: number | null;
      weightUnit: string | null;
      type: string | null;
    } | null;
    priceMatrix: Array<{
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null> | null;
    leadTime: {
      __typename: "LeadTime";
      value: number | null;
      unit: LeadTimeUnit | null;
    } | null;
    sample: boolean | null;
    samplePrice: {
      __typename: "Price";
      currency: string | null;
      value: number | null;
      baseCurrencyValue: number | null;
      label: string | null;
      moq: number | null;
    } | null;
    projects: {
      __typename: "ModelProjectProductConnection";
      nextToken: string | null;
      startedAt: number | null;
    } | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  supplier: {
    __typename: "Supplier";
    id: string;
    teamId: string;
    team: {
      __typename: "Team";
      id: string;
      name: string;
      ownerUserId: string;
      companyId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    name: string;
    fullName: string | null;
    tradingName: string | null;
    description: string | null;
    website: string | null;
    phoneNumber: string | null;
    country: string | null;
    city: string | null;
    address: string | null;
    officeEmail: string | null;
    officePhone: string | null;
    incoTerm: string | null;
    harbour: string | null;
    generalMOQ: number | null;
    generalLeadTime: number | null;
    favorite: boolean | null;
    globalDatabaseId: string | null;
    archived: boolean | null;
    reference: string | null;
    referenceKey: number | null;
    createdAt: number;
    createdByUserId: string;
    deletedByUSerId: string | null;
    deletedAt: number | null;
    lastUpdatedByUserId: string;
    lastUpdatedAt: number;
    deleted: boolean;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  reference: string | null;
  referenceKey: number | null;
  inProgress: boolean | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateTagSubscription = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateTagSubscription = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteTagSubscription = {
  __typename: "Tag";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateSampleStatusSubscription = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateSampleStatusSubscription = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteSampleStatusSubscription = {
  __typename: "SampleStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateProductStatusSubscription = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateProductStatusSubscription = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteProductStatusSubscription = {
  __typename: "ProductStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnCreateSupplierStatusSubscription = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnUpdateSupplierStatusSubscription = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

export type OnDeleteSupplierStatusSubscription = {
  __typename: "SupplierStatus";
  id: string;
  teamId: string;
  team: {
    __typename: "Team";
    id: string;
    name: string;
    ownerUserId: string;
    owner: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    companyId: string;
    company: {
      __typename: "Company";
      id: string;
      name: string;
      ownerUserId: string;
      createdByUserId: string;
      createdOn: number;
      lastUpdatedByUserId: string;
      lastUpdatedOn: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdByUserId: string;
    createdBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    };
    createdOn: number;
    lastUpdatedByUserId: string;
    lastUpdatedBy: {
      __typename: "User";
      id: string;
      email: string;
      firstName: string;
      lastName: string;
      phoneNumber: string | null;
      preferredLanguage: Lang | null;
      avatar: string | null;
      creationDate: number | null;
      _version: number;
      _deleted: boolean | null;
      _lastChangedAt: number;
    } | null;
    lastUpdatedOn: number | null;
    _version: number;
    _deleted: boolean | null;
    _lastChangedAt: number;
  } | null;
  name: string | null;
  inWorkflow: boolean;
  category: string;
  step: number;
  final: boolean;
  createdAt: number;
  createdByUserId: string;
  deletedByUSerId: string | null;
  deletedAt: number | null;
  lastUpdatedByUserId: string;
  lastUpdatedAt: number;
  deleted: boolean;
  _version: number;
  _deleted: boolean | null;
  _lastChangedAt: number;
};

@Injectable({
  providedIn: "root"
})
export class APIService {
  async CreateTeam(input?: CreateTeamInput): Promise<CreateTeamMutation> {
    const statement = `mutation CreateTeam($input: CreateTeamInput) {
        createTeam(input: $input) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          companyId
          company {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedOn
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (input) {
      gqlAPIServiceArguments.input = input;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTeamMutation>response.data.createTeam;
  }
  async AcceptInvitation(
    id: string,
    secret: string
  ): Promise<AcceptInvitationMutation> {
    const statement = `mutation AcceptInvitation($id: ID!, $secret: String!) {
        acceptInvitation(id: $id, secret: $secret) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          companyId
          company {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedOn
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id,
      secret
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <AcceptInvitationMutation>response.data.acceptInvitation;
  }
  async CreateInvitation(
    input: CreateInvitationInput,
    condition?: ModelInvitationConditionInput
  ): Promise<CreateInvitationMutation> {
    const statement = `mutation CreateInvitation($input: CreateInvitationInput!, $condition: ModelInvitationConditionInput) {
        createInvitation(input: $input, condition: $condition) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateInvitationMutation>response.data.createInvitation;
  }
  async UpdateInvitation(
    input: UpdateInvitationInput,
    condition?: ModelInvitationConditionInput
  ): Promise<UpdateInvitationMutation> {
    const statement = `mutation UpdateInvitation($input: UpdateInvitationInput!, $condition: ModelInvitationConditionInput) {
        updateInvitation(input: $input, condition: $condition) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateInvitationMutation>response.data.updateInvitation;
  }
  async DeleteInvitation(
    input: DeleteInvitationInput,
    condition?: ModelInvitationConditionInput
  ): Promise<DeleteInvitationMutation> {
    const statement = `mutation DeleteInvitation($input: DeleteInvitationInput!, $condition: ModelInvitationConditionInput) {
        deleteInvitation(input: $input, condition: $condition) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteInvitationMutation>response.data.deleteInvitation;
  }
  async CreateTeamUser(
    input: CreateTeamUserInput,
    condition?: ModelTeamUserConditionInput
  ): Promise<CreateTeamUserMutation> {
    const statement = `mutation CreateTeamUser($input: CreateTeamUserInput!, $condition: ModelTeamUserConditionInput) {
        createTeamUser(input: $input, condition: $condition) {
          __typename
          teamId
          userId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          user {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          role
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTeamUserMutation>response.data.createTeamUser;
  }
  async UpdateTeamUser(
    input: UpdateTeamUserInput,
    condition?: ModelTeamUserConditionInput
  ): Promise<UpdateTeamUserMutation> {
    const statement = `mutation UpdateTeamUser($input: UpdateTeamUserInput!, $condition: ModelTeamUserConditionInput) {
        updateTeamUser(input: $input, condition: $condition) {
          __typename
          teamId
          userId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          user {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          role
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateTeamUserMutation>response.data.updateTeamUser;
  }
  async DeleteTeamUser(
    input: DeleteTeamUserInput,
    condition?: ModelTeamUserConditionInput
  ): Promise<DeleteTeamUserMutation> {
    const statement = `mutation DeleteTeamUser($input: DeleteTeamUserInput!, $condition: ModelTeamUserConditionInput) {
        deleteTeamUser(input: $input, condition: $condition) {
          __typename
          teamId
          userId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          user {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          role
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteTeamUserMutation>response.data.deleteTeamUser;
  }
  async CreateCompany(
    input: CreateCompanyInput,
    condition?: ModelCompanyConditionInput
  ): Promise<CreateCompanyMutation> {
    const statement = `mutation CreateCompany($input: CreateCompanyInput!, $condition: ModelCompanyConditionInput) {
        createCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedOn
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateCompanyMutation>response.data.createCompany;
  }
  async UpdateCompany(
    input: UpdateCompanyInput,
    condition?: ModelCompanyConditionInput
  ): Promise<UpdateCompanyMutation> {
    const statement = `mutation UpdateCompany($input: UpdateCompanyInput!, $condition: ModelCompanyConditionInput) {
        updateCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedOn
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateCompanyMutation>response.data.updateCompany;
  }
  async DeleteCompany(
    input: DeleteCompanyInput,
    condition?: ModelCompanyConditionInput
  ): Promise<DeleteCompanyMutation> {
    const statement = `mutation DeleteCompany($input: DeleteCompanyInput!, $condition: ModelCompanyConditionInput) {
        deleteCompany(input: $input, condition: $condition) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedOn
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteCompanyMutation>response.data.deleteCompany;
  }
  async CreateProduct(
    input: CreateProductInput,
    condition?: ModelProductConditionInput
  ): Promise<CreateProductMutation> {
    const statement = `mutation CreateProduct($input: CreateProductInput!, $condition: ModelProductConditionInput) {
        createProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          category {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          favorite
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          tags {
            __typename
            items {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          score
          attachments {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          extendedFields {
            __typename
            name
            value
          }
          incoTerm
          harbour
          masterCbm
          quantityPer20ft
          quantityPer40ft
          quantityPer40ftHC
          itemDimension {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          innerCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          masterCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          priceMatrix {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          leadTime {
            __typename
            value
            unit
          }
          sample
          samplePrice {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProductMutation>response.data.createProduct;
  }
  async UpdateProduct(
    input: UpdateProductInput,
    condition?: ModelProductConditionInput
  ): Promise<UpdateProductMutation> {
    const statement = `mutation UpdateProduct($input: UpdateProductInput!, $condition: ModelProductConditionInput) {
        updateProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          category {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          favorite
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          tags {
            __typename
            items {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          score
          attachments {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          extendedFields {
            __typename
            name
            value
          }
          incoTerm
          harbour
          masterCbm
          quantityPer20ft
          quantityPer40ft
          quantityPer40ftHC
          itemDimension {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          innerCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          masterCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          priceMatrix {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          leadTime {
            __typename
            value
            unit
          }
          sample
          samplePrice {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProductMutation>response.data.updateProduct;
  }
  async DeleteProduct(
    input: DeleteProductInput,
    condition?: ModelProductConditionInput
  ): Promise<DeleteProductMutation> {
    const statement = `mutation DeleteProduct($input: DeleteProductInput!, $condition: ModelProductConditionInput) {
        deleteProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          category {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          favorite
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          tags {
            __typename
            items {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          score
          attachments {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          extendedFields {
            __typename
            name
            value
          }
          incoTerm
          harbour
          masterCbm
          quantityPer20ft
          quantityPer40ft
          quantityPer40ftHC
          itemDimension {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          innerCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          masterCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          priceMatrix {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          leadTime {
            __typename
            value
            unit
          }
          sample
          samplePrice {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProductMutation>response.data.deleteProduct;
  }
  async CreateAttachment(
    input: CreateAttachmentInput,
    condition?: ModelAttachmentConditionInput
  ): Promise<CreateAttachmentMutation> {
    const statement = `mutation CreateAttachment($input: CreateAttachmentInput!, $condition: ModelAttachmentConditionInput) {
        createAttachment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateAttachmentMutation>response.data.createAttachment;
  }
  async UpdateAttachment(
    input: UpdateAttachmentInput,
    condition?: ModelAttachmentConditionInput
  ): Promise<UpdateAttachmentMutation> {
    const statement = `mutation UpdateAttachment($input: UpdateAttachmentInput!, $condition: ModelAttachmentConditionInput) {
        updateAttachment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateAttachmentMutation>response.data.updateAttachment;
  }
  async DeleteAttachment(
    input: DeleteAttachmentInput,
    condition?: ModelAttachmentConditionInput
  ): Promise<DeleteAttachmentMutation> {
    const statement = `mutation DeleteAttachment($input: DeleteAttachmentInput!, $condition: ModelAttachmentConditionInput) {
        deleteAttachment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteAttachmentMutation>response.data.deleteAttachment;
  }
  async CreateSupplier(
    input: CreateSupplierInput,
    condition?: ModelSupplierConditionInput
  ): Promise<CreateSupplierMutation> {
    const statement = `mutation CreateSupplier($input: CreateSupplierInput!, $condition: ModelSupplierConditionInput) {
        createSupplier(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          fullName
          tradingName
          description
          website
          phoneNumber
          country
          city
          address
          officeEmail
          officePhone
          incoTerm
          harbour
          generalMOQ
          generalLeadTime
          favorite
          globalDatabaseId
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSupplierMutation>response.data.createSupplier;
  }
  async UpdateSupplier(
    input: UpdateSupplierInput,
    condition?: ModelSupplierConditionInput
  ): Promise<UpdateSupplierMutation> {
    const statement = `mutation UpdateSupplier($input: UpdateSupplierInput!, $condition: ModelSupplierConditionInput) {
        updateSupplier(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          fullName
          tradingName
          description
          website
          phoneNumber
          country
          city
          address
          officeEmail
          officePhone
          incoTerm
          harbour
          generalMOQ
          generalLeadTime
          favorite
          globalDatabaseId
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSupplierMutation>response.data.updateSupplier;
  }
  async DeleteSupplier(
    input: DeleteSupplierInput,
    condition?: ModelSupplierConditionInput
  ): Promise<DeleteSupplierMutation> {
    const statement = `mutation DeleteSupplier($input: DeleteSupplierInput!, $condition: ModelSupplierConditionInput) {
        deleteSupplier(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          fullName
          tradingName
          description
          website
          phoneNumber
          country
          city
          address
          officeEmail
          officePhone
          incoTerm
          harbour
          generalMOQ
          generalLeadTime
          favorite
          globalDatabaseId
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSupplierMutation>response.data.deleteSupplier;
  }
  async CreateDescriptor(
    input: CreateDescriptorInput,
    condition?: ModelDescriptorConditionInput
  ): Promise<CreateDescriptorMutation> {
    const statement = `mutation CreateDescriptor($input: CreateDescriptorInput!, $condition: ModelDescriptorConditionInput) {
        createDescriptor(input: $input, condition: $condition) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateDescriptorMutation>response.data.createDescriptor;
  }
  async UpdateDescriptor(
    input: UpdateDescriptorInput,
    condition?: ModelDescriptorConditionInput
  ): Promise<UpdateDescriptorMutation> {
    const statement = `mutation UpdateDescriptor($input: UpdateDescriptorInput!, $condition: ModelDescriptorConditionInput) {
        updateDescriptor(input: $input, condition: $condition) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateDescriptorMutation>response.data.updateDescriptor;
  }
  async DeleteDescriptor(
    input: DeleteDescriptorInput,
    condition?: ModelDescriptorConditionInput
  ): Promise<DeleteDescriptorMutation> {
    const statement = `mutation DeleteDescriptor($input: DeleteDescriptorInput!, $condition: ModelDescriptorConditionInput) {
        deleteDescriptor(input: $input, condition: $condition) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteDescriptorMutation>response.data.deleteDescriptor;
  }
  async CreateProject(
    input: CreateProjectInput,
    condition?: ModelProjectConditionInput
  ): Promise<CreateProjectMutation> {
    const statement = `mutation CreateProject($input: CreateProjectInput!, $condition: ModelProjectConditionInput) {
        createProject(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProjectMutation>response.data.createProject;
  }
  async UpdateProject(
    input: UpdateProjectInput,
    condition?: ModelProjectConditionInput
  ): Promise<UpdateProjectMutation> {
    const statement = `mutation UpdateProject($input: UpdateProjectInput!, $condition: ModelProjectConditionInput) {
        updateProject(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProjectMutation>response.data.updateProject;
  }
  async DeleteProject(
    input: DeleteProjectInput,
    condition?: ModelProjectConditionInput
  ): Promise<DeleteProjectMutation> {
    const statement = `mutation DeleteProject($input: DeleteProjectInput!, $condition: ModelProjectConditionInput) {
        deleteProject(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProjectMutation>response.data.deleteProject;
  }
  async CreateProjectProduct(
    input: CreateProjectProductInput,
    condition?: ModelProjectProductConditionInput
  ): Promise<CreateProjectProductMutation> {
    const statement = `mutation CreateProjectProduct($input: CreateProjectProductInput!, $condition: ModelProjectProductConditionInput) {
        createProjectProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          projectId
          productId
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          project {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProjectProductMutation>response.data.createProjectProduct;
  }
  async UpdateProjectProduct(
    input: UpdateProjectProductInput,
    condition?: ModelProjectProductConditionInput
  ): Promise<UpdateProjectProductMutation> {
    const statement = `mutation UpdateProjectProduct($input: UpdateProjectProductInput!, $condition: ModelProjectProductConditionInput) {
        updateProjectProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          projectId
          productId
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          project {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProjectProductMutation>response.data.updateProjectProduct;
  }
  async DeleteProjectProduct(
    input: DeleteProjectProductInput,
    condition?: ModelProjectProductConditionInput
  ): Promise<DeleteProjectProductMutation> {
    const statement = `mutation DeleteProjectProduct($input: DeleteProjectProductInput!, $condition: ModelProjectProductConditionInput) {
        deleteProjectProduct(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          projectId
          productId
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          project {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProjectProductMutation>response.data.deleteProjectProduct;
  }
  async CreateSample(
    input: CreateSampleInput,
    condition?: ModelSampleConditionInput
  ): Promise<CreateSampleMutation> {
    const statement = `mutation CreateSample($input: CreateSampleInput!, $condition: ModelSampleConditionInput) {
        createSample(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSampleMutation>response.data.createSample;
  }
  async UpdateSample(
    input: UpdateSampleInput,
    condition?: ModelSampleConditionInput
  ): Promise<UpdateSampleMutation> {
    const statement = `mutation UpdateSample($input: UpdateSampleInput!, $condition: ModelSampleConditionInput) {
        updateSample(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSampleMutation>response.data.updateSample;
  }
  async DeleteSample(
    input: DeleteSampleInput,
    condition?: ModelSampleConditionInput
  ): Promise<DeleteSampleMutation> {
    const statement = `mutation DeleteSample($input: DeleteSampleInput!, $condition: ModelSampleConditionInput) {
        deleteSample(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSampleMutation>response.data.deleteSample;
  }
  async CreateFieldDefinition(
    input: CreateFieldDefinitionInput,
    condition?: ModelFieldDefinitionConditionInput
  ): Promise<CreateFieldDefinitionMutation> {
    const statement = `mutation CreateFieldDefinition($input: CreateFieldDefinitionInput!, $condition: ModelFieldDefinitionConditionInput) {
        createFieldDefinition(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateFieldDefinitionMutation>response.data.createFieldDefinition;
  }
  async UpdateFieldDefinition(
    input: UpdateFieldDefinitionInput,
    condition?: ModelFieldDefinitionConditionInput
  ): Promise<UpdateFieldDefinitionMutation> {
    const statement = `mutation UpdateFieldDefinition($input: UpdateFieldDefinitionInput!, $condition: ModelFieldDefinitionConditionInput) {
        updateFieldDefinition(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateFieldDefinitionMutation>response.data.updateFieldDefinition;
  }
  async DeleteFieldDefinition(
    input: DeleteFieldDefinitionInput,
    condition?: ModelFieldDefinitionConditionInput
  ): Promise<DeleteFieldDefinitionMutation> {
    const statement = `mutation DeleteFieldDefinition($input: DeleteFieldDefinitionInput!, $condition: ModelFieldDefinitionConditionInput) {
        deleteFieldDefinition(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteFieldDefinitionMutation>response.data.deleteFieldDefinition;
  }
  async CreateCategory(
    input: CreateCategoryInput,
    condition?: ModelCategoryConditionInput
  ): Promise<CreateCategoryMutation> {
    const statement = `mutation CreateCategory($input: CreateCategoryInput!, $condition: ModelCategoryConditionInput) {
        createCategory(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateCategoryMutation>response.data.createCategory;
  }
  async UpdateCategory(
    input: UpdateCategoryInput,
    condition?: ModelCategoryConditionInput
  ): Promise<UpdateCategoryMutation> {
    const statement = `mutation UpdateCategory($input: UpdateCategoryInput!, $condition: ModelCategoryConditionInput) {
        updateCategory(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateCategoryMutation>response.data.updateCategory;
  }
  async DeleteCategory(
    input: DeleteCategoryInput,
    condition?: ModelCategoryConditionInput
  ): Promise<DeleteCategoryMutation> {
    const statement = `mutation DeleteCategory($input: DeleteCategoryInput!, $condition: ModelCategoryConditionInput) {
        deleteCategory(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteCategoryMutation>response.data.deleteCategory;
  }
  async CreateHelperList(
    input: CreateHelperListInput,
    condition?: ModelhelperListConditionInput
  ): Promise<CreateHelperListMutation> {
    const statement = `mutation CreateHelperList($input: CreateHelperListInput!, $condition: ModelhelperListConditionInput) {
        createHelperList(input: $input, condition: $condition) {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateHelperListMutation>response.data.createHelperList;
  }
  async UpdateHelperList(
    input: UpdateHelperListInput,
    condition?: ModelhelperListConditionInput
  ): Promise<UpdateHelperListMutation> {
    const statement = `mutation UpdateHelperList($input: UpdateHelperListInput!, $condition: ModelhelperListConditionInput) {
        updateHelperList(input: $input, condition: $condition) {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateHelperListMutation>response.data.updateHelperList;
  }
  async DeleteHelperList(
    input: DeleteHelperListInput,
    condition?: ModelhelperListConditionInput
  ): Promise<DeleteHelperListMutation> {
    const statement = `mutation DeleteHelperList($input: DeleteHelperListInput!, $condition: ModelhelperListConditionInput) {
        deleteHelperList(input: $input, condition: $condition) {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteHelperListMutation>response.data.deleteHelperList;
  }
  async CreateComment(
    input: CreateCommentInput,
    condition?: ModelCommentConditionInput
  ): Promise<CreateCommentMutation> {
    const statement = `mutation CreateComment($input: CreateCommentInput!, $condition: ModelCommentConditionInput) {
        createComment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          message
          nodeId
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateCommentMutation>response.data.createComment;
  }
  async UpdateComment(
    input: UpdateCommentInput,
    condition?: ModelCommentConditionInput
  ): Promise<UpdateCommentMutation> {
    const statement = `mutation UpdateComment($input: UpdateCommentInput!, $condition: ModelCommentConditionInput) {
        updateComment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          message
          nodeId
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateCommentMutation>response.data.updateComment;
  }
  async DeleteComment(
    input: DeleteCommentInput,
    condition?: ModelCommentConditionInput
  ): Promise<DeleteCommentMutation> {
    const statement = `mutation DeleteComment($input: DeleteCommentInput!, $condition: ModelCommentConditionInput) {
        deleteComment(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          message
          nodeId
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteCommentMutation>response.data.deleteComment;
  }
  async CreateContact(
    input: CreateContactInput,
    condition?: ModelContactConditionInput
  ): Promise<CreateContactMutation> {
    const statement = `mutation CreateContact($input: CreateContactInput!, $condition: ModelContactConditionInput) {
        createContact(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateContactMutation>response.data.createContact;
  }
  async UpdateContact(
    input: UpdateContactInput,
    condition?: ModelContactConditionInput
  ): Promise<UpdateContactMutation> {
    const statement = `mutation UpdateContact($input: UpdateContactInput!, $condition: ModelContactConditionInput) {
        updateContact(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateContactMutation>response.data.updateContact;
  }
  async DeleteContact(
    input: DeleteContactInput,
    condition?: ModelContactConditionInput
  ): Promise<DeleteContactMutation> {
    const statement = `mutation DeleteContact($input: DeleteContactInput!, $condition: ModelContactConditionInput) {
        deleteContact(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteContactMutation>response.data.deleteContact;
  }
  async CreateExport(
    input: CreateExportInput,
    condition?: ModelExportConditionInput
  ): Promise<CreateExportMutation> {
    const statement = `mutation CreateExport($input: CreateExportInput!, $condition: ModelExportConditionInput) {
        createExport(input: $input, condition: $condition) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateExportMutation>response.data.createExport;
  }
  async UpdateExport(
    input: UpdateExportInput,
    condition?: ModelExportConditionInput
  ): Promise<UpdateExportMutation> {
    const statement = `mutation UpdateExport($input: UpdateExportInput!, $condition: ModelExportConditionInput) {
        updateExport(input: $input, condition: $condition) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateExportMutation>response.data.updateExport;
  }
  async DeleteExport(
    input: DeleteExportInput,
    condition?: ModelExportConditionInput
  ): Promise<DeleteExportMutation> {
    const statement = `mutation DeleteExport($input: DeleteExportInput!, $condition: ModelExportConditionInput) {
        deleteExport(input: $input, condition: $condition) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteExportMutation>response.data.deleteExport;
  }
  async CreateImage(
    input: CreateImageInput,
    condition?: ModelImageConditionInput
  ): Promise<CreateImageMutation> {
    const statement = `mutation CreateImage($input: CreateImageInput!, $condition: ModelImageConditionInput) {
        createImage(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateImageMutation>response.data.createImage;
  }
  async UpdateImage(
    input: UpdateImageInput,
    condition?: ModelImageConditionInput
  ): Promise<UpdateImageMutation> {
    const statement = `mutation UpdateImage($input: UpdateImageInput!, $condition: ModelImageConditionInput) {
        updateImage(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateImageMutation>response.data.updateImage;
  }
  async DeleteImage(
    input: DeleteImageInput,
    condition?: ModelImageConditionInput
  ): Promise<DeleteImageMutation> {
    const statement = `mutation DeleteImage($input: DeleteImageInput!, $condition: ModelImageConditionInput) {
        deleteImage(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteImageMutation>response.data.deleteImage;
  }
  async CreateEvent(
    input: CreateEventInput,
    condition?: ModelEventConditionInput
  ): Promise<CreateEventMutation> {
    const statement = `mutation CreateEvent($input: CreateEventInput!, $condition: ModelEventConditionInput) {
        createEvent(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateEventMutation>response.data.createEvent;
  }
  async UpdateEvent(
    input: UpdateEventInput,
    condition?: ModelEventConditionInput
  ): Promise<UpdateEventMutation> {
    const statement = `mutation UpdateEvent($input: UpdateEventInput!, $condition: ModelEventConditionInput) {
        updateEvent(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateEventMutation>response.data.updateEvent;
  }
  async DeleteEvent(
    input: DeleteEventInput,
    condition?: ModelEventConditionInput
  ): Promise<DeleteEventMutation> {
    const statement = `mutation DeleteEvent($input: DeleteEventInput!, $condition: ModelEventConditionInput) {
        deleteEvent(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteEventMutation>response.data.deleteEvent;
  }
  async CreateEventDescription(
    input: CreateEventDescriptionInput,
    condition?: ModelEventDescriptionConditionInput
  ): Promise<CreateEventDescriptionMutation> {
    const statement = `mutation CreateEventDescription($input: CreateEventDescriptionInput!, $condition: ModelEventDescriptionConditionInput) {
        createEventDescription(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateEventDescriptionMutation>response.data.createEventDescription;
  }
  async UpdateEventDescription(
    input: UpdateEventDescriptionInput,
    condition?: ModelEventDescriptionConditionInput
  ): Promise<UpdateEventDescriptionMutation> {
    const statement = `mutation UpdateEventDescription($input: UpdateEventDescriptionInput!, $condition: ModelEventDescriptionConditionInput) {
        updateEventDescription(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateEventDescriptionMutation>response.data.updateEventDescription;
  }
  async DeleteEventDescription(
    input: DeleteEventDescriptionInput,
    condition?: ModelEventDescriptionConditionInput
  ): Promise<DeleteEventDescriptionMutation> {
    const statement = `mutation DeleteEventDescription($input: DeleteEventDescriptionInput!, $condition: ModelEventDescriptionConditionInput) {
        deleteEventDescription(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteEventDescriptionMutation>response.data.deleteEventDescription;
  }
  async CreateVenue(
    input: CreateVenueInput,
    condition?: ModelVenueConditionInput
  ): Promise<CreateVenueMutation> {
    const statement = `mutation CreateVenue($input: CreateVenueInput!, $condition: ModelVenueConditionInput) {
        createVenue(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateVenueMutation>response.data.createVenue;
  }
  async UpdateVenue(
    input: UpdateVenueInput,
    condition?: ModelVenueConditionInput
  ): Promise<UpdateVenueMutation> {
    const statement = `mutation UpdateVenue($input: UpdateVenueInput!, $condition: ModelVenueConditionInput) {
        updateVenue(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateVenueMutation>response.data.updateVenue;
  }
  async DeleteVenue(
    input: DeleteVenueInput,
    condition?: ModelVenueConditionInput
  ): Promise<DeleteVenueMutation> {
    const statement = `mutation DeleteVenue($input: DeleteVenueInput!, $condition: ModelVenueConditionInput) {
        deleteVenue(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteVenueMutation>response.data.deleteVenue;
  }
  async CreateIndustry(
    input: CreateIndustryInput,
    condition?: ModelIndustryConditionInput
  ): Promise<CreateIndustryMutation> {
    const statement = `mutation CreateIndustry($input: CreateIndustryInput!, $condition: ModelIndustryConditionInput) {
        createIndustry(input: $input, condition: $condition) {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateIndustryMutation>response.data.createIndustry;
  }
  async UpdateIndustry(
    input: UpdateIndustryInput,
    condition?: ModelIndustryConditionInput
  ): Promise<UpdateIndustryMutation> {
    const statement = `mutation UpdateIndustry($input: UpdateIndustryInput!, $condition: ModelIndustryConditionInput) {
        updateIndustry(input: $input, condition: $condition) {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateIndustryMutation>response.data.updateIndustry;
  }
  async DeleteIndustry(
    input: DeleteIndustryInput,
    condition?: ModelIndustryConditionInput
  ): Promise<DeleteIndustryMutation> {
    const statement = `mutation DeleteIndustry($input: DeleteIndustryInput!, $condition: ModelIndustryConditionInput) {
        deleteIndustry(input: $input, condition: $condition) {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteIndustryMutation>response.data.deleteIndustry;
  }
  async CreateTask(
    input: CreateTaskInput,
    condition?: ModelTaskConditionInput
  ): Promise<CreateTaskMutation> {
    const statement = `mutation CreateTask($input: CreateTaskInput!, $condition: ModelTaskConditionInput) {
        createTask(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTaskMutation>response.data.createTask;
  }
  async UpdateTask(
    input: UpdateTaskInput,
    condition?: ModelTaskConditionInput
  ): Promise<UpdateTaskMutation> {
    const statement = `mutation UpdateTask($input: UpdateTaskInput!, $condition: ModelTaskConditionInput) {
        updateTask(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateTaskMutation>response.data.updateTask;
  }
  async DeleteTask(
    input: DeleteTaskInput,
    condition?: ModelTaskConditionInput
  ): Promise<DeleteTaskMutation> {
    const statement = `mutation DeleteTask($input: DeleteTaskInput!, $condition: ModelTaskConditionInput) {
        deleteTask(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteTaskMutation>response.data.deleteTask;
  }
  async CreateTag(
    input: CreateTagInput,
    condition?: ModelTagConditionInput
  ): Promise<CreateTagMutation> {
    const statement = `mutation CreateTag($input: CreateTagInput!, $condition: ModelTagConditionInput) {
        createTag(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateTagMutation>response.data.createTag;
  }
  async UpdateTag(
    input: UpdateTagInput,
    condition?: ModelTagConditionInput
  ): Promise<UpdateTagMutation> {
    const statement = `mutation UpdateTag($input: UpdateTagInput!, $condition: ModelTagConditionInput) {
        updateTag(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateTagMutation>response.data.updateTag;
  }
  async DeleteTag(
    input: DeleteTagInput,
    condition?: ModelTagConditionInput
  ): Promise<DeleteTagMutation> {
    const statement = `mutation DeleteTag($input: DeleteTagInput!, $condition: ModelTagConditionInput) {
        deleteTag(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteTagMutation>response.data.deleteTag;
  }
  async CreateSampleStatus(
    input: CreateSampleStatusInput,
    condition?: ModelSampleStatusConditionInput
  ): Promise<CreateSampleStatusMutation> {
    const statement = `mutation CreateSampleStatus($input: CreateSampleStatusInput!, $condition: ModelSampleStatusConditionInput) {
        createSampleStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSampleStatusMutation>response.data.createSampleStatus;
  }
  async UpdateSampleStatus(
    input: UpdateSampleStatusInput,
    condition?: ModelSampleStatusConditionInput
  ): Promise<UpdateSampleStatusMutation> {
    const statement = `mutation UpdateSampleStatus($input: UpdateSampleStatusInput!, $condition: ModelSampleStatusConditionInput) {
        updateSampleStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSampleStatusMutation>response.data.updateSampleStatus;
  }
  async DeleteSampleStatus(
    input: DeleteSampleStatusInput,
    condition?: ModelSampleStatusConditionInput
  ): Promise<DeleteSampleStatusMutation> {
    const statement = `mutation DeleteSampleStatus($input: DeleteSampleStatusInput!, $condition: ModelSampleStatusConditionInput) {
        deleteSampleStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSampleStatusMutation>response.data.deleteSampleStatus;
  }
  async CreateProductStatus(
    input: CreateProductStatusInput,
    condition?: ModelProductStatusConditionInput
  ): Promise<CreateProductStatusMutation> {
    const statement = `mutation CreateProductStatus($input: CreateProductStatusInput!, $condition: ModelProductStatusConditionInput) {
        createProductStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateProductStatusMutation>response.data.createProductStatus;
  }
  async UpdateProductStatus(
    input: UpdateProductStatusInput,
    condition?: ModelProductStatusConditionInput
  ): Promise<UpdateProductStatusMutation> {
    const statement = `mutation UpdateProductStatus($input: UpdateProductStatusInput!, $condition: ModelProductStatusConditionInput) {
        updateProductStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateProductStatusMutation>response.data.updateProductStatus;
  }
  async DeleteProductStatus(
    input: DeleteProductStatusInput,
    condition?: ModelProductStatusConditionInput
  ): Promise<DeleteProductStatusMutation> {
    const statement = `mutation DeleteProductStatus($input: DeleteProductStatusInput!, $condition: ModelProductStatusConditionInput) {
        deleteProductStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteProductStatusMutation>response.data.deleteProductStatus;
  }
  async CreateSupplierStatus(
    input: CreateSupplierStatusInput,
    condition?: ModelSupplierStatusConditionInput
  ): Promise<CreateSupplierStatusMutation> {
    const statement = `mutation CreateSupplierStatus($input: CreateSupplierStatusInput!, $condition: ModelSupplierStatusConditionInput) {
        createSupplierStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <CreateSupplierStatusMutation>response.data.createSupplierStatus;
  }
  async UpdateSupplierStatus(
    input: UpdateSupplierStatusInput,
    condition?: ModelSupplierStatusConditionInput
  ): Promise<UpdateSupplierStatusMutation> {
    const statement = `mutation UpdateSupplierStatus($input: UpdateSupplierStatusInput!, $condition: ModelSupplierStatusConditionInput) {
        updateSupplierStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <UpdateSupplierStatusMutation>response.data.updateSupplierStatus;
  }
  async DeleteSupplierStatus(
    input: DeleteSupplierStatusInput,
    condition?: ModelSupplierStatusConditionInput
  ): Promise<DeleteSupplierStatusMutation> {
    const statement = `mutation DeleteSupplierStatus($input: DeleteSupplierStatusInput!, $condition: ModelSupplierStatusConditionInput) {
        deleteSupplierStatus(input: $input, condition: $condition) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      input
    };
    if (condition) {
      gqlAPIServiceArguments.condition = condition;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <DeleteSupplierStatusMutation>response.data.deleteSupplierStatus;
  }
  async GetStreamToken(teamId?: string): Promise<GetStreamTokenQuery> {
    const statement = `query GetStreamToken($teamId: String) {
        getStreamToken(teamId: $teamId) {
          __typename
          token
          feedName
          feedId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetStreamTokenQuery>response.data.getStreamToken;
  }
  async GetStreamNotificationToken(
    teamId?: string
  ): Promise<GetStreamNotificationTokenQuery> {
    const statement = `query GetStreamNotificationToken($teamId: String) {
        getStreamNotificationToken(teamId: $teamId) {
          __typename
          token
          feedName
          feedId
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetStreamNotificationTokenQuery>(
      response.data.getStreamNotificationToken
    );
  }
  async SyncAProduct(teamId?: string): Promise<SyncAProductQuery> {
    const statement = `query SyncAProduct($teamId: String) {
        syncAProduct(teamId: $teamId) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          category {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          favorite
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          tags {
            __typename
            items {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          score
          attachments {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          extendedFields {
            __typename
            name
            value
          }
          incoTerm
          harbour
          masterCbm
          quantityPer20ft
          quantityPer40ft
          quantityPer40ftHC
          itemDimension {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          innerCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          masterCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          priceMatrix {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          leadTime {
            __typename
            value
            unit
          }
          sample
          samplePrice {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncAProductQuery>response.data.syncAProduct;
  }
  async SyncTeams(
    filter?: ModelTeamFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncTeamsQuery> {
    const statement = `query SyncTeams($filter: ModelTeamFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncTeams(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncTeamsQuery>response.data.syncTeams;
  }
  async SyncInvitations(
    filter?: ModelInvitationFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncInvitationsQuery> {
    const statement = `query SyncInvitations($filter: ModelInvitationFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncInvitations(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            email
            firstName
            lastName
            status
            secret
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncInvitationsQuery>response.data.syncInvitations;
  }
  async GetInvitation(id: string): Promise<GetInvitationQuery> {
    const statement = `query GetInvitation($id: ID!) {
        getInvitation(id: $id) {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetInvitationQuery>response.data.getInvitation;
  }
  async ListInvitations(
    id?: string,
    filter?: ModelInvitationFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListInvitationsQuery> {
    const statement = `query ListInvitations($id: ID, $filter: ModelInvitationFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listInvitations(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            teamId
            email
            firstName
            lastName
            status
            secret
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListInvitationsQuery>response.data.listInvitations;
  }
  async SyncTeamUsers(
    filter?: ModelTeamUserFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncTeamUsersQuery> {
    const statement = `query SyncTeamUsers($filter: ModelTeamUserFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncTeamUsers(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            teamId
            userId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            user {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            role
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncTeamUsersQuery>response.data.syncTeamUsers;
  }
  async SyncCompanies(
    filter?: ModelCompanyFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncCompaniesQuery> {
    const statement = `query SyncCompanies($filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncCompanies(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncCompaniesQuery>response.data.syncCompanies;
  }
  async GetCompany(id: string): Promise<GetCompanyQuery> {
    const statement = `query GetCompany($id: ID!) {
        getCompany(id: $id) {
          __typename
          id
          name
          ownerUserId
          owner {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          createdOn
          lastUpdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedOn
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetCompanyQuery>response.data.getCompany;
  }
  async ListCompanys(
    id?: string,
    filter?: ModelCompanyFilterInput,
    limit?: number,
    nextToken?: string,
    sortDirection?: ModelSortDirection
  ): Promise<ListCompanysQuery> {
    const statement = `query ListCompanys($id: ID, $filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String, $sortDirection: ModelSortDirection) {
        listCompanys(id: $id, filter: $filter, limit: $limit, nextToken: $nextToken, sortDirection: $sortDirection) {
          __typename
          items {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (id) {
      gqlAPIServiceArguments.id = id;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCompanysQuery>response.data.listCompanys;
  }
  async SyncUsers(
    filter?: ModelUserFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncUsersQuery> {
    const statement = `query SyncUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncUsers(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncUsersQuery>response.data.syncUsers;
  }
  async GetUser(id: string): Promise<GetUserQuery> {
    const statement = `query GetUser($id: ID!) {
        getUser(id: $id) {
          __typename
          id
          email
          firstName
          lastName
          phoneNumber
          preferredLanguage
          avatar
          creationDate
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetUserQuery>response.data.getUser;
  }
  async ListUsers(
    filter?: ModelUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListUsersQuery> {
    const statement = `query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {
        listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListUsersQuery>response.data.listUsers;
  }
  async SyncProducts(
    filter?: ModelProductFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncProductsQuery> {
    const statement = `query SyncProducts($filter: ModelProductFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncProducts(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncProductsQuery>response.data.syncProducts;
  }
  async GetProduct(id: string): Promise<GetProductQuery> {
    const statement = `query GetProduct($id: ID!) {
        getProduct(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          category {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          favorite
          assigneeId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          tags {
            __typename
            items {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          score
          attachments {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              url
              size
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          extendedFields {
            __typename
            name
            value
          }
          incoTerm
          harbour
          masterCbm
          quantityPer20ft
          quantityPer40ft
          quantityPer40ftHC
          itemDimension {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          innerCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          masterCarton {
            __typename
            height
            width
            length
            unit
            itemsQuantity
            weight
            weightUnit
            type
          }
          priceMatrix {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          leadTime {
            __typename
            value
            unit
          }
          sample
          samplePrice {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          projects {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetProductQuery>response.data.getProduct;
  }
  async ListProducts(
    filter?: ModelProductFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProductsQuery> {
    const statement = `query ListProducts($filter: ModelProductFilterInput, $limit: Int, $nextToken: String) {
        listProducts(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProductsQuery>response.data.listProducts;
  }
  async SyncAttachments(
    filter?: ModelAttachmentFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncAttachmentsQuery> {
    const statement = `query SyncAttachments($filter: ModelAttachmentFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncAttachments(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            url
            size
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncAttachmentsQuery>response.data.syncAttachments;
  }
  async GetAttachment(id: string): Promise<GetAttachmentQuery> {
    const statement = `query GetAttachment($id: ID!) {
        getAttachment(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetAttachmentQuery>response.data.getAttachment;
  }
  async ListAttachments(
    filter?: ModelAttachmentFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListAttachmentsQuery> {
    const statement = `query ListAttachments($filter: ModelAttachmentFilterInput, $limit: Int, $nextToken: String) {
        listAttachments(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            url
            size
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListAttachmentsQuery>response.data.listAttachments;
  }
  async SyncSuppliers(
    filter?: ModelSupplierFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncSuppliersQuery> {
    const statement = `query SyncSuppliers($filter: ModelSupplierFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncSuppliers(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncSuppliersQuery>response.data.syncSuppliers;
  }
  async GetSupplier(id: string): Promise<GetSupplierQuery> {
    const statement = `query GetSupplier($id: ID!) {
        getSupplier(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          fullName
          tradingName
          description
          website
          phoneNumber
          country
          city
          address
          officeEmail
          officePhone
          incoTerm
          harbour
          generalMOQ
          generalLeadTime
          favorite
          globalDatabaseId
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSupplierQuery>response.data.getSupplier;
  }
  async ListSuppliers(
    filter?: ModelSupplierFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSuppliersQuery> {
    const statement = `query ListSuppliers($filter: ModelSupplierFilterInput, $limit: Int, $nextToken: String) {
        listSuppliers(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSuppliersQuery>response.data.listSuppliers;
  }
  async SyncDescriptors(
    filter?: ModelDescriptorFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncDescriptorsQuery> {
    const statement = `query SyncDescriptors($filter: ModelDescriptorFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncDescriptors(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            sections {
              __typename
              name
            }
            target
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncDescriptorsQuery>response.data.syncDescriptors;
  }
  async GetDescriptor(id: string): Promise<GetDescriptorQuery> {
    const statement = `query GetDescriptor($id: ID!) {
        getDescriptor(id: $id) {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetDescriptorQuery>response.data.getDescriptor;
  }
  async ListDescriptors(
    filter?: ModelDescriptorFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListDescriptorsQuery> {
    const statement = `query ListDescriptors($filter: ModelDescriptorFilterInput, $limit: Int, $nextToken: String) {
        listDescriptors(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            sections {
              __typename
              name
            }
            target
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListDescriptorsQuery>response.data.listDescriptors;
  }
  async SyncProjects(
    filter?: ModelProjectFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncProjectsQuery> {
    const statement = `query SyncProjects($filter: ModelProjectFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncProjects(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncProjectsQuery>response.data.syncProjects;
  }
  async GetProject(id: string): Promise<GetProjectQuery> {
    const statement = `query GetProject($id: ID!) {
        getProject(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetProjectQuery>response.data.getProject;
  }
  async ListProjects(
    filter?: ModelProjectFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProjectsQuery> {
    const statement = `query ListProjects($filter: ModelProjectFilterInput, $limit: Int, $nextToken: String) {
        listProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProjectsQuery>response.data.listProjects;
  }
  async SyncProjectProducts(
    filter?: ModelProjectProductFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncProjectProductsQuery> {
    const statement = `query SyncProjectProducts($filter: ModelProjectProductFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncProjectProducts(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            projectId
            productId
            product {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            project {
              __typename
              id
              teamId
              name
              description
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncProjectProductsQuery>response.data.syncProjectProducts;
  }
  async SyncSamples(
    filter?: ModelSampleFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncSamplesQuery> {
    const statement = `query SyncSamples($filter: ModelSampleFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncSamples(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            description
            linkedProductId
            linkedProduct {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            linkedSupplierId
            linkedSupplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              nextToken
              startedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            paid
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncSamplesQuery>response.data.syncSamples;
  }
  async GetSample(id: string): Promise<GetSampleQuery> {
    const statement = `query GetSample($id: ID!) {
        getSample(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSampleQuery>response.data.getSample;
  }
  async ListSamples(
    filter?: ModelSampleFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSamplesQuery> {
    const statement = `query ListSamples($filter: ModelSampleFilterInput, $limit: Int, $nextToken: String) {
        listSamples(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            description
            linkedProductId
            linkedProduct {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            linkedSupplierId
            linkedSupplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              nextToken
              startedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            paid
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSamplesQuery>response.data.listSamples;
  }
  async SyncFieldDefinitions(
    filter?: ModelFieldDefinitionFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncFieldDefinitionsQuery> {
    const statement = `query SyncFieldDefinitions($filter: ModelFieldDefinitionFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncFieldDefinitions(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            label
            type
            name
            default
            metaData
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncFieldDefinitionsQuery>response.data.syncFieldDefinitions;
  }
  async GetFieldDefinition(id: string): Promise<GetFieldDefinitionQuery> {
    const statement = `query GetFieldDefinition($id: ID!) {
        getFieldDefinition(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetFieldDefinitionQuery>response.data.getFieldDefinition;
  }
  async ListFieldDefinitions(
    filter?: ModelFieldDefinitionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListFieldDefinitionsQuery> {
    const statement = `query ListFieldDefinitions($filter: ModelFieldDefinitionFilterInput, $limit: Int, $nextToken: String) {
        listFieldDefinitions(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            label
            type
            name
            default
            metaData
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListFieldDefinitionsQuery>response.data.listFieldDefinitions;
  }
  async SyncCategories(
    filter?: ModelCategoryFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncCategoriesQuery> {
    const statement = `query SyncCategories($filter: ModelCategoryFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncCategories(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncCategoriesQuery>response.data.syncCategories;
  }
  async GetCategory(id: string): Promise<GetCategoryQuery> {
    const statement = `query GetCategory($id: ID!) {
        getCategory(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetCategoryQuery>response.data.getCategory;
  }
  async ListCategorys(
    filter?: ModelCategoryFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListCategorysQuery> {
    const statement = `query ListCategorys($filter: ModelCategoryFilterInput, $limit: Int, $nextToken: String) {
        listCategorys(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCategorysQuery>response.data.listCategorys;
  }
  async SyncHelperLists(
    filter?: ModelhelperListFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncHelperListsQuery> {
    const statement = `query SyncHelperLists($filter: ModelhelperListFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncHelperLists(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            helperType
            code
            label
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncHelperListsQuery>response.data.syncHelperLists;
  }
  async GetHelperList(id: string): Promise<GetHelperListQuery> {
    const statement = `query GetHelperList($id: ID!) {
        getHelperList(id: $id) {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetHelperListQuery>response.data.getHelperList;
  }
  async ListHelperLists(
    filter?: ModelhelperListFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListHelperListsQuery> {
    const statement = `query ListHelperLists($filter: ModelhelperListFilterInput, $limit: Int, $nextToken: String) {
        listHelperLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            helperType
            code
            label
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListHelperListsQuery>response.data.listHelperLists;
  }
  async SyncComments(
    filter?: ModelCommentFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncCommentsQuery> {
    const statement = `query SyncComments($filter: ModelCommentFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncComments(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            message
            nodeId
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncCommentsQuery>response.data.syncComments;
  }
  async SyncContacts(
    filter?: ModelContactFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncContactsQuery> {
    const statement = `query SyncContacts($filter: ModelContactFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncContacts(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            phoneNumber
            email
            jobTitle
            supplierId
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncContactsQuery>response.data.syncContacts;
  }
  async GetContact(id: string): Promise<GetContactQuery> {
    const statement = `query GetContact($id: ID!) {
        getContact(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetContactQuery>response.data.getContact;
  }
  async ListContacts(
    filter?: ModelContactFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListContactsQuery> {
    const statement = `query ListContacts($filter: ModelContactFilterInput, $limit: Int, $nextToken: String) {
        listContacts(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            phoneNumber
            email
            jobTitle
            supplierId
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListContactsQuery>response.data.listContacts;
  }
  async SyncExports(
    filter?: ModelExportFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncExportsQuery> {
    const statement = `query SyncExports($filter: ModelExportFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncExports(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            format
            target
            options
            query
            status
            documentUrl
            errors
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncExportsQuery>response.data.syncExports;
  }
  async GetExport(id: string): Promise<GetExportQuery> {
    const statement = `query GetExport($id: ID!) {
        getExport(id: $id) {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetExportQuery>response.data.getExport;
  }
  async ListExports(
    filter?: ModelExportFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListExportsQuery> {
    const statement = `query ListExports($filter: ModelExportFilterInput, $limit: Int, $nextToken: String) {
        listExports(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            format
            target
            options
            query
            status
            documentUrl
            errors
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListExportsQuery>response.data.listExports;
  }
  async SyncImages(
    filter?: ModelImageFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncImagesQuery> {
    const statement = `query SyncImages($filter: ModelImageFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncImages(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncImagesQuery>response.data.syncImages;
  }
  async GetImage(id: string): Promise<GetImageQuery> {
    const statement = `query GetImage($id: ID!) {
        getImage(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetImageQuery>response.data.getImage;
  }
  async ListImages(
    filter?: ModelImageFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListImagesQuery> {
    const statement = `query ListImages($filter: ModelImageFilterInput, $limit: Int, $nextToken: String) {
        listImages(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListImagesQuery>response.data.listImages;
  }
  async SyncEvents(
    filter?: ModelEventFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncEventsQuery> {
    const statement = `query SyncEvents($filter: ModelEventFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncEvents(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            global
            name
            description {
              __typename
              id
              teamId
              name
              description
              website
              startDate
              endDate
              countryCode
              global
              supplierCount
              primaryColor
              secondaryColor
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncEventsQuery>response.data.syncEvents;
  }
  async GetEvent(id: string): Promise<GetEventQuery> {
    const statement = `query GetEvent($id: ID!) {
        getEvent(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetEventQuery>response.data.getEvent;
  }
  async ListEvents(
    filter?: ModelEventFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEventsQuery> {
    const statement = `query ListEvents($filter: ModelEventFilterInput, $limit: Int, $nextToken: String) {
        listEvents(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            global
            name
            description {
              __typename
              id
              teamId
              name
              description
              website
              startDate
              endDate
              countryCode
              global
              supplierCount
              primaryColor
              secondaryColor
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListEventsQuery>response.data.listEvents;
  }
  async SyncEventDescriptions(
    filter?: ModelEventDescriptionFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncEventDescriptionsQuery> {
    const statement = `query SyncEventDescriptions($filter: ModelEventDescriptionFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncEventDescriptions(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncEventDescriptionsQuery>response.data.syncEventDescriptions;
  }
  async GetEventDescription(id: string): Promise<GetEventDescriptionQuery> {
    const statement = `query GetEventDescription($id: ID!) {
        getEventDescription(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetEventDescriptionQuery>response.data.getEventDescription;
  }
  async ListEventDescriptions(
    filter?: ModelEventDescriptionFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListEventDescriptionsQuery> {
    const statement = `query ListEventDescriptions($filter: ModelEventDescriptionFilterInput, $limit: Int, $nextToken: String) {
        listEventDescriptions(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListEventDescriptionsQuery>response.data.listEventDescriptions;
  }
  async SyncVenues(
    filter?: ModelVenueFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncVenuesQuery> {
    const statement = `query SyncVenues($filter: ModelVenueFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncVenues(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncVenuesQuery>response.data.syncVenues;
  }
  async GetVenue(id: string): Promise<GetVenueQuery> {
    const statement = `query GetVenue($id: ID!) {
        getVenue(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetVenueQuery>response.data.getVenue;
  }
  async ListVenues(
    filter?: ModelVenueFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListVenuesQuery> {
    const statement = `query ListVenues($filter: ModelVenueFilterInput, $limit: Int, $nextToken: String) {
        listVenues(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListVenuesQuery>response.data.listVenues;
  }
  async SyncIndustries(
    filter?: ModelIndustryFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncIndustriesQuery> {
    const statement = `query SyncIndustries($filter: ModelIndustryFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncIndustries(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncIndustriesQuery>response.data.syncIndustries;
  }
  async GetIndustry(id: string): Promise<GetIndustryQuery> {
    const statement = `query GetIndustry($id: ID!) {
        getIndustry(id: $id) {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetIndustryQuery>response.data.getIndustry;
  }
  async ListIndustrys(
    filter?: ModelIndustryFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListIndustrysQuery> {
    const statement = `query ListIndustrys($filter: ModelIndustryFilterInput, $limit: Int, $nextToken: String) {
        listIndustrys(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListIndustrysQuery>response.data.listIndustrys;
  }
  async SyncTasks(
    filter?: ModelTaskFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncTasksQuery> {
    const statement = `query SyncTasks($filter: ModelTaskFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncTasks(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            dueDate
            completed
            completionDate
            assigneeUserId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            product {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            reference
            referenceKey
            inProgress
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncTasksQuery>response.data.syncTasks;
  }
  async GetTask(id: string): Promise<GetTaskQuery> {
    const statement = `query GetTask($id: ID!) {
        getTask(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetTaskQuery>response.data.getTask;
  }
  async ListTasks(
    filter?: ModelTaskFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTasksQuery> {
    const statement = `query ListTasks($filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {
        listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            dueDate
            completed
            completionDate
            assigneeUserId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            product {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            reference
            referenceKey
            inProgress
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTasksQuery>response.data.listTasks;
  }
  async SyncTags(
    filter?: ModelTagFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncTagsQuery> {
    const statement = `query SyncTags($filter: ModelTagFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncTags(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncTagsQuery>response.data.syncTags;
  }
  async GetTag(id: string): Promise<GetTagQuery> {
    const statement = `query GetTag($id: ID!) {
        getTag(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetTagQuery>response.data.getTag;
  }
  async ListTags(
    filter?: ModelTagFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTagsQuery> {
    const statement = `query ListTags($filter: ModelTagFilterInput, $limit: Int, $nextToken: String) {
        listTags(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTagsQuery>response.data.listTags;
  }
  async SyncSampleStatuses(
    filter?: ModelSampleStatusFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncSampleStatusesQuery> {
    const statement = `query SyncSampleStatuses($filter: ModelSampleStatusFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncSampleStatuses(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncSampleStatusesQuery>response.data.syncSampleStatuses;
  }
  async GetSampleStatus(id: string): Promise<GetSampleStatusQuery> {
    const statement = `query GetSampleStatus($id: ID!) {
        getSampleStatus(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSampleStatusQuery>response.data.getSampleStatus;
  }
  async ListSampleStatuss(
    filter?: ModelSampleStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSampleStatussQuery> {
    const statement = `query ListSampleStatuss($filter: ModelSampleStatusFilterInput, $limit: Int, $nextToken: String) {
        listSampleStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSampleStatussQuery>response.data.listSampleStatuss;
  }
  async SyncProductStatuses(
    filter?: ModelProductStatusFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncProductStatusesQuery> {
    const statement = `query SyncProductStatuses($filter: ModelProductStatusFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncProductStatuses(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncProductStatusesQuery>response.data.syncProductStatuses;
  }
  async GetProductStatus(id: string): Promise<GetProductStatusQuery> {
    const statement = `query GetProductStatus($id: ID!) {
        getProductStatus(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetProductStatusQuery>response.data.getProductStatus;
  }
  async ListProductStatuss(
    filter?: ModelProductStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProductStatussQuery> {
    const statement = `query ListProductStatuss($filter: ModelProductStatusFilterInput, $limit: Int, $nextToken: String) {
        listProductStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProductStatussQuery>response.data.listProductStatuss;
  }
  async SyncSupplierStatuses(
    filter?: ModelSupplierStatusFilterInput,
    limit?: number,
    nextToken?: string,
    lastSync?: number
  ): Promise<SyncSupplierStatusesQuery> {
    const statement = `query SyncSupplierStatuses($filter: ModelSupplierStatusFilterInput, $limit: Int, $nextToken: String, $lastSync: AWSTimestamp) {
        syncSupplierStatuses(filter: $filter, limit: $limit, nextToken: $nextToken, lastSync: $lastSync) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    if (lastSync) {
      gqlAPIServiceArguments.lastSync = lastSync;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SyncSupplierStatusesQuery>response.data.syncSupplierStatuses;
  }
  async GetSupplierStatus(id: string): Promise<GetSupplierStatusQuery> {
    const statement = `query GetSupplierStatus($id: ID!) {
        getSupplierStatus(id: $id) {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {
      id
    };
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <GetSupplierStatusQuery>response.data.getSupplierStatus;
  }
  async ListSupplierStatuss(
    filter?: ModelSupplierStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListSupplierStatussQuery> {
    const statement = `query ListSupplierStatuss($filter: ModelSupplierStatusFilterInput, $limit: Int, $nextToken: String) {
        listSupplierStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListSupplierStatussQuery>response.data.listSupplierStatuss;
  }
  async ListInvitationByTeam(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelInvitationFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListInvitationByTeamQuery> {
    const statement = `query ListInvitationByTeam($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelInvitationFilterInput, $limit: Int, $nextToken: String) {
        listInvitationByTeam(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            email
            firstName
            lastName
            status
            secret
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListInvitationByTeamQuery>response.data.listInvitationByTeam;
  }
  async ListTeamUserByUser(
    userId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelTeamUserFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListTeamUserByUserQuery> {
    const statement = `query ListTeamUserByUser($userId: ID, $sortDirection: ModelSortDirection, $filter: ModelTeamUserFilterInput, $limit: Int, $nextToken: String) {
        listTeamUserByUser(userId: $userId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            teamId
            userId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            user {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            role
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (userId) {
      gqlAPIServiceArguments.userId = userId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListTeamUserByUserQuery>response.data.listTeamUserByUser;
  }
  async ListCompanyByOwner(
    ownerUserId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelCompanyFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListCompanyByOwnerQuery> {
    const statement = `query ListCompanyByOwner($ownerUserId: ID, $sortDirection: ModelSortDirection, $filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String) {
        listCompanyByOwner(ownerUserId: $ownerUserId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (ownerUserId) {
      gqlAPIServiceArguments.ownerUserId = ownerUserId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListCompanyByOwnerQuery>response.data.listCompanyByOwner;
  }
  async ListProductByTeam(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelProductFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ListProductByTeamQuery> {
    const statement = `query ListProductByTeam($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelProductFilterInput, $limit: Int, $nextToken: String) {
        listProductByTeam(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ListProductByTeamQuery>response.data.listProductByTeam;
  }
  async SampleStatusByTeam(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSampleStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<SampleStatusByTeamQuery> {
    const statement = `query SampleStatusByTeam($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelSampleStatusFilterInput, $limit: Int, $nextToken: String) {
        SampleStatusByTeam(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SampleStatusByTeamQuery>response.data.SampleStatusByTeam;
  }
  async ProductStatusByTeam(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelProductStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<ProductStatusByTeamQuery> {
    const statement = `query ProductStatusByTeam($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelProductStatusFilterInput, $limit: Int, $nextToken: String) {
        ProductStatusByTeam(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <ProductStatusByTeamQuery>response.data.ProductStatusByTeam;
  }
  async SupplierStatusByTeam(
    teamId?: string,
    sortDirection?: ModelSortDirection,
    filter?: ModelSupplierStatusFilterInput,
    limit?: number,
    nextToken?: string
  ): Promise<SupplierStatusByTeamQuery> {
    const statement = `query SupplierStatusByTeam($teamId: ID, $sortDirection: ModelSortDirection, $filter: ModelSupplierStatusFilterInput, $limit: Int, $nextToken: String) {
        SupplierStatusByTeam(teamId: $teamId, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          startedAt
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (teamId) {
      gqlAPIServiceArguments.teamId = teamId;
    }
    if (sortDirection) {
      gqlAPIServiceArguments.sortDirection = sortDirection;
    }
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SupplierStatusByTeamQuery>response.data.SupplierStatusByTeam;
  }
  async SearchProducts(
    filter?: SearchableProductFilterInput,
    sort?: SearchableProductSortInput,
    limit?: number,
    nextToken?: string
  ): Promise<SearchProductsQuery> {
    const statement = `query SearchProducts($filter: SearchableProductFilterInput, $sort: SearchableProductSortInput, $limit: Int, $nextToken: String) {
        searchProducts(filter: $filter, sort: $sort, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          total
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchProductsQuery>response.data.searchProducts;
  }
  async SearchSuppliers(
    filter?: SearchableSupplierFilterInput,
    sort?: SearchableSupplierSortInput,
    limit?: number,
    nextToken?: string
  ): Promise<SearchSuppliersQuery> {
    const statement = `query SearchSuppliers($filter: SearchableSupplierFilterInput, $sort: SearchableSupplierSortInput, $limit: Int, $nextToken: String) {
        searchSuppliers(filter: $filter, sort: $sort, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          total
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchSuppliersQuery>response.data.searchSuppliers;
  }
  async SearchProjects(
    filter?: SearchableProjectFilterInput,
    sort?: SearchableProjectSortInput,
    limit?: number,
    nextToken?: string
  ): Promise<SearchProjectsQuery> {
    const statement = `query SearchProjects($filter: SearchableProjectFilterInput, $sort: SearchableProjectSortInput, $limit: Int, $nextToken: String) {
        searchProjects(filter: $filter, sort: $sort, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          total
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchProjectsQuery>response.data.searchProjects;
  }
  async SearchSamples(
    filter?: SearchableSampleFilterInput,
    sort?: SearchableSampleSortInput,
    limit?: number,
    nextToken?: string
  ): Promise<SearchSamplesQuery> {
    const statement = `query SearchSamples($filter: SearchableSampleFilterInput, $sort: SearchableSampleSortInput, $limit: Int, $nextToken: String) {
        searchSamples(filter: $filter, sort: $sort, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            status {
              __typename
              id
              teamId
              name
              inWorkflow
              category
              step
              final
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            description
            linkedProductId
            linkedProduct {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            linkedSupplierId
            linkedSupplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              nextToken
              startedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            paid
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          total
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchSamplesQuery>response.data.searchSamples;
  }
  async SearchContacts(
    filter?: SearchableContactFilterInput,
    sort?: SearchableContactSortInput,
    limit?: number,
    nextToken?: string
  ): Promise<SearchContactsQuery> {
    const statement = `query SearchContacts($filter: SearchableContactFilterInput, $sort: SearchableContactSortInput, $limit: Int, $nextToken: String) {
        searchContacts(filter: $filter, sort: $sort, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            phoneNumber
            email
            jobTitle
            supplierId
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          total
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchContactsQuery>response.data.searchContacts;
  }
  async SearchTasks(
    filter?: SearchableTaskFilterInput,
    sort?: SearchableTaskSortInput,
    limit?: number,
    nextToken?: string
  ): Promise<SearchTasksQuery> {
    const statement = `query SearchTasks($filter: SearchableTaskFilterInput, $sort: SearchableTaskSortInput, $limit: Int, $nextToken: String) {
        searchTasks(filter: $filter, sort: $sort, limit: $limit, nextToken: $nextToken) {
          __typename
          items {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            dueDate
            completed
            completionDate
            assigneeUserId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            product {
              __typename
              id
              teamId
              name
              description
              favorite
              assigneeId
              score
              incoTerm
              harbour
              masterCbm
              quantityPer20ft
              quantityPer40ft
              quantityPer40ftHC
              sample
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            reference
            referenceKey
            inProgress
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          nextToken
          total
        }
      }`;
    const gqlAPIServiceArguments: any = {};
    if (filter) {
      gqlAPIServiceArguments.filter = filter;
    }
    if (sort) {
      gqlAPIServiceArguments.sort = sort;
    }
    if (limit) {
      gqlAPIServiceArguments.limit = limit;
    }
    if (nextToken) {
      gqlAPIServiceArguments.nextToken = nextToken;
    }
    const response = (await API.graphql(
      graphqlOperation(statement, gqlAPIServiceArguments)
    )) as any;
    return <SearchTasksQuery>response.data.searchTasks;
  }
  OnCreateInvitationListener: Observable<
    OnCreateInvitationSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateInvitation {
        onCreateInvitation {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateInvitationSubscription>;

  OnUpdateInvitationListener: Observable<
    OnUpdateInvitationSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateInvitation {
        onUpdateInvitation {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateInvitationSubscription>;

  OnDeleteInvitationListener: Observable<
    OnDeleteInvitationSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteInvitation {
        onDeleteInvitation {
          __typename
          id
          teamId
          email
          firstName
          lastName
          status
          secret
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteInvitationSubscription>;

  OnCreateAttachmentListener: Observable<
    OnCreateAttachmentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateAttachment {
        onCreateAttachment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateAttachmentSubscription>;

  OnUpdateAttachmentListener: Observable<
    OnUpdateAttachmentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateAttachment {
        onUpdateAttachment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateAttachmentSubscription>;

  OnDeleteAttachmentListener: Observable<
    OnDeleteAttachmentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteAttachment {
        onDeleteAttachment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          url
          size
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteAttachmentSubscription>;

  OnCreateDescriptorListener: Observable<
    OnCreateDescriptorSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateDescriptor {
        onCreateDescriptor {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateDescriptorSubscription>;

  OnUpdateDescriptorListener: Observable<
    OnUpdateDescriptorSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateDescriptor {
        onUpdateDescriptor {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateDescriptorSubscription>;

  OnDeleteDescriptorListener: Observable<
    OnDeleteDescriptorSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteDescriptor {
        onDeleteDescriptor {
          __typename
          id
          teamId
          sections {
            __typename
            name
            fields {
              __typename
              fieldId
              defaultValue
              fixedValue
              required
              metadata
            }
          }
          target
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteDescriptorSubscription>;

  OnCreateProjectListener: Observable<
    OnCreateProjectSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateProject {
        onCreateProject {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateProjectSubscription>;

  OnUpdateProjectListener: Observable<
    OnUpdateProjectSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateProject {
        onUpdateProject {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateProjectSubscription>;

  OnDeleteProjectListener: Observable<
    OnDeleteProjectSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteProject {
        onDeleteProject {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          description
          products {
            __typename
            items {
              __typename
              id
              teamId
              projectId
              productId
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteProjectSubscription>;

  OnCreateProjectProductListener: Observable<
    OnCreateProjectProductSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateProjectProduct {
        onCreateProjectProduct {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          projectId
          productId
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          project {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateProjectProductSubscription>;

  OnUpdateProjectProductListener: Observable<
    OnUpdateProjectProductSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateProjectProduct {
        onUpdateProjectProduct {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          projectId
          productId
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          project {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateProjectProductSubscription>;

  OnDeleteProjectProductListener: Observable<
    OnDeleteProjectProductSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteProjectProduct {
        onDeleteProjectProduct {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          projectId
          productId
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          project {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            products {
              __typename
              nextToken
              startedAt
            }
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteProjectProductSubscription>;

  OnCreateSampleListener: Observable<OnCreateSampleSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateSample {
        onCreateSample {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateSampleSubscription>;

  OnUpdateSampleListener: Observable<OnUpdateSampleSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateSample {
        onUpdateSample {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateSampleSubscription>;

  OnDeleteSampleListener: Observable<OnDeleteSampleSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteSample {
        onDeleteSample {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          status {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            inWorkflow
            category
            step
            final
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          description
          linkedProductId
          linkedProduct {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          linkedSupplierId
          linkedSupplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          images {
            __typename
            items {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            nextToken
            startedAt
          }
          price {
            __typename
            currency
            value
            baseCurrencyValue
            label
            moq
          }
          paid
          archived
          reference
          referenceKey
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteSampleSubscription>;

  OnCreateFieldDefinitionListener: Observable<
    OnCreateFieldDefinitionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateFieldDefinition {
        onCreateFieldDefinition {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateFieldDefinitionSubscription>;

  OnUpdateFieldDefinitionListener: Observable<
    OnUpdateFieldDefinitionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateFieldDefinition {
        onUpdateFieldDefinition {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateFieldDefinitionSubscription>;

  OnDeleteFieldDefinitionListener: Observable<
    OnDeleteFieldDefinitionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteFieldDefinition {
        onDeleteFieldDefinition {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          label
          type
          name
          default
          metaData
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteFieldDefinitionSubscription>;

  OnCreateCategoryListener: Observable<
    OnCreateCategorySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateCategory {
        onCreateCategory {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateCategorySubscription>;

  OnUpdateCategoryListener: Observable<
    OnUpdateCategorySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateCategory {
        onUpdateCategory {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateCategorySubscription>;

  OnDeleteCategoryListener: Observable<
    OnDeleteCategorySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteCategory {
        onDeleteCategory {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteCategorySubscription>;

  OnCreateHelperListListener: Observable<
    OnCreateHelperListSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateHelperList {
        onCreateHelperList {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateHelperListSubscription>;

  OnUpdateHelperListListener: Observable<
    OnUpdateHelperListSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateHelperList {
        onUpdateHelperList {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateHelperListSubscription>;

  OnDeleteHelperListListener: Observable<
    OnDeleteHelperListSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteHelperList {
        onDeleteHelperList {
          __typename
          id
          helperType
          code
          label
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteHelperListSubscription>;

  OnCreateCommentListener: Observable<
    OnCreateCommentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateComment {
        onCreateComment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          message
          nodeId
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateCommentSubscription>;

  OnUpdateCommentListener: Observable<
    OnUpdateCommentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateComment {
        onUpdateComment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          message
          nodeId
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateCommentSubscription>;

  OnDeleteCommentListener: Observable<
    OnDeleteCommentSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteComment {
        onDeleteComment {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          message
          nodeId
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteCommentSubscription>;

  OnCreateContactListener: Observable<
    OnCreateContactSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateContact {
        onCreateContact {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateContactSubscription>;

  OnUpdateContactListener: Observable<
    OnUpdateContactSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateContact {
        onUpdateContact {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateContactSubscription>;

  OnDeleteContactListener: Observable<
    OnDeleteContactSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteContact {
        onDeleteContact {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          phoneNumber
          email
          jobTitle
          supplierId
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteContactSubscription>;

  OnCreateExportListener: Observable<OnCreateExportSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateExport {
        onCreateExport {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateExportSubscription>;

  OnUpdateExportListener: Observable<OnUpdateExportSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateExport {
        onUpdateExport {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateExportSubscription>;

  OnDeleteExportListener: Observable<OnDeleteExportSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteExport {
        onDeleteExport {
          __typename
          id
          teamId
          format
          target
          options
          query
          status
          documentUrl
          errors
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteExportSubscription>;

  OnCreateImageListener: Observable<OnCreateImageSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateImage {
        onCreateImage {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateImageSubscription>;

  OnUpdateImageListener: Observable<OnUpdateImageSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateImage {
        onUpdateImage {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateImageSubscription>;

  OnDeleteImageListener: Observable<OnDeleteImageSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteImage {
        onDeleteImage {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          fileName
          orientation
          imageType
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteImageSubscription>;

  OnCreateEventListener: Observable<OnCreateEventSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateEvent {
        onCreateEvent {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateEventSubscription>;

  OnUpdateEventListener: Observable<OnUpdateEventSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateEvent {
        onUpdateEvent {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateEventSubscription>;

  OnDeleteEventListener: Observable<OnDeleteEventSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteEvent {
        onDeleteEvent {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          global
          name
          description {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            description
            website
            startDate
            endDate
            countryCode
            venue {
              __typename
              id
              teamId
              city
              name
              latitude
              country
              longitude
              addressFull
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            logoImage {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            global
            supplierCount
            industry {
              __typename
              id
              name
              _version
              _deleted
              _lastChangedAt
            }
            primaryColor
            secondaryColor
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteEventSubscription>;

  OnCreateEventDescriptionListener: Observable<
    OnCreateEventDescriptionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateEventDescription {
        onCreateEventDescription {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateEventDescriptionSubscription>;

  OnUpdateEventDescriptionListener: Observable<
    OnUpdateEventDescriptionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateEventDescription {
        onUpdateEventDescription {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateEventDescriptionSubscription>;

  OnDeleteEventDescriptionListener: Observable<
    OnDeleteEventDescriptionSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteEventDescription {
        onDeleteEventDescription {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          website
          startDate
          endDate
          countryCode
          venue {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            city
            name
            latitude
            country
            longitude
            addressFull
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          logoImage {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            fileName
            orientation
            imageType
            createdAt
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedByUserId
            deletedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            deletedAt
            lastupdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          global
          supplierCount
          industry {
            __typename
            id
            name
            _version
            _deleted
            _lastChangedAt
          }
          primaryColor
          secondaryColor
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteEventDescriptionSubscription>;

  OnCreateVenueListener: Observable<OnCreateVenueSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateVenue {
        onCreateVenue {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateVenueSubscription>;

  OnUpdateVenueListener: Observable<OnUpdateVenueSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateVenue {
        onUpdateVenue {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateVenueSubscription>;

  OnDeleteVenueListener: Observable<OnDeleteVenueSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteVenue {
        onDeleteVenue {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          city
          name
          latitude
          country
          longitude
          addressFull
          createdAt
          createdByUserId
          createdBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedByUserId
          deletedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          deletedAt
          lastupdatedByUserId
          lastUpdatedBy {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteVenueSubscription>;

  OnCreateIndustryListener: Observable<
    OnCreateIndustrySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateIndustry {
        onCreateIndustry {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateIndustrySubscription>;

  OnUpdateIndustryListener: Observable<
    OnUpdateIndustrySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateIndustry {
        onUpdateIndustry {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateIndustrySubscription>;

  OnDeleteIndustryListener: Observable<
    OnDeleteIndustrySubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteIndustry {
        onDeleteIndustry {
          __typename
          id
          name
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteIndustrySubscription>;

  OnCreateTaskListener: Observable<OnCreateTaskSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateTask {
        onCreateTask {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateTaskSubscription>;

  OnUpdateTaskListener: Observable<OnUpdateTaskSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateTask {
        onUpdateTask {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateTaskSubscription>;

  OnDeleteTaskListener: Observable<OnDeleteTaskSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteTask {
        onDeleteTask {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          description
          dueDate
          completed
          completionDate
          assigneeUserId
          assignee {
            __typename
            id
            email
            firstName
            lastName
            phoneNumber
            preferredLanguage
            avatar
            creationDate
            _version
            _deleted
            _lastChangedAt
          }
          product {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            supplier {
              __typename
              id
              teamId
              name
              fullName
              tradingName
              description
              website
              phoneNumber
              country
              city
              address
              officeEmail
              officePhone
              incoTerm
              harbour
              generalMOQ
              generalLeadTime
              favorite
              globalDatabaseId
              archived
              reference
              referenceKey
              createdAt
              createdByUserId
              deletedByUSerId
              deletedAt
              lastUpdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            images {
              __typename
              id
              teamId
              fileName
              orientation
              imageType
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            price {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            category {
              __typename
              id
              teamId
              name
              createdAt
              createdByUserId
              deletedByUserId
              deletedAt
              lastupdatedByUserId
              lastUpdatedAt
              deleted
              _version
              _deleted
              _lastChangedAt
            }
            description
            favorite
            assigneeId
            assignee {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            tags {
              __typename
              nextToken
              startedAt
            }
            score
            attachments {
              __typename
              nextToken
              startedAt
            }
            extendedFields {
              __typename
              name
              value
            }
            incoTerm
            harbour
            masterCbm
            quantityPer20ft
            quantityPer40ft
            quantityPer40ftHC
            itemDimension {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            innerCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            masterCarton {
              __typename
              height
              width
              length
              unit
              itemsQuantity
              weight
              weightUnit
              type
            }
            priceMatrix {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            leadTime {
              __typename
              value
              unit
            }
            sample
            samplePrice {
              __typename
              currency
              value
              baseCurrencyValue
              label
              moq
            }
            projects {
              __typename
              nextToken
              startedAt
            }
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          supplier {
            __typename
            id
            teamId
            team {
              __typename
              id
              name
              ownerUserId
              companyId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            name
            fullName
            tradingName
            description
            website
            phoneNumber
            country
            city
            address
            officeEmail
            officePhone
            incoTerm
            harbour
            generalMOQ
            generalLeadTime
            favorite
            globalDatabaseId
            archived
            reference
            referenceKey
            createdAt
            createdByUserId
            deletedByUSerId
            deletedAt
            lastUpdatedByUserId
            lastUpdatedAt
            deleted
            _version
            _deleted
            _lastChangedAt
          }
          reference
          referenceKey
          inProgress
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteTaskSubscription>;

  OnCreateTagListener: Observable<OnCreateTagSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnCreateTag {
        onCreateTag {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateTagSubscription>;

  OnUpdateTagListener: Observable<OnUpdateTagSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnUpdateTag {
        onUpdateTag {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateTagSubscription>;

  OnDeleteTagListener: Observable<OnDeleteTagSubscription> = API.graphql(
    graphqlOperation(
      `subscription OnDeleteTag {
        onDeleteTag {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteTagSubscription>;

  OnCreateSampleStatusListener: Observable<
    OnCreateSampleStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateSampleStatus {
        onCreateSampleStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateSampleStatusSubscription>;

  OnUpdateSampleStatusListener: Observable<
    OnUpdateSampleStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateSampleStatus {
        onUpdateSampleStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateSampleStatusSubscription>;

  OnDeleteSampleStatusListener: Observable<
    OnDeleteSampleStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteSampleStatus {
        onDeleteSampleStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteSampleStatusSubscription>;

  OnCreateProductStatusListener: Observable<
    OnCreateProductStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateProductStatus {
        onCreateProductStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateProductStatusSubscription>;

  OnUpdateProductStatusListener: Observable<
    OnUpdateProductStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateProductStatus {
        onUpdateProductStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateProductStatusSubscription>;

  OnDeleteProductStatusListener: Observable<
    OnDeleteProductStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteProductStatus {
        onDeleteProductStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteProductStatusSubscription>;

  OnCreateSupplierStatusListener: Observable<
    OnCreateSupplierStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnCreateSupplierStatus {
        onCreateSupplierStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnCreateSupplierStatusSubscription>;

  OnUpdateSupplierStatusListener: Observable<
    OnUpdateSupplierStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnUpdateSupplierStatus {
        onUpdateSupplierStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnUpdateSupplierStatusSubscription>;

  OnDeleteSupplierStatusListener: Observable<
    OnDeleteSupplierStatusSubscription
  > = API.graphql(
    graphqlOperation(
      `subscription OnDeleteSupplierStatus {
        onDeleteSupplierStatus {
          __typename
          id
          teamId
          team {
            __typename
            id
            name
            ownerUserId
            owner {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            companyId
            company {
              __typename
              id
              name
              ownerUserId
              createdByUserId
              createdOn
              lastUpdatedByUserId
              lastUpdatedOn
              _version
              _deleted
              _lastChangedAt
            }
            createdByUserId
            createdBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            createdOn
            lastUpdatedByUserId
            lastUpdatedBy {
              __typename
              id
              email
              firstName
              lastName
              phoneNumber
              preferredLanguage
              avatar
              creationDate
              _version
              _deleted
              _lastChangedAt
            }
            lastUpdatedOn
            _version
            _deleted
            _lastChangedAt
          }
          name
          inWorkflow
          category
          step
          final
          createdAt
          createdByUserId
          deletedByUSerId
          deletedAt
          lastUpdatedByUserId
          lastUpdatedAt
          deleted
          _version
          _deleted
          _lastChangedAt
        }
      }`
    )
  ) as Observable<OnDeleteSupplierStatusSubscription>;
}
