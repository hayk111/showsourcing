# this is an auto generated file. This will be overwritten
query GetStreamToken($teamId: String) {
  getStreamToken(teamId: $teamId) {
    token
    feedName
    feedId
  }
}
query GetStreamNotificationToken($teamId: String) {
  getStreamNotificationToken(teamId: $teamId) {
    token
    feedName
    feedId
  }
}
query SyncAProduct($teamId: String) {
  syncAProduct(teamId: $teamId) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    supplier {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    images {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      orientation
      imageType
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    price {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    category {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    description
    favorite
    assigneeId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    tags {
      items {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    score
    attachments {
      items {
        id
        teamId
        fileName
        url
        size
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    extendedFields {
      name
      value
    }
    incoTerm
    harbour
    masterCbm
    quantityPer20ft
    quantityPer40ft
    quantityPer40ftHC
    itemDimension {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    innerCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    masterCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    priceMatrix {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    leadTime {
      value
      unit
    }
    sample
    samplePrice {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    projects {
      items {
        id
        teamId
        projectId
        productId
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query SyncTeams(
  $filter: ModelTeamFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeams(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncInvitations(
  $filter: ModelInvitationFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncInvitations(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      email
      firstName
      lastName
      status
      secret
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetInvitation($id: ID!) {
  getInvitation(id: $id) {
    id
    teamId
    email
    firstName
    lastName
    status
    secret
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListInvitations(
  $id: ID
  $filter: ModelInvitationFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listInvitations(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      teamId
      email
      firstName
      lastName
      status
      secret
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTeamUsers(
  $filter: ModelTeamUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTeamUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      teamId
      userId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      user {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      role
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncCompanies(
  $filter: ModelCompanyFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCompanies(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCompany($id: ID!) {
  getCompany(id: $id) {
    id
    name
    ownerUserId
    owner {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    createdOn
    lastUpdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedOn
    _version
    _deleted
    _lastChangedAt
  }
}
query ListCompanys(
  $id: ID
  $filter: ModelCompanyFilterInput
  $limit: Int
  $nextToken: String
  $sortDirection: ModelSortDirection
) {
  listCompanys(
    id: $id
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    sortDirection: $sortDirection
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    email
    firstName
    lastName
    phoneNumber
    preferredLanguage
    avatar
    creationDate
    _version
    _deleted
    _lastChangedAt
  }
}
query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncProducts(
  $filter: ModelProductFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProducts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      tags {
        nextToken
        startedAt
      }
      score
      attachments {
        nextToken
        startedAt
      }
      extendedFields {
        name
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      leadTime {
        value
        unit
      }
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      projects {
        nextToken
        startedAt
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProduct($id: ID!) {
  getProduct(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    supplier {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    images {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      orientation
      imageType
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    price {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    category {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    description
    favorite
    assigneeId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    tags {
      items {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    score
    attachments {
      items {
        id
        teamId
        fileName
        url
        size
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    extendedFields {
      name
      value
    }
    incoTerm
    harbour
    masterCbm
    quantityPer20ft
    quantityPer40ft
    quantityPer40ftHC
    itemDimension {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    innerCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    masterCarton {
      height
      width
      length
      unit
      itemsQuantity
      weight
      weightUnit
      type
    }
    priceMatrix {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    leadTime {
      value
      unit
    }
    sample
    samplePrice {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    projects {
      items {
        id
        teamId
        projectId
        productId
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListProducts(
  $filter: ModelProductFilterInput
  $limit: Int
  $nextToken: String
) {
  listProducts(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      tags {
        nextToken
        startedAt
      }
      score
      attachments {
        nextToken
        startedAt
      }
      extendedFields {
        name
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      leadTime {
        value
        unit
      }
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      projects {
        nextToken
        startedAt
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncAttachments(
  $filter: ModelAttachmentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncAttachments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      url
      size
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetAttachment($id: ID!) {
  getAttachment(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    fileName
    url
    size
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListAttachments(
  $filter: ModelAttachmentFilterInput
  $limit: Int
  $nextToken: String
) {
  listAttachments(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      url
      size
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSuppliers(
  $filter: ModelSupplierFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSuppliers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSupplier($id: ID!) {
  getSupplier(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    fullName
    tradingName
    description
    website
    phoneNumber
    country
    city
    address
    officeEmail
    officePhone
    incoTerm
    harbour
    generalMOQ
    generalLeadTime
    favorite
    globalDatabaseId
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSuppliers(
  $filter: ModelSupplierFilterInput
  $limit: Int
  $nextToken: String
) {
  listSuppliers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDescriptors(
  $filter: ModelDescriptorFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDescriptors(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      sections {
        name
      }
      target
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDescriptor($id: ID!) {
  getDescriptor(id: $id) {
    id
    teamId
    sections {
      name
      fields {
        fieldId
        defaultValue
        fixedValue
        required
        metadata
      }
    }
    target
    name
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDescriptors(
  $filter: ModelDescriptorFilterInput
  $limit: Int
  $nextToken: String
) {
  listDescriptors(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      sections {
        name
      }
      target
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncProjects(
  $filter: ModelProjectFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProjects(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProject($id: ID!) {
  getProject(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    logoImage {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      orientation
      imageType
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    description
    products {
      items {
        id
        teamId
        projectId
        productId
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListProjects(
  $filter: ModelProjectFilterInput
  $limit: Int
  $nextToken: String
) {
  listProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncProjectProducts(
  $filter: ModelProjectProductFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProjectProducts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      projectId
      productId
      product {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      project {
        id
        teamId
        name
        description
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSamples(
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSamples(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        nextToken
        startedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSample($id: ID!) {
  getSample(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    status {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    description
    linkedProductId
    linkedProduct {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      tags {
        nextToken
        startedAt
      }
      score
      attachments {
        nextToken
        startedAt
      }
      extendedFields {
        name
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      leadTime {
        value
        unit
      }
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      projects {
        nextToken
        startedAt
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    linkedSupplierId
    linkedSupplier {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    images {
      items {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    price {
      currency
      value
      baseCurrencyValue
      label
      moq
    }
    paid
    archived
    reference
    referenceKey
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSamples(
  $filter: ModelSampleFilterInput
  $limit: Int
  $nextToken: String
) {
  listSamples(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        nextToken
        startedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFieldDefinitions(
  $filter: ModelFieldDefinitionFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFieldDefinitions(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      label
      type
      name
      default
      metaData
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFieldDefinition($id: ID!) {
  getFieldDefinition(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    label
    type
    name
    default
    metaData
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFieldDefinitions(
  $filter: ModelFieldDefinitionFilterInput
  $limit: Int
  $nextToken: String
) {
  listFieldDefinitions(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      label
      type
      name
      default
      metaData
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncCategories(
  $filter: ModelCategoryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCategories(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCategory($id: ID!) {
  getCategory(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListCategorys(
  $filter: ModelCategoryFilterInput
  $limit: Int
  $nextToken: String
) {
  listCategorys(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncHelperLists(
  $filter: ModelhelperListFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncHelperLists(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      helperType
      code
      label
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetHelperList($id: ID!) {
  getHelperList(id: $id) {
    id
    helperType
    code
    label
    _version
    _deleted
    _lastChangedAt
  }
}
query ListHelperLists(
  $filter: ModelhelperListFilterInput
  $limit: Int
  $nextToken: String
) {
  listHelperLists(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      helperType
      code
      label
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncComments(
  $filter: ModelCommentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncComments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      message
      nodeId
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncContacts(
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncContacts(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetContact($id: ID!) {
  getContact(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    phoneNumber
    email
    jobTitle
    supplierId
    supplier {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListContacts(
  $filter: ModelContactFilterInput
  $limit: Int
  $nextToken: String
) {
  listContacts(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncExports(
  $filter: ModelExportFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncExports(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      format
      target
      options
      query
      status
      documentUrl
      errors
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetExport($id: ID!) {
  getExport(id: $id) {
    id
    teamId
    format
    target
    options
    query
    status
    documentUrl
    errors
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListExports(
  $filter: ModelExportFilterInput
  $limit: Int
  $nextToken: String
) {
  listExports(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      format
      target
      options
      query
      status
      documentUrl
      errors
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncImages(
  $filter: ModelImageFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncImages(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      orientation
      imageType
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetImage($id: ID!) {
  getImage(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    fileName
    orientation
    imageType
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListImages(
  $filter: ModelImageFilterInput
  $limit: Int
  $nextToken: String
) {
  listImages(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      orientation
      imageType
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncEvents(
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncEvents(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      global
      name
      description {
        id
        teamId
        name
        description
        website
        startDate
        endDate
        countryCode
        global
        supplierCount
        primaryColor
        secondaryColor
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetEvent($id: ID!) {
  getEvent(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    global
    name
    description {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      website
      startDate
      endDate
      countryCode
      venue {
        id
        teamId
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImage {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      global
      supplierCount
      industry {
        id
        name
        _version
        _deleted
        _lastChangedAt
      }
      primaryColor
      secondaryColor
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListEvents(
  $filter: ModelEventFilterInput
  $limit: Int
  $nextToken: String
) {
  listEvents(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      global
      name
      description {
        id
        teamId
        name
        description
        website
        startDate
        endDate
        countryCode
        global
        supplierCount
        primaryColor
        secondaryColor
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncEventDescriptions(
  $filter: ModelEventDescriptionFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncEventDescriptions(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      website
      startDate
      endDate
      countryCode
      venue {
        id
        teamId
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImage {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      global
      supplierCount
      industry {
        id
        name
        _version
        _deleted
        _lastChangedAt
      }
      primaryColor
      secondaryColor
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetEventDescription($id: ID!) {
  getEventDescription(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    description
    website
    startDate
    endDate
    countryCode
    venue {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    logoImage {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      fileName
      orientation
      imageType
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    global
    supplierCount
    industry {
      id
      name
      _version
      _deleted
      _lastChangedAt
    }
    primaryColor
    secondaryColor
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListEventDescriptions(
  $filter: ModelEventDescriptionFilterInput
  $limit: Int
  $nextToken: String
) {
  listEventDescriptions(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      website
      startDate
      endDate
      countryCode
      venue {
        id
        teamId
        city
        name
        latitude
        country
        longitude
        addressFull
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      logoImage {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      global
      supplierCount
      industry {
        id
        name
        _version
        _deleted
        _lastChangedAt
      }
      primaryColor
      secondaryColor
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncVenues(
  $filter: ModelVenueFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncVenues(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetVenue($id: ID!) {
  getVenue(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    city
    name
    latitude
    country
    longitude
    addressFull
    createdAt
    createdByUserId
    createdBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedByUserId
    deletedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    deletedAt
    lastupdatedByUserId
    lastUpdatedBy {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListVenues(
  $filter: ModelVenueFilterInput
  $limit: Int
  $nextToken: String
) {
  listVenues(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      city
      name
      latitude
      country
      longitude
      addressFull
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncIndustries(
  $filter: ModelIndustryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncIndustries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetIndustry($id: ID!) {
  getIndustry(id: $id) {
    id
    name
    _version
    _deleted
    _lastChangedAt
  }
}
query ListIndustrys(
  $filter: ModelIndustryFilterInput
  $limit: Int
  $nextToken: String
) {
  listIndustrys(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTasks(
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTasks(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      product {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetTask($id: ID!) {
  getTask(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    description
    dueDate
    completed
    completionDate
    assigneeUserId
    assignee {
      id
      email
      firstName
      lastName
      phoneNumber
      preferredLanguage
      avatar
      creationDate
      _version
      _deleted
      _lastChangedAt
    }
    product {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      tags {
        nextToken
        startedAt
      }
      score
      attachments {
        nextToken
        startedAt
      }
      extendedFields {
        name
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      leadTime {
        value
        unit
      }
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      projects {
        nextToken
        startedAt
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    supplier {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    reference
    referenceKey
    inProgress
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTasks(
  $filter: ModelTaskFilterInput
  $limit: Int
  $nextToken: String
) {
  listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      product {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTags(
  $filter: ModelTagFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTags(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetTag($id: ID!) {
  getTag(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTags($filter: ModelTagFilterInput, $limit: Int, $nextToken: String) {
  listTags(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSampleStatuses(
  $filter: ModelSampleStatusFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSampleStatuses(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSampleStatus($id: ID!) {
  getSampleStatus(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    inWorkflow
    category
    step
    final
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSampleStatuss(
  $filter: ModelSampleStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  listSampleStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncProductStatuses(
  $filter: ModelProductStatusFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncProductStatuses(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetProductStatus($id: ID!) {
  getProductStatus(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    inWorkflow
    category
    step
    final
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListProductStatuss(
  $filter: ModelProductStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  listProductStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncSupplierStatuses(
  $filter: ModelSupplierStatusFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncSupplierStatuses(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetSupplierStatus($id: ID!) {
  getSupplierStatus(id: $id) {
    id
    teamId
    team {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      companyId
      company {
        id
        name
        ownerUserId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    name
    inWorkflow
    category
    step
    final
    createdAt
    createdByUserId
    deletedByUSerId
    deletedAt
    lastUpdatedByUserId
    lastUpdatedAt
    deleted
    _version
    _deleted
    _lastChangedAt
  }
}
query ListSupplierStatuss(
  $filter: ModelSupplierStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  listSupplierStatuss(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListInvitationByTeam(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelInvitationFilterInput
  $limit: Int
  $nextToken: String
) {
  listInvitationByTeam(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      email
      firstName
      lastName
      status
      secret
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListTeamUserByUser(
  $userId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelTeamUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listTeamUserByUser(
    userId: $userId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      teamId
      userId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      user {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      role
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListCompanyByOwner(
  $ownerUserId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelCompanyFilterInput
  $limit: Int
  $nextToken: String
) {
  listCompanyByOwner(
    ownerUserId: $ownerUserId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      name
      ownerUserId
      owner {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      createdOn
      lastUpdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedOn
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ListProductByTeam(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelProductFilterInput
  $limit: Int
  $nextToken: String
) {
  listProductByTeam(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      tags {
        nextToken
        startedAt
      }
      score
      attachments {
        nextToken
        startedAt
      }
      extendedFields {
        name
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      leadTime {
        value
        unit
      }
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      projects {
        nextToken
        startedAt
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SampleStatusByTeam(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSampleStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  SampleStatusByTeam(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query ProductStatusByTeam(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelProductStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  ProductStatusByTeam(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SupplierStatusByTeam(
  $teamId: ID
  $sortDirection: ModelSortDirection
  $filter: ModelSupplierStatusFilterInput
  $limit: Int
  $nextToken: String
) {
  SupplierStatusByTeam(
    teamId: $teamId
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      inWorkflow
      category
      step
      final
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SearchProducts(
  $filter: SearchableProductFilterInput
  $sort: SearchableProductSortInput
  $limit: Int
  $nextToken: String
) {
  searchProducts(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      category {
        id
        teamId
        name
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      favorite
      assigneeId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      tags {
        nextToken
        startedAt
      }
      score
      attachments {
        nextToken
        startedAt
      }
      extendedFields {
        name
        value
      }
      incoTerm
      harbour
      masterCbm
      quantityPer20ft
      quantityPer40ft
      quantityPer40ftHC
      itemDimension {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      innerCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      masterCarton {
        height
        width
        length
        unit
        itemsQuantity
        weight
        weightUnit
        type
      }
      priceMatrix {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      leadTime {
        value
        unit
      }
      sample
      samplePrice {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      projects {
        nextToken
        startedAt
      }
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchSuppliers(
  $filter: SearchableSupplierFilterInput
  $sort: SearchableSupplierSortInput
  $limit: Int
  $nextToken: String
) {
  searchSuppliers(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      fullName
      tradingName
      description
      website
      phoneNumber
      country
      city
      address
      officeEmail
      officePhone
      incoTerm
      harbour
      generalMOQ
      generalLeadTime
      favorite
      globalDatabaseId
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchProjects(
  $filter: SearchableProjectFilterInput
  $sort: SearchableProjectSortInput
  $limit: Int
  $nextToken: String
) {
  searchProjects(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      logoImage {
        id
        teamId
        fileName
        orientation
        imageType
        createdAt
        createdByUserId
        deletedByUserId
        deletedAt
        lastupdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      description
      products {
        nextToken
        startedAt
      }
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchSamples(
  $filter: SearchableSampleFilterInput
  $sort: SearchableSampleSortInput
  $limit: Int
  $nextToken: String
) {
  searchSamples(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      status {
        id
        teamId
        name
        inWorkflow
        category
        step
        final
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      description
      linkedProductId
      linkedProduct {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      linkedSupplierId
      linkedSupplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      images {
        nextToken
        startedAt
      }
      price {
        currency
        value
        baseCurrencyValue
        label
        moq
      }
      paid
      archived
      reference
      referenceKey
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchContacts(
  $filter: SearchableContactFilterInput
  $sort: SearchableContactSortInput
  $limit: Int
  $nextToken: String
) {
  searchContacts(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      phoneNumber
      email
      jobTitle
      supplierId
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      createdByUserId
      createdBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedByUserId
      deletedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      deletedAt
      lastupdatedByUserId
      lastUpdatedBy {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
query SearchTasks(
  $filter: SearchableTaskFilterInput
  $sort: SearchableTaskSortInput
  $limit: Int
  $nextToken: String
) {
  searchTasks(
    filter: $filter
    sort: $sort
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      teamId
      team {
        id
        name
        ownerUserId
        companyId
        createdByUserId
        createdOn
        lastUpdatedByUserId
        lastUpdatedOn
        _version
        _deleted
        _lastChangedAt
      }
      name
      description
      dueDate
      completed
      completionDate
      assigneeUserId
      assignee {
        id
        email
        firstName
        lastName
        phoneNumber
        preferredLanguage
        avatar
        creationDate
        _version
        _deleted
        _lastChangedAt
      }
      product {
        id
        teamId
        name
        description
        favorite
        assigneeId
        score
        incoTerm
        harbour
        masterCbm
        quantityPer20ft
        quantityPer40ft
        quantityPer40ftHC
        sample
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      supplier {
        id
        teamId
        name
        fullName
        tradingName
        description
        website
        phoneNumber
        country
        city
        address
        officeEmail
        officePhone
        incoTerm
        harbour
        generalMOQ
        generalLeadTime
        favorite
        globalDatabaseId
        archived
        reference
        referenceKey
        createdAt
        createdByUserId
        deletedByUSerId
        deletedAt
        lastUpdatedByUserId
        lastUpdatedAt
        deleted
        _version
        _deleted
        _lastChangedAt
      }
      reference
      referenceKey
      inProgress
      createdAt
      createdByUserId
      deletedByUSerId
      deletedAt
      lastUpdatedByUserId
      lastUpdatedAt
      deleted
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    total
  }
}
